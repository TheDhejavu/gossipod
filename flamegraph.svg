<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="3327"><g><title>ping_node`tokio::runtime::builder::Builder::build (1 samples, 0.03%)</title><rect x="0.0000%" y="837" width="0.0301%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::Launch::launch (1 samples, 0.03%)</title><rect x="0.0000%" y="821" width="0.0301%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>ping_node`tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.03%)</title><rect x="0.0000%" y="805" width="0.0301%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>ping_node`tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.03%)</title><rect x="0.0000%" y="789" width="0.0301%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>ping_node`tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.03%)</title><rect x="0.0000%" y="773" width="0.0301%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>ping_node`std::thread::Builder::spawn_unchecked (1 samples, 0.03%)</title><rect x="0.0000%" y="757" width="0.0301%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>ping_node`std::sys::pal::unix::thread::Thread::new (1 samples, 0.03%)</title><rect x="0.0000%" y="741" width="0.0301%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.03%)</title><rect x="0.0000%" y="725" width="0.0301%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="0.0301%" y="805" width="0.0301%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2801%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`close (52 samples, 1.56%)</title><rect x="0.0902%" y="789" width="1.5630%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="52"/><text x="0.3402%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.06%)</title><rect x="1.6531%" y="789" width="0.0601%" height="15" fill="rgb(250,228,42)" fg:x="55" fg:w="2"/><text x="1.9031%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.24%)</title><rect x="1.7133%" y="789" width="0.2405%" height="15" fill="rgb(240,193,28)" fg:x="57" fg:w="8"/><text x="1.9633%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (1 samples, 0.03%)</title><rect x="1.9537%" y="789" width="0.0301%" height="15" fill="rgb(216,20,37)" fg:x="65" fg:w="1"/><text x="2.2037%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.12%)</title><rect x="1.9838%" y="789" width="0.1202%" height="15" fill="rgb(206,188,39)" fg:x="66" fg:w="4"/><text x="2.2338%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="2.1040%" y="789" width="0.0601%" height="15" fill="rgb(217,207,13)" fg:x="70" fg:w="2"/><text x="2.3540%" y="799.50"></text></g><g><title>ping_node`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.09%)</title><rect x="2.1641%" y="789" width="0.0902%" height="15" fill="rgb(231,73,38)" fg:x="72" fg:w="3"/><text x="2.4141%" y="799.50"></text></g><g><title>ping_node`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="2.2543%" y="789" width="0.0301%" height="15" fill="rgb(225,20,46)" fg:x="75" fg:w="1"/><text x="2.5043%" y="799.50"></text></g><g><title>ping_node`&lt;gossipod::codec::MessageCodec as tokio_util::codec::encoder::Encoder&lt;gossipod::message::Message&gt;&gt;::encode (3 samples, 0.09%)</title><rect x="2.2843%" y="789" width="0.0902%" height="15" fill="rgb(210,31,41)" fg:x="76" fg:w="3"/><text x="2.5343%" y="799.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::dial_tcp (1 samples, 0.03%)</title><rect x="2.3745%" y="789" width="0.0301%" height="15" fill="rgb(221,200,47)" fg:x="79" fg:w="1"/><text x="2.6245%" y="799.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::dial_tcp::_{{closure}} (1 samples, 0.03%)</title><rect x="2.4046%" y="789" width="0.0301%" height="15" fill="rgb(226,26,5)" fg:x="80" fg:w="1"/><text x="2.6546%" y="799.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::message::NetSvc::message_target::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="2.4346%" y="789" width="0.0301%" height="15" fill="rgb(249,33,26)" fg:x="81" fg:w="1"/><text x="2.6846%" y="799.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;ping_node::SwimNode::send_ping_to_all::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="2.4647%" y="789" width="0.0301%" height="15" fill="rgb(235,183,28)" fg:x="82" fg:w="1"/><text x="2.7147%" y="799.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (1 samples, 0.03%)</title><rect x="2.4947%" y="789" width="0.0301%" height="15" fill="rgb(221,5,38)" fg:x="83" fg:w="1"/><text x="2.7447%" y="799.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::signal::make_future::{{closure}}&gt; (2 samples, 0.06%)</title><rect x="2.5248%" y="789" width="0.0601%" height="15" fill="rgb(247,18,42)" fg:x="84" fg:w="2"/><text x="2.7748%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.18%)</title><rect x="3.0959%" y="773" width="0.1803%" height="15" fill="rgb(241,131,45)" fg:x="103" fg:w="6"/><text x="3.3459%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.03%)</title><rect x="3.2762%" y="773" width="0.0301%" height="15" fill="rgb(249,31,29)" fg:x="109" fg:w="1"/><text x="3.5262%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="3.3063%" y="757" width="0.0301%" height="15" fill="rgb(225,111,53)" fg:x="110" fg:w="1"/><text x="3.5563%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.12%)</title><rect x="3.3063%" y="773" width="0.1202%" height="15" fill="rgb(238,160,17)" fg:x="110" fg:w="4"/><text x="3.5563%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.09%)</title><rect x="3.3363%" y="757" width="0.0902%" height="15" fill="rgb(214,148,48)" fg:x="111" fg:w="3"/><text x="3.5863%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="3.3965%" y="741" width="0.0301%" height="15" fill="rgb(232,36,49)" fg:x="113" fg:w="1"/><text x="3.6465%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (40 samples, 1.20%)</title><rect x="3.4265%" y="773" width="1.2023%" height="15" fill="rgb(209,103,24)" fg:x="114" fg:w="40"/><text x="3.6765%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.06%)</title><rect x="4.6288%" y="773" width="0.0601%" height="15" fill="rgb(229,88,8)" fg:x="154" fg:w="2"/><text x="4.8788%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.09%)</title><rect x="4.6889%" y="773" width="0.0902%" height="15" fill="rgb(213,181,19)" fg:x="156" fg:w="3"/><text x="4.9389%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.39%)</title><rect x="4.7791%" y="757" width="0.3907%" height="15" fill="rgb(254,191,54)" fg:x="159" fg:w="13"/><text x="5.0291%" y="767.50"></text></g><g><title>ping_node`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (15 samples, 0.45%)</title><rect x="4.7791%" y="773" width="0.4509%" height="15" fill="rgb(241,83,37)" fg:x="159" fg:w="15"/><text x="5.0291%" y="783.50"></text></g><g><title>ping_node`bincode::config::int::cast_u64_to_usize (2 samples, 0.06%)</title><rect x="5.1698%" y="757" width="0.0601%" height="15" fill="rgb(233,36,39)" fg:x="172" fg:w="2"/><text x="5.4198%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.96%)</title><rect x="5.2600%" y="757" width="0.9618%" height="15" fill="rgb(226,3,54)" fg:x="175" fg:w="32"/><text x="5.5100%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.96%)</title><rect x="5.2600%" y="741" width="0.9618%" height="15" fill="rgb(245,192,40)" fg:x="175" fg:w="32"/><text x="5.5100%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.66%)</title><rect x="5.5606%" y="725" width="0.6613%" height="15" fill="rgb(238,167,29)" fg:x="185" fg:w="22"/><text x="5.8106%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.15%)</title><rect x="6.0715%" y="709" width="0.1503%" height="15" fill="rgb(232,182,51)" fg:x="202" fg:w="5"/><text x="6.3215%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.06%)</title><rect x="6.2218%" y="741" width="0.0601%" height="15" fill="rgb(231,60,39)" fg:x="207" fg:w="2"/><text x="6.4718%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.09%)</title><rect x="6.2819%" y="741" width="0.0902%" height="15" fill="rgb(208,69,12)" fg:x="209" fg:w="3"/><text x="6.5319%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.30%)</title><rect x="6.3721%" y="741" width="0.3006%" height="15" fill="rgb(235,93,37)" fg:x="212" fg:w="10"/><text x="6.6221%" y="751.50"></text></g><g><title>ping_node`&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.45%)</title><rect x="6.6727%" y="741" width="0.4509%" height="15" fill="rgb(213,116,39)" fg:x="222" fg:w="15"/><text x="6.9227%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.09%)</title><rect x="7.0334%" y="725" width="0.0902%" height="15" fill="rgb(222,207,29)" fg:x="234" fg:w="3"/><text x="7.2834%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="7.1536%" y="725" width="0.0301%" height="15" fill="rgb(206,96,30)" fg:x="238" fg:w="1"/><text x="7.4036%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.09%)</title><rect x="7.1836%" y="725" width="0.0902%" height="15" fill="rgb(218,138,4)" fg:x="239" fg:w="3"/><text x="7.4336%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.36%)</title><rect x="7.2738%" y="725" width="0.3607%" height="15" fill="rgb(250,191,14)" fg:x="242" fg:w="12"/><text x="7.5238%" y="735.50"></text></g><g><title>ping_node`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="7.6345%" y="725" width="0.0601%" height="15" fill="rgb(239,60,40)" fg:x="254" fg:w="2"/><text x="7.8845%" y="735.50"></text></g><g><title>ping_node`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 1.50%)</title><rect x="6.2218%" y="757" width="1.5029%" height="15" fill="rgb(206,27,48)" fg:x="207" fg:w="50"/><text x="6.4718%" y="767.50"></text></g><g><title>ping_node`&lt;gossipod::node::Node&lt;M&gt; as core::clone::Clone&gt;::clone (20 samples, 0.60%)</title><rect x="7.1235%" y="741" width="0.6011%" height="15" fill="rgb(225,35,8)" fg:x="237" fg:w="20"/><text x="7.3735%" y="751.50"></text></g><g><title>ping_node`__rdl_alloc (1 samples, 0.03%)</title><rect x="7.6946%" y="725" width="0.0301%" height="15" fill="rgb(250,213,24)" fg:x="256" fg:w="1"/><text x="7.9446%" y="735.50"></text></g><g><title>ping_node`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (84 samples, 2.52%)</title><rect x="5.2299%" y="773" width="2.5248%" height="15" fill="rgb(247,123,22)" fg:x="174" fg:w="84"/><text x="5.4799%" y="783.50">pi..</text></g><g><title>ping_node`&lt;gossipod::node::Node&lt;M&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="7.7247%" y="757" width="0.0301%" height="15" fill="rgb(231,138,38)" fg:x="257" fg:w="1"/><text x="7.9747%" y="767.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.06%)</title><rect x="7.7547%" y="773" width="0.0601%" height="15" fill="rgb(231,145,46)" fg:x="258" fg:w="2"/><text x="8.0047%" y="783.50"></text></g><g><title>ping_node`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.03%)</title><rect x="7.8148%" y="773" width="0.0301%" height="15" fill="rgb(251,118,11)" fg:x="260" fg:w="1"/><text x="8.0648%" y="783.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (2 samples, 0.06%)</title><rect x="7.8449%" y="773" width="0.0601%" height="15" fill="rgb(217,147,25)" fg:x="261" fg:w="2"/><text x="8.0949%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="7.9351%" y="757" width="0.0601%" height="15" fill="rgb(247,81,37)" fg:x="264" fg:w="2"/><text x="8.1851%" y="767.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="8.0252%" y="741" width="0.0301%" height="15" fill="rgb(209,12,38)" fg:x="267" fg:w="1"/><text x="8.2752%" y="751.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (9 samples, 0.27%)</title><rect x="7.9952%" y="757" width="0.2705%" height="15" fill="rgb(227,1,9)" fg:x="266" fg:w="9"/><text x="8.2452%" y="767.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (7 samples, 0.21%)</title><rect x="8.0553%" y="741" width="0.2104%" height="15" fill="rgb(248,47,43)" fg:x="268" fg:w="7"/><text x="8.3053%" y="751.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="8.2056%" y="725" width="0.0601%" height="15" fill="rgb(221,10,30)" fg:x="273" fg:w="2"/><text x="8.4556%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.06%)</title><rect x="8.2056%" y="709" width="0.0601%" height="15" fill="rgb(210,229,1)" fg:x="273" fg:w="2"/><text x="8.4556%" y="719.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="8.2657%" y="757" width="0.0301%" height="15" fill="rgb(222,148,37)" fg:x="275" fg:w="1"/><text x="8.5157%" y="767.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (20 samples, 0.60%)</title><rect x="8.2958%" y="757" width="0.6011%" height="15" fill="rgb(234,67,33)" fg:x="276" fg:w="20"/><text x="8.5458%" y="767.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.54%)</title><rect x="8.3559%" y="741" width="0.5410%" height="15" fill="rgb(247,98,35)" fg:x="278" fg:w="18"/><text x="8.6059%" y="751.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (18 samples, 0.54%)</title><rect x="8.3559%" y="725" width="0.5410%" height="15" fill="rgb(247,138,52)" fg:x="278" fg:w="18"/><text x="8.6059%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (18 samples, 0.54%)</title><rect x="8.3559%" y="709" width="0.5410%" height="15" fill="rgb(213,79,30)" fg:x="278" fg:w="18"/><text x="8.6059%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (18 samples, 0.54%)</title><rect x="8.3559%" y="693" width="0.5410%" height="15" fill="rgb(246,177,23)" fg:x="278" fg:w="18"/><text x="8.6059%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.54%)</title><rect x="8.3559%" y="677" width="0.5410%" height="15" fill="rgb(230,62,27)" fg:x="278" fg:w="18"/><text x="8.6059%" y="687.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::message::Message&gt; (5 samples, 0.15%)</title><rect x="8.8969%" y="757" width="0.1503%" height="15" fill="rgb(216,154,8)" fg:x="296" fg:w="5"/><text x="9.1469%" y="767.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_message_payload (5 samples, 0.15%)</title><rect x="9.0472%" y="757" width="0.1503%" height="15" fill="rgb(244,35,45)" fg:x="301" fg:w="5"/><text x="9.2972%" y="767.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.03%)</title><rect x="9.1674%" y="741" width="0.0301%" height="15" fill="rgb(251,115,12)" fg:x="305" fg:w="1"/><text x="9.4174%" y="751.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="9.1674%" y="725" width="0.0301%" height="15" fill="rgb(240,54,50)" fg:x="305" fg:w="1"/><text x="9.4174%" y="735.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="9.1674%" y="709" width="0.0301%" height="15" fill="rgb(233,84,52)" fg:x="305" fg:w="1"/><text x="9.4174%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="9.1674%" y="693" width="0.0301%" height="15" fill="rgb(207,117,47)" fg:x="305" fg:w="1"/><text x="9.4174%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="9.1674%" y="677" width="0.0301%" height="15" fill="rgb(249,43,39)" fg:x="305" fg:w="1"/><text x="9.4174%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="9.1674%" y="661" width="0.0301%" height="15" fill="rgb(209,38,44)" fg:x="305" fg:w="1"/><text x="9.4174%" y="671.50"></text></g><g><title>ping_node`&lt;gossipod::codec::MessageCodec as tokio_util::codec::encoder::Encoder&lt;gossipod::message::Message&gt;&gt;::encode (44 samples, 1.32%)</title><rect x="7.9050%" y="773" width="1.3225%" height="15" fill="rgb(236,212,23)" fg:x="263" fg:w="44"/><text x="8.1550%" y="783.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_socket_addr (1 samples, 0.03%)</title><rect x="9.1975%" y="757" width="0.0301%" height="15" fill="rgb(242,79,21)" fg:x="306" fg:w="1"/><text x="9.4475%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__connect (171 samples, 5.14%)</title><rect x="9.3778%" y="741" width="5.1398%" height="15" fill="rgb(211,96,35)" fg:x="312" fg:w="171"/><text x="9.6278%" y="751.50">libsys..</text></g><g><title>libsystem_kernel.dylib`getsockopt (21 samples, 0.63%)</title><rect x="14.5176%" y="741" width="0.6312%" height="15" fill="rgb(253,215,40)" fg:x="483" fg:w="21"/><text x="14.7676%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.03%)</title><rect x="15.1488%" y="725" width="0.0301%" height="15" fill="rgb(211,81,21)" fg:x="504" fg:w="1"/><text x="15.3988%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.03%)</title><rect x="15.1488%" y="709" width="0.0301%" height="15" fill="rgb(208,190,38)" fg:x="504" fg:w="1"/><text x="15.3988%" y="719.50"></text></g><g><title>ping_node`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (2 samples, 0.06%)</title><rect x="15.1488%" y="741" width="0.0601%" height="15" fill="rgb(235,213,38)" fg:x="504" fg:w="2"/><text x="15.3988%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::time::entry::TimerEntry::inner (1 samples, 0.03%)</title><rect x="15.1788%" y="725" width="0.0301%" height="15" fill="rgb(237,122,38)" fg:x="505" fg:w="1"/><text x="15.4288%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__connect (1 samples, 0.03%)</title><rect x="15.2089%" y="725" width="0.0301%" height="15" fill="rgb(244,218,35)" fg:x="506" fg:w="1"/><text x="15.4589%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (1 samples, 0.03%)</title><rect x="15.2089%" y="709" width="0.0301%" height="15" fill="rgb(240,68,47)" fg:x="506" fg:w="1"/><text x="15.4589%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__error (1 samples, 0.03%)</title><rect x="15.2390%" y="725" width="0.0301%" height="15" fill="rgb(210,16,53)" fg:x="507" fg:w="1"/><text x="15.4890%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`setsockopt (19 samples, 0.57%)</title><rect x="15.2690%" y="725" width="0.5711%" height="15" fill="rgb(235,124,12)" fg:x="508" fg:w="19"/><text x="15.5190%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`socket (240 samples, 7.21%)</title><rect x="15.8401%" y="725" width="7.2137%" height="15" fill="rgb(224,169,11)" fg:x="527" fg:w="240"/><text x="16.0901%" y="735.50">libsystem_..</text></g><g><title>libsystem_kernel.dylib`__fcntl (17 samples, 0.51%)</title><rect x="23.0538%" y="709" width="0.5110%" height="15" fill="rgb(250,166,2)" fg:x="767" fg:w="17"/><text x="23.3038%" y="719.50"></text></g><g><title>ping_node`mio::net::tcp::stream::TcpStream::connect (279 samples, 8.39%)</title><rect x="15.2089%" y="741" width="8.3859%" height="15" fill="rgb(242,216,29)" fg:x="506" fg:w="279"/><text x="15.4589%" y="751.50">ping_node`mi..</text></g><g><title>ping_node`mio::sys::unix::net::new_socket (18 samples, 0.54%)</title><rect x="23.0538%" y="725" width="0.5410%" height="15" fill="rgb(230,116,27)" fg:x="767" fg:w="18"/><text x="23.3038%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.03%)</title><rect x="23.5648%" y="709" width="0.0301%" height="15" fill="rgb(228,99,48)" fg:x="784" fg:w="1"/><text x="23.8148%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent (7 samples, 0.21%)</title><rect x="23.5948%" y="693" width="0.2104%" height="15" fill="rgb(253,11,6)" fg:x="785" fg:w="7"/><text x="23.8448%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Handle::add_source (12 samples, 0.36%)</title><rect x="23.5948%" y="709" width="0.3607%" height="15" fill="rgb(247,143,39)" fg:x="785" fg:w="12"/><text x="23.8448%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::allocate (5 samples, 0.15%)</title><rect x="23.8052%" y="693" width="0.1503%" height="15" fill="rgb(236,97,10)" fg:x="792" fg:w="5"/><text x="24.0552%" y="703.50"></text></g><g><title>ping_node`__rdl_alloc (4 samples, 0.12%)</title><rect x="23.8353%" y="677" width="0.1202%" height="15" fill="rgb(233,208,19)" fg:x="793" fg:w="4"/><text x="24.0853%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (4 samples, 0.12%)</title><rect x="23.8353%" y="661" width="0.1202%" height="15" fill="rgb(216,164,2)" fg:x="793" fg:w="4"/><text x="24.0853%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (4 samples, 0.12%)</title><rect x="23.8353%" y="645" width="0.1202%" height="15" fill="rgb(220,129,5)" fg:x="793" fg:w="4"/><text x="24.0853%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (4 samples, 0.12%)</title><rect x="23.8353%" y="629" width="0.1202%" height="15" fill="rgb(242,17,10)" fg:x="793" fg:w="4"/><text x="24.0853%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.12%)</title><rect x="23.8353%" y="613" width="0.1202%" height="15" fill="rgb(242,107,0)" fg:x="793" fg:w="4"/><text x="24.0853%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.12%)</title><rect x="23.8353%" y="597" width="0.1202%" height="15" fill="rgb(251,28,31)" fg:x="793" fg:w="4"/><text x="24.0853%" y="607.50"></text></g><g><title>ping_node`tokio::net::tcp::stream::TcpStream::new (13 samples, 0.39%)</title><rect x="23.5948%" y="741" width="0.3907%" height="15" fill="rgb(233,223,10)" fg:x="785" fg:w="13"/><text x="23.8448%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::new_with_interest_and_handle (13 samples, 0.39%)</title><rect x="23.5948%" y="725" width="0.3907%" height="15" fill="rgb(215,21,27)" fg:x="785" fg:w="13"/><text x="23.8448%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::allocate (1 samples, 0.03%)</title><rect x="23.9555%" y="709" width="0.0301%" height="15" fill="rgb(232,23,21)" fg:x="797" fg:w="1"/><text x="24.2055%" y="719.50"></text></g><g><title>ping_node`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (492 samples, 14.79%)</title><rect x="9.2275%" y="757" width="14.7881%" height="15" fill="rgb(244,5,23)" fg:x="307" fg:w="492"/><text x="9.4775%" y="767.50">ping_node`&lt;tokio::time:..</text></g><g><title>ping_node`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.03%)</title><rect x="23.9856%" y="741" width="0.0301%" height="15" fill="rgb(226,81,46)" fg:x="798" fg:w="1"/><text x="24.2356%" y="751.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="24.0156%" y="757" width="0.0301%" height="15" fill="rgb(247,70,30)" fg:x="799" fg:w="1"/><text x="24.2656%" y="767.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.03%)</title><rect x="24.0156%" y="741" width="0.0301%" height="15" fill="rgb(212,68,19)" fg:x="799" fg:w="1"/><text x="24.2656%" y="751.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.03%)</title><rect x="24.0156%" y="725" width="0.0301%" height="15" fill="rgb(240,187,13)" fg:x="799" fg:w="1"/><text x="24.2656%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.03%)</title><rect x="24.0156%" y="709" width="0.0301%" height="15" fill="rgb(223,113,26)" fg:x="799" fg:w="1"/><text x="24.2656%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.03%)</title><rect x="24.0457%" y="757" width="0.0301%" height="15" fill="rgb(206,192,2)" fg:x="800" fg:w="1"/><text x="24.2957%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::poll_write_ready (1 samples, 0.03%)</title><rect x="24.0757%" y="757" width="0.0301%" height="15" fill="rgb(241,108,4)" fg:x="801" fg:w="1"/><text x="24.3257%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::Handle::current (2 samples, 0.06%)</title><rect x="24.1058%" y="757" width="0.0601%" height="15" fill="rgb(247,173,49)" fg:x="802" fg:w="2"/><text x="24.3558%" y="767.50"></text></g><g><title>ping_node`tokio::time::instant::Instant::checked_add (1 samples, 0.03%)</title><rect x="24.1659%" y="757" width="0.0301%" height="15" fill="rgb(224,114,35)" fg:x="804" fg:w="1"/><text x="24.4159%" y="767.50"></text></g><g><title>ping_node`std::time::SystemTime::checked_add (1 samples, 0.03%)</title><rect x="24.1659%" y="741" width="0.0301%" height="15" fill="rgb(245,159,27)" fg:x="804" fg:w="1"/><text x="24.4159%" y="751.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::dial_tcp::_{{closure}} (499 samples, 15.00%)</title><rect x="9.2275%" y="773" width="14.9985%" height="15" fill="rgb(245,172,44)" fg:x="307" fg:w="499"/><text x="9.4775%" y="783.50">ping_node`&lt;gossipod::tr..</text></g><g><title>ping_node`tokio::time::sleep::Sleep::new_timeout (1 samples, 0.03%)</title><rect x="24.1960%" y="757" width="0.0301%" height="15" fill="rgb(236,23,11)" fg:x="805" fg:w="1"/><text x="24.4460%" y="767.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="24.1960%" y="741" width="0.0301%" height="15" fill="rgb(205,117,38)" fg:x="805" fg:w="1"/><text x="24.4460%" y="751.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::dial_tcp (1 samples, 0.03%)</title><rect x="24.2260%" y="773" width="0.0301%" height="15" fill="rgb(237,72,25)" fg:x="806" fg:w="1"/><text x="24.4760%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="24.2260%" y="757" width="0.0301%" height="15" fill="rgb(244,70,9)" fg:x="806" fg:w="1"/><text x="24.4760%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="24.2260%" y="741" width="0.0301%" height="15" fill="rgb(217,125,39)" fg:x="806" fg:w="1"/><text x="24.4760%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.03%)</title><rect x="24.2260%" y="725" width="0.0301%" height="15" fill="rgb(235,36,10)" fg:x="806" fg:w="1"/><text x="24.4760%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="24.2561%" y="757" width="0.0301%" height="15" fill="rgb(251,123,47)" fg:x="807" fg:w="1"/><text x="24.5061%" y="767.50"></text></g><g><title>ping_node`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.03%)</title><rect x="24.2861%" y="757" width="0.0301%" height="15" fill="rgb(221,13,13)" fg:x="808" fg:w="1"/><text x="24.5361%" y="767.50"></text></g><g><title>libsystem_c.dylib`send (1 samples, 0.03%)</title><rect x="24.3463%" y="709" width="0.0301%" height="15" fill="rgb(238,131,9)" fg:x="810" fg:w="1"/><text x="24.5963%" y="719.50"></text></g><g><title>ping_node`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (65 samples, 1.95%)</title><rect x="24.3463%" y="725" width="1.9537%" height="15" fill="rgb(211,50,8)" fg:x="810" fg:w="65"/><text x="24.5963%" y="735.50">p..</text></g><g><title>libsystem_kernel.dylib`__sendto (64 samples, 1.92%)</title><rect x="24.3763%" y="709" width="1.9237%" height="15" fill="rgb(245,182,24)" fg:x="811" fg:w="64"/><text x="24.6263%" y="719.50">l..</text></g><g><title>ping_node`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.06%)</title><rect x="26.3000%" y="725" width="0.0601%" height="15" fill="rgb(242,14,37)" fg:x="875" fg:w="2"/><text x="26.5500%" y="735.50"></text></g><g><title>ping_node`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (69 samples, 2.07%)</title><rect x="24.3162%" y="757" width="2.0739%" height="15" fill="rgb(246,228,12)" fg:x="809" fg:w="69"/><text x="24.5662%" y="767.50">p..</text></g><g><title>ping_node`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (68 samples, 2.04%)</title><rect x="24.3463%" y="741" width="2.0439%" height="15" fill="rgb(213,55,15)" fg:x="810" fg:w="68"/><text x="24.5963%" y="751.50">p..</text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.03%)</title><rect x="26.3601%" y="725" width="0.0301%" height="15" fill="rgb(209,9,3)" fg:x="877" fg:w="1"/><text x="26.6101%" y="735.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1 samples, 0.03%)</title><rect x="26.3901%" y="757" width="0.0301%" height="15" fill="rgb(230,59,30)" fg:x="878" fg:w="1"/><text x="26.6401%" y="767.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="26.4202%" y="757" width="0.0301%" height="15" fill="rgb(209,121,21)" fg:x="879" fg:w="1"/><text x="26.6702%" y="767.50"></text></g><g><title>ping_node`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.03%)</title><rect x="26.4503%" y="757" width="0.0301%" height="15" fill="rgb(220,109,13)" fg:x="880" fg:w="1"/><text x="26.7003%" y="767.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::write_to_tcp::_{{closure}} (75 samples, 2.25%)</title><rect x="24.2561%" y="773" width="2.2543%" height="15" fill="rgb(232,18,1)" fg:x="807" fg:w="75"/><text x="24.5061%" y="783.50">p..</text></g><g><title>ping_node`tokio::runtime::scheduler::Handle::current (1 samples, 0.03%)</title><rect x="26.4803%" y="757" width="0.0301%" height="15" fill="rgb(215,41,42)" fg:x="881" fg:w="1"/><text x="26.7303%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.60%)</title><rect x="26.6005%" y="757" width="0.6011%" height="15" fill="rgb(224,123,36)" fg:x="885" fg:w="20"/><text x="26.8505%" y="767.50"></text></g><g><title>ping_node`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="27.2017%" y="757" width="0.0301%" height="15" fill="rgb(240,125,3)" fg:x="905" fg:w="1"/><text x="27.4517%" y="767.50"></text></g><g><title>ping_node`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="27.2317%" y="757" width="0.0301%" height="15" fill="rgb(205,98,50)" fg:x="906" fg:w="1"/><text x="27.4817%" y="767.50"></text></g><g><title>ping_node`tokio::signal::make_future::_{{closure}} (17 samples, 0.51%)</title><rect x="27.2618%" y="741" width="0.5110%" height="15" fill="rgb(205,185,37)" fg:x="907" fg:w="17"/><text x="27.5118%" y="751.50"></text></g><g><title>ping_node`tokio::sync::notify::Notified::poll_notified (2 samples, 0.06%)</title><rect x="27.7127%" y="725" width="0.0601%" height="15" fill="rgb(238,207,15)" fg:x="922" fg:w="2"/><text x="27.9627%" y="735.50"></text></g><g><title>ping_node`tokio::signal::RxFuture::poll_recv (19 samples, 0.57%)</title><rect x="27.2618%" y="757" width="0.5711%" height="15" fill="rgb(213,199,42)" fg:x="907" fg:w="19"/><text x="27.5118%" y="767.50"></text></g><g><title>ping_node`tokio::sync::notify::Notified::poll_notified (2 samples, 0.06%)</title><rect x="27.7728%" y="741" width="0.0601%" height="15" fill="rgb(235,201,11)" fg:x="924" fg:w="2"/><text x="28.0228%" y="751.50"></text></g><g><title>ping_node`tokio::signal::make_future::_{{closure}} (1 samples, 0.03%)</title><rect x="27.8329%" y="757" width="0.0301%" height="15" fill="rgb(207,46,11)" fg:x="926" fg:w="1"/><text x="28.0829%" y="767.50"></text></g><g><title>ping_node`tokio::signal::registry::Globals::register_listener (2 samples, 0.06%)</title><rect x="27.8930%" y="741" width="0.0601%" height="15" fill="rgb(241,35,35)" fg:x="928" fg:w="2"/><text x="28.1430%" y="751.50"></text></g><g><title>ping_node`tokio::signal::unix::signal (6 samples, 0.18%)</title><rect x="27.8629%" y="757" width="0.1803%" height="15" fill="rgb(243,32,47)" fg:x="927" fg:w="6"/><text x="28.1129%" y="767.50"></text></g><g><title>ping_node`tokio::signal::unix::signal_with_handle (3 samples, 0.09%)</title><rect x="27.9531%" y="741" width="0.0902%" height="15" fill="rgb(247,202,23)" fg:x="930" fg:w="3"/><text x="28.2031%" y="751.50"></text></g><g><title>ping_node`tokio::signal::unix::signal_with_handle (1 samples, 0.03%)</title><rect x="28.0433%" y="757" width="0.0301%" height="15" fill="rgb(219,102,11)" fg:x="933" fg:w="1"/><text x="28.2933%" y="767.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="28.0733%" y="741" width="0.0301%" height="15" fill="rgb(243,110,44)" fg:x="934" fg:w="1"/><text x="28.3233%" y="751.50"></text></g><g><title>ping_node`&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (1 samples, 0.03%)</title><rect x="28.1034%" y="741" width="0.0301%" height="15" fill="rgb(222,74,54)" fg:x="935" fg:w="1"/><text x="28.3534%" y="751.50"></text></g><g><title>ping_node`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (11 samples, 0.33%)</title><rect x="28.0733%" y="757" width="0.3306%" height="15" fill="rgb(216,99,12)" fg:x="934" fg:w="11"/><text x="28.3233%" y="767.50"></text></g><g><title>ping_node`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (9 samples, 0.27%)</title><rect x="28.1335%" y="741" width="0.2705%" height="15" fill="rgb(226,22,26)" fg:x="936" fg:w="9"/><text x="28.3835%" y="751.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="28.4340%" y="741" width="0.0301%" height="15" fill="rgb(217,163,10)" fg:x="946" fg:w="1"/><text x="28.6840%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::park::clone (1 samples, 0.03%)</title><rect x="28.4641%" y="725" width="0.0301%" height="15" fill="rgb(213,25,53)" fg:x="947" fg:w="1"/><text x="28.7141%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::driver::IoHandle::unpark (1 samples, 0.03%)</title><rect x="28.4941%" y="709" width="0.0301%" height="15" fill="rgb(252,105,26)" fg:x="948" fg:w="1"/><text x="28.7441%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.03%)</title><rect x="28.4941%" y="693" width="0.0301%" height="15" fill="rgb(220,39,43)" fg:x="948" fg:w="1"/><text x="28.7441%" y="703.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (68 samples, 2.04%)</title><rect x="26.5104%" y="773" width="2.0439%" height="15" fill="rgb(229,68,48)" fg:x="882" fg:w="68"/><text x="26.7604%" y="783.50">p..</text></g><g><title>ping_node`tokio::time::interval::Interval::poll_tick (5 samples, 0.15%)</title><rect x="28.4040%" y="757" width="0.1503%" height="15" fill="rgb(252,8,32)" fg:x="945" fg:w="5"/><text x="28.6540%" y="767.50"></text></g><g><title>ping_node`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (3 samples, 0.09%)</title><rect x="28.4641%" y="741" width="0.0902%" height="15" fill="rgb(223,20,43)" fg:x="947" fg:w="3"/><text x="28.7141%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (2 samples, 0.06%)</title><rect x="28.4941%" y="725" width="0.0601%" height="15" fill="rgb(229,81,49)" fg:x="948" fg:w="2"/><text x="28.7441%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.03%)</title><rect x="28.5242%" y="709" width="0.0301%" height="15" fill="rgb(236,28,36)" fg:x="949" fg:w="1"/><text x="28.7742%" y="719.50"></text></g><g><title>ping_node`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.06%)</title><rect x="28.5543%" y="773" width="0.0601%" height="15" fill="rgb(249,185,26)" fg:x="950" fg:w="2"/><text x="28.8043%" y="783.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::Gossipod::send::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="28.6144%" y="773" width="0.0301%" height="15" fill="rgb(249,174,33)" fg:x="952" fg:w="1"/><text x="28.8644%" y="783.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::message::Message&gt; (1 samples, 0.03%)</title><rect x="28.6444%" y="773" width="0.0301%" height="15" fill="rgb(233,201,37)" fg:x="953" fg:w="1"/><text x="28.8944%" y="783.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::message::NetSvc::message_target::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="28.6745%" y="773" width="0.0301%" height="15" fill="rgb(221,78,26)" fg:x="954" fg:w="1"/><text x="28.9245%" y="783.50"></text></g><g><title>ping_node`&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="28.7947%" y="757" width="0.0301%" height="15" fill="rgb(250,127,30)" fg:x="958" fg:w="1"/><text x="29.0447%" y="767.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::signal::make_future::{{closure}}&gt; (6 samples, 0.18%)</title><rect x="28.7045%" y="773" width="0.1803%" height="15" fill="rgb(230,49,44)" fg:x="955" fg:w="6"/><text x="28.9545%" y="783.50"></text></g><g><title>ping_node`tokio::sync::notify::Notify::notify_waiters (2 samples, 0.06%)</title><rect x="28.8248%" y="757" width="0.0601%" height="15" fill="rgb(229,67,23)" fg:x="959" fg:w="2"/><text x="29.0748%" y="767.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1 samples, 0.03%)</title><rect x="28.8849%" y="773" width="0.0301%" height="15" fill="rgb(249,83,47)" fg:x="961" fg:w="1"/><text x="29.1349%" y="783.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;tokio::net::tcp::stream::TcpStream::connect&lt;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="28.9149%" y="773" width="0.0301%" height="15" fill="rgb(215,43,3)" fg:x="962" fg:w="1"/><text x="29.1649%" y="783.50"></text></g><g><title>ping_node`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="28.9450%" y="757" width="0.0601%" height="15" fill="rgb(238,154,13)" fg:x="963" fg:w="2"/><text x="29.1950%" y="767.50"></text></g><g><title>ping_node`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="29.0051%" y="757" width="0.0301%" height="15" fill="rgb(219,56,2)" fg:x="965" fg:w="1"/><text x="29.2551%" y="767.50"></text></g><g><title>ping_node`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.03%)</title><rect x="29.0352%" y="757" width="0.0301%" height="15" fill="rgb(233,0,4)" fg:x="966" fg:w="1"/><text x="29.2852%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.06%)</title><rect x="29.0652%" y="741" width="0.0601%" height="15" fill="rgb(235,30,7)" fg:x="967" fg:w="2"/><text x="29.3152%" y="751.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::get_local_node::_{{closure}} (8 samples, 0.24%)</title><rect x="28.9450%" y="773" width="0.2405%" height="15" fill="rgb(250,79,13)" fg:x="963" fg:w="8"/><text x="29.1950%" y="783.50"></text></g><g><title>ping_node`&lt;gossipod::node::Node&lt;M&gt; as core::clone::Clone&gt;::clone (4 samples, 0.12%)</title><rect x="29.0652%" y="757" width="0.1202%" height="15" fill="rgb(211,146,34)" fg:x="967" fg:w="4"/><text x="29.3152%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="29.1253%" y="741" width="0.0601%" height="15" fill="rgb(228,22,38)" fg:x="969" fg:w="2"/><text x="29.3753%" y="751.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_socket_addr (3 samples, 0.09%)</title><rect x="29.1855%" y="773" width="0.0902%" height="15" fill="rgb(235,168,5)" fg:x="971" fg:w="3"/><text x="29.4355%" y="783.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="29.2756%" y="757" width="0.0301%" height="15" fill="rgb(221,155,16)" fg:x="974" fg:w="1"/><text x="29.5256%" y="767.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (1 samples, 0.03%)</title><rect x="29.4259%" y="725" width="0.0301%" height="15" fill="rgb(215,215,53)" fg:x="979" fg:w="1"/><text x="29.6759%" y="735.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.03%)</title><rect x="29.5461%" y="709" width="0.0301%" height="15" fill="rgb(223,4,10)" fg:x="983" fg:w="1"/><text x="29.7961%" y="719.50"></text></g><g><title>ping_node`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="29.5762%" y="709" width="0.0301%" height="15" fill="rgb(234,103,6)" fg:x="984" fg:w="1"/><text x="29.8262%" y="719.50"></text></g><g><title>ping_node`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="29.7565%" y="693" width="0.0301%" height="15" fill="rgb(227,97,0)" fg:x="990" fg:w="1"/><text x="30.0065%" y="703.50"></text></g><g><title>ping_node`&lt;core::net::socket_addr::SocketAddr as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="29.7866%" y="693" width="0.0601%" height="15" fill="rgb(234,150,53)" fg:x="991" fg:w="2"/><text x="30.0366%" y="703.50"></text></g><g><title>ping_node`&lt;anstyle::style::Style as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="29.8467%" y="677" width="0.0301%" height="15" fill="rgb(228,201,54)" fg:x="993" fg:w="1"/><text x="30.0967%" y="687.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (2 samples, 0.06%)</title><rect x="29.8768%" y="677" width="0.0601%" height="15" fill="rgb(222,22,37)" fg:x="994" fg:w="2"/><text x="30.1268%" y="687.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="30.2375%" y="645" width="0.0301%" height="15" fill="rgb(237,53,32)" fg:x="1006" fg:w="1"/><text x="30.4875%" y="655.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (15 samples, 0.45%)</title><rect x="29.8467%" y="693" width="0.4509%" height="15" fill="rgb(233,25,53)" fg:x="993" fg:w="15"/><text x="30.0967%" y="703.50"></text></g><g><title>ping_node`core::fmt::write (12 samples, 0.36%)</title><rect x="29.9369%" y="677" width="0.3607%" height="15" fill="rgb(210,40,34)" fg:x="996" fg:w="12"/><text x="30.1869%" y="687.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (8 samples, 0.24%)</title><rect x="30.0571%" y="661" width="0.2405%" height="15" fill="rgb(241,220,44)" fg:x="1000" fg:w="8"/><text x="30.3071%" y="671.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="30.2675%" y="645" width="0.0301%" height="15" fill="rgb(235,28,35)" fg:x="1007" fg:w="1"/><text x="30.5175%" y="655.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="30.4779%" y="661" width="0.0301%" height="15" fill="rgb(210,56,17)" fg:x="1014" fg:w="1"/><text x="30.7279%" y="671.50"></text></g><g><title>ping_node`&lt;humantime::date::Rfc3339Timestamp as core::fmt::Display&gt;::fmt (7 samples, 0.21%)</title><rect x="30.3276%" y="677" width="0.2104%" height="15" fill="rgb(224,130,29)" fg:x="1009" fg:w="7"/><text x="30.5776%" y="687.50"></text></g><g><title>ping_node`core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="30.5080%" y="661" width="0.0301%" height="15" fill="rgb(235,212,8)" fg:x="1015" fg:w="1"/><text x="30.7580%" y="671.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::humantime::Timestamp as core::fmt::Display&gt;::fmt (9 samples, 0.27%)</title><rect x="30.2976%" y="693" width="0.2705%" height="15" fill="rgb(223,33,50)" fg:x="1008" fg:w="9"/><text x="30.5476%" y="703.50"></text></g><g><title>ping_node`core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="30.5380%" y="677" width="0.0301%" height="15" fill="rgb(219,149,13)" fg:x="1016" fg:w="1"/><text x="30.7880%" y="687.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.15%)</title><rect x="30.5681%" y="693" width="0.1503%" height="15" fill="rgb(250,156,29)" fg:x="1017" fg:w="5"/><text x="30.8181%" y="703.50"></text></g><g><title>ping_node`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.06%)</title><rect x="30.7184%" y="693" width="0.0601%" height="15" fill="rgb(216,193,19)" fg:x="1022" fg:w="2"/><text x="30.9684%" y="703.50"></text></g><g><title>ping_node`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (3 samples, 0.09%)</title><rect x="30.7785%" y="677" width="0.0902%" height="15" fill="rgb(216,135,14)" fg:x="1024" fg:w="3"/><text x="31.0285%" y="687.50"></text></g><g><title>ping_node`core::fmt::write (3 samples, 0.09%)</title><rect x="30.7785%" y="661" width="0.0902%" height="15" fill="rgb(241,47,5)" fg:x="1024" fg:w="3"/><text x="31.0285%" y="671.50"></text></g><g><title>ping_node`&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="30.8085%" y="645" width="0.0601%" height="15" fill="rgb(233,42,35)" fg:x="1025" fg:w="2"/><text x="31.0585%" y="655.50"></text></g><g><title>ping_node`core::fmt::write (2 samples, 0.06%)</title><rect x="30.8085%" y="629" width="0.0601%" height="15" fill="rgb(231,13,6)" fg:x="1025" fg:w="2"/><text x="31.0585%" y="639.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad (3 samples, 0.09%)</title><rect x="30.8687%" y="661" width="0.0902%" height="15" fill="rgb(207,181,40)" fg:x="1027" fg:w="3"/><text x="31.1187%" y="671.50"></text></g><g><title>ping_node`core::fmt::Write::write_char (1 samples, 0.03%)</title><rect x="30.9288%" y="645" width="0.0301%" height="15" fill="rgb(254,173,49)" fg:x="1029" fg:w="1"/><text x="31.1788%" y="655.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (6 samples, 0.18%)</title><rect x="30.8687%" y="677" width="0.1803%" height="15" fill="rgb(221,1,38)" fg:x="1027" fg:w="6"/><text x="31.1187%" y="687.50"></text></g><g><title>ping_node`core::fmt::write (3 samples, 0.09%)</title><rect x="30.9588%" y="661" width="0.0902%" height="15" fill="rgb(206,124,46)" fg:x="1030" fg:w="3"/><text x="31.2088%" y="671.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (2 samples, 0.06%)</title><rect x="30.9889%" y="645" width="0.0601%" height="15" fill="rgb(249,21,11)" fg:x="1031" fg:w="2"/><text x="31.2389%" y="655.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="31.0189%" y="629" width="0.0301%" height="15" fill="rgb(222,201,40)" fg:x="1032" fg:w="1"/><text x="31.2689%" y="639.50"></text></g><g><title>ping_node`&lt;log::Level as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="31.0490%" y="677" width="0.0301%" height="15" fill="rgb(235,61,29)" fg:x="1033" fg:w="1"/><text x="31.2990%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="31.1091%" y="645" width="0.0601%" height="15" fill="rgb(219,207,3)" fg:x="1035" fg:w="2"/><text x="31.3591%" y="655.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (8 samples, 0.24%)</title><rect x="31.0791%" y="677" width="0.2405%" height="15" fill="rgb(222,56,46)" fg:x="1034" fg:w="8"/><text x="31.3291%" y="687.50"></text></g><g><title>ping_node`std::io::Write::write_all (8 samples, 0.24%)</title><rect x="31.0791%" y="661" width="0.2405%" height="15" fill="rgb(239,76,54)" fg:x="1034" fg:w="8"/><text x="31.3291%" y="671.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::DefaultFormat::write_args::IndentWrapper as std::io::Write&gt;::write (5 samples, 0.15%)</title><rect x="31.1692%" y="645" width="0.1503%" height="15" fill="rgb(231,124,27)" fg:x="1037" fg:w="5"/><text x="31.4192%" y="655.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="31.3195%" y="677" width="0.0301%" height="15" fill="rgb(249,195,6)" fg:x="1042" fg:w="1"/><text x="31.5695%" y="687.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="31.3496%" y="677" width="0.0301%" height="15" fill="rgb(237,174,47)" fg:x="1043" fg:w="1"/><text x="31.5996%" y="687.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral (2 samples, 0.06%)</title><rect x="31.4397%" y="661" width="0.0601%" height="15" fill="rgb(206,201,31)" fg:x="1046" fg:w="2"/><text x="31.6897%" y="671.50"></text></g><g><title>ping_node`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (6 samples, 0.18%)</title><rect x="31.3796%" y="677" width="0.1803%" height="15" fill="rgb(231,57,52)" fg:x="1044" fg:w="6"/><text x="31.6296%" y="687.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.06%)</title><rect x="31.4998%" y="661" width="0.0601%" height="15" fill="rgb(248,177,22)" fg:x="1048" fg:w="2"/><text x="31.7498%" y="671.50"></text></g><g><title>ping_node`core::fmt::write (67 samples, 2.01%)</title><rect x="29.6063%" y="709" width="2.0138%" height="15" fill="rgb(215,211,37)" fg:x="985" fg:w="67"/><text x="29.8563%" y="719.50">p..</text></g><g><title>ping_node`core::fmt::write (28 samples, 0.84%)</title><rect x="30.7785%" y="693" width="0.8416%" height="15" fill="rgb(241,128,51)" fg:x="1024" fg:w="28"/><text x="31.0285%" y="703.50"></text></g><g><title>ping_node`std::io::Write::write_all (2 samples, 0.06%)</title><rect x="31.5600%" y="677" width="0.0601%" height="15" fill="rgb(227,165,31)" fg:x="1050" fg:w="2"/><text x="31.8100%" y="687.50"></text></g><g><title>ping_node`env_logger::fmt::DefaultFormat::write_header_value (1 samples, 0.03%)</title><rect x="31.6201%" y="709" width="0.0301%" height="15" fill="rgb(228,167,24)" fg:x="1052" fg:w="1"/><text x="31.8701%" y="719.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="31.6201%" y="693" width="0.0301%" height="15" fill="rgb(228,143,12)" fg:x="1052" fg:w="1"/><text x="31.8701%" y="703.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="31.6201%" y="677" width="0.0301%" height="15" fill="rgb(249,149,8)" fg:x="1052" fg:w="1"/><text x="31.8701%" y="687.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (75 samples, 2.25%)</title><rect x="29.4560%" y="725" width="2.2543%" height="15" fill="rgb(243,35,44)" fg:x="980" fg:w="75"/><text x="29.7060%" y="735.50">p..</text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (2 samples, 0.06%)</title><rect x="31.6501%" y="709" width="0.0601%" height="15" fill="rgb(246,89,9)" fg:x="1053" fg:w="2"/><text x="31.9001%" y="719.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.06%)</title><rect x="31.6501%" y="693" width="0.0601%" height="15" fill="rgb(233,213,13)" fg:x="1053" fg:w="2"/><text x="31.9001%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.03%)</title><rect x="31.6802%" y="677" width="0.0301%" height="15" fill="rgb(233,141,41)" fg:x="1054" fg:w="1"/><text x="31.9302%" y="687.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.12%)</title><rect x="31.8305%" y="709" width="0.1202%" height="15" fill="rgb(239,167,4)" fg:x="1059" fg:w="4"/><text x="32.0805%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="31.9507%" y="709" width="0.0301%" height="15" fill="rgb(209,217,16)" fg:x="1063" fg:w="1"/><text x="32.2007%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`write (189 samples, 5.68%)</title><rect x="31.9808%" y="693" width="5.6808%" height="15" fill="rgb(219,88,35)" fg:x="1064" fg:w="189"/><text x="32.2308%" y="703.50">libsyst..</text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (190 samples, 5.71%)</title><rect x="31.9808%" y="709" width="5.7109%" height="15" fill="rgb(220,193,23)" fg:x="1064" fg:w="190"/><text x="32.2308%" y="719.50">ping_no..</text></g><g><title>ping_node`&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="37.6616%" y="693" width="0.0301%" height="15" fill="rgb(230,90,52)" fg:x="1253" fg:w="1"/><text x="37.9116%" y="703.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="37.6916%" y="709" width="0.0301%" height="15" fill="rgb(252,106,19)" fg:x="1254" fg:w="1"/><text x="37.9416%" y="719.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$ioctl (1 samples, 0.03%)</title><rect x="37.7217%" y="693" width="0.0301%" height="15" fill="rgb(206,74,20)" fg:x="1255" fg:w="1"/><text x="37.9717%" y="703.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (44 samples, 1.32%)</title><rect x="37.7217%" y="709" width="1.3225%" height="15" fill="rgb(230,138,44)" fg:x="1255" fg:w="44"/><text x="37.9717%" y="719.50"></text></g><g><title>libsystem_c.dylib`isatty (43 samples, 1.29%)</title><rect x="37.7517%" y="693" width="1.2925%" height="15" fill="rgb(235,182,43)" fg:x="1256" fg:w="43"/><text x="38.0017%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (39 samples, 1.17%)</title><rect x="37.8720%" y="677" width="1.1722%" height="15" fill="rgb(242,16,51)" fg:x="1260" fg:w="39"/><text x="38.1220%" y="687.50"></text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (251 samples, 7.54%)</title><rect x="31.7102%" y="725" width="7.5443%" height="15" fill="rgb(248,9,4)" fg:x="1055" fg:w="251"/><text x="31.9602%" y="735.50">ping_node`..</text></g><g><title>ping_node`std::io::stdio::Stderr::lock (7 samples, 0.21%)</title><rect x="39.0442%" y="709" width="0.2104%" height="15" fill="rgb(210,31,22)" fg:x="1299" fg:w="7"/><text x="39.2942%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (7 samples, 0.21%)</title><rect x="39.0442%" y="693" width="0.2104%" height="15" fill="rgb(239,54,39)" fg:x="1299" fg:w="7"/><text x="39.2942%" y="703.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (331 samples, 9.95%)</title><rect x="29.3658%" y="741" width="9.9489%" height="15" fill="rgb(230,99,41)" fg:x="977" fg:w="331"/><text x="29.6158%" y="751.50">ping_node`&lt;env..</text></g><g><title>ping_node`std::io::stdio::Stderr::lock (2 samples, 0.06%)</title><rect x="39.2546%" y="725" width="0.0601%" height="15" fill="rgb(253,106,12)" fg:x="1306" fg:w="2"/><text x="39.5046%" y="735.50"></text></g><g><title>ping_node`env_filter::filter::Filter::matches (11 samples, 0.33%)</title><rect x="39.3147%" y="741" width="0.3306%" height="15" fill="rgb(213,46,41)" fg:x="1308" fg:w="11"/><text x="39.5647%" y="751.50"></text></g><g><title>ping_node`log::__private_api::log_impl (347 samples, 10.43%)</title><rect x="29.2756%" y="773" width="10.4298%" height="15" fill="rgb(215,133,35)" fg:x="974" fg:w="347"/><text x="29.5256%" y="783.50">ping_node`log::..</text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (346 samples, 10.40%)</title><rect x="29.3057%" y="757" width="10.3998%" height="15" fill="rgb(213,28,5)" fg:x="975" fg:w="346"/><text x="29.5557%" y="767.50">ping_node`&lt;env_..</text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (2 samples, 0.06%)</title><rect x="39.6453%" y="741" width="0.0601%" height="15" fill="rgb(215,77,49)" fg:x="1319" fg:w="2"/><text x="39.8953%" y="751.50"></text></g><g><title>ping_node`ping_node::_::_&lt;impl serde::ser::Serialize for ping_node::Message&gt;::serialize (2 samples, 0.06%)</title><rect x="39.7054%" y="773" width="0.0601%" height="15" fill="rgb(248,100,22)" fg:x="1321" fg:w="2"/><text x="39.9554%" y="783.50"></text></g><g><title>ping_node`tokio::macros::support::thread_rng_n (2 samples, 0.06%)</title><rect x="39.7656%" y="773" width="0.0601%" height="15" fill="rgb(208,67,9)" fg:x="1323" fg:w="2"/><text x="40.0156%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`kevent (13 samples, 0.39%)</title><rect x="39.8257%" y="757" width="0.3907%" height="15" fill="rgb(219,133,21)" fg:x="1325" fg:w="13"/><text x="40.0757%" y="767.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.06%)</title><rect x="40.2164%" y="757" width="0.0601%" height="15" fill="rgb(246,46,29)" fg:x="1338" fg:w="2"/><text x="40.4664%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Handle::deregister_source (26 samples, 0.78%)</title><rect x="39.8257%" y="773" width="0.7815%" height="15" fill="rgb(246,185,52)" fg:x="1325" fg:w="26"/><text x="40.0757%" y="783.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::deregister (11 samples, 0.33%)</title><rect x="40.2765%" y="757" width="0.3306%" height="15" fill="rgb(252,136,11)" fg:x="1340" fg:w="11"/><text x="40.5265%" y="767.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.33%)</title><rect x="40.2765%" y="741" width="0.3306%" height="15" fill="rgb(219,138,53)" fg:x="1340" fg:w="11"/><text x="40.5265%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.33%)</title><rect x="40.2765%" y="725" width="0.3306%" height="15" fill="rgb(211,51,23)" fg:x="1340" fg:w="11"/><text x="40.5265%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::deregister (2 samples, 0.06%)</title><rect x="40.6072%" y="773" width="0.0601%" height="15" fill="rgb(247,221,28)" fg:x="1351" fg:w="2"/><text x="40.8572%" y="783.50"></text></g><g><title>ping_node`tokio::signal::RxFuture::poll_recv (1 samples, 0.03%)</title><rect x="40.6673%" y="773" width="0.0301%" height="15" fill="rgb(251,222,45)" fg:x="1353" fg:w="1"/><text x="40.9173%" y="783.50"></text></g><g><title>ping_node`tokio::signal::unix::signal (1 samples, 0.03%)</title><rect x="40.6973%" y="773" width="0.0301%" height="15" fill="rgb(217,162,53)" fg:x="1354" fg:w="1"/><text x="40.9473%" y="783.50"></text></g><g><title>ping_node`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (2 samples, 0.06%)</title><rect x="40.7274%" y="773" width="0.0601%" height="15" fill="rgb(229,93,14)" fg:x="1355" fg:w="2"/><text x="40.9774%" y="783.50"></text></g><g><title>ping_node`ping_node::main::_{{closure}} (1,272 samples, 38.23%)</title><rect x="2.5849%" y="789" width="38.2326%" height="15" fill="rgb(209,67,49)" fg:x="86" fg:w="1272"/><text x="2.8349%" y="799.50">ping_node`ping_node::main::_{{closure}}</text></g><g><title>ping_node`tokio::time::sleep::Sleep::new_timeout (1 samples, 0.03%)</title><rect x="40.7875%" y="773" width="0.0301%" height="15" fill="rgb(213,87,29)" fg:x="1357" fg:w="1"/><text x="41.0375%" y="783.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Handle::deregister_source (1 samples, 0.03%)</title><rect x="40.8176%" y="789" width="0.0301%" height="15" fill="rgb(205,151,52)" fg:x="1358" fg:w="1"/><text x="41.0676%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (1 samples, 0.03%)</title><rect x="40.9378%" y="773" width="0.0301%" height="15" fill="rgb(253,215,39)" fg:x="1362" fg:w="1"/><text x="41.1878%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (73 samples, 2.19%)</title><rect x="41.1181%" y="757" width="2.1942%" height="15" fill="rgb(221,220,41)" fg:x="1368" fg:w="73"/><text x="41.3681%" y="767.50">l..</text></g><g><title>libsystem_platform.dylib`_sigtramp (1 samples, 0.03%)</title><rect x="43.4626%" y="741" width="0.0301%" height="15" fill="rgb(218,133,21)" fg:x="1446" fg:w="1"/><text x="43.7126%" y="751.50"></text></g><g><title>ping_node`signal_hook_registry::handler (1 samples, 0.03%)</title><rect x="43.4626%" y="725" width="0.0301%" height="15" fill="rgb(221,193,43)" fg:x="1446" fg:w="1"/><text x="43.7126%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.03%)</title><rect x="43.4926%" y="741" width="0.0301%" height="15" fill="rgb(240,128,52)" fg:x="1447" fg:w="1"/><text x="43.7426%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.03%)</title><rect x="43.4926%" y="725" width="0.0301%" height="15" fill="rgb(253,114,12)" fg:x="1447" fg:w="1"/><text x="43.7426%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (18 samples, 0.54%)</title><rect x="43.3123%" y="757" width="0.5410%" height="15" fill="rgb(215,223,47)" fg:x="1441" fg:w="18"/><text x="43.5623%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (11 samples, 0.33%)</title><rect x="43.5227%" y="741" width="0.3306%" height="15" fill="rgb(248,225,23)" fg:x="1448" fg:w="11"/><text x="43.7727%" y="751.50"></text></g><g><title>dyld`start (1,460 samples, 43.88%)</title><rect x="0.0000%" y="933" width="43.8834%" height="15" fill="rgb(250,108,0)" fg:x="0" fg:w="1460"/><text x="0.2500%" y="943.50">dyld`start</text></g><g><title>ping_node`main (1,460 samples, 43.88%)</title><rect x="0.0000%" y="917" width="43.8834%" height="15" fill="rgb(228,208,7)" fg:x="0" fg:w="1460"/><text x="0.2500%" y="927.50">ping_node`main</text></g><g><title>ping_node`std::rt::lang_start_internal (1,460 samples, 43.88%)</title><rect x="0.0000%" y="901" width="43.8834%" height="15" fill="rgb(244,45,10)" fg:x="0" fg:w="1460"/><text x="0.2500%" y="911.50">ping_node`std::rt::lang_start_internal</text></g><g><title>ping_node`std::rt::lang_start::_{{closure}} (1,460 samples, 43.88%)</title><rect x="0.0000%" y="885" width="43.8834%" height="15" fill="rgb(207,125,25)" fg:x="0" fg:w="1460"/><text x="0.2500%" y="895.50">ping_node`std::rt::lang_start::_{{closure}}</text></g><g><title>ping_node`std::sys::backtrace::__rust_begin_short_backtrace (1,460 samples, 43.88%)</title><rect x="0.0000%" y="869" width="43.8834%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="1460"/><text x="0.2500%" y="879.50">ping_node`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>ping_node`ping_node::main (1,460 samples, 43.88%)</title><rect x="0.0000%" y="853" width="43.8834%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="1460"/><text x="0.2500%" y="863.50">ping_node`ping_node::main</text></g><g><title>ping_node`tokio::runtime::runtime::Runtime::block_on (1,459 samples, 43.85%)</title><rect x="0.0301%" y="837" width="43.8533%" height="15" fill="rgb(221,65,9)" fg:x="1" fg:w="1459"/><text x="0.2801%" y="847.50">ping_node`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>ping_node`tokio::runtime::context::runtime::enter_runtime (1,459 samples, 43.85%)</title><rect x="0.0301%" y="821" width="43.8533%" height="15" fill="rgb(235,49,36)" fg:x="1" fg:w="1459"/><text x="0.2801%" y="831.50">ping_node`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>ping_node`tokio::runtime::park::CachedParkThread::block_on (1,458 samples, 43.82%)</title><rect x="0.0601%" y="805" width="43.8233%" height="15" fill="rgb(225,32,20)" fg:x="2" fg:w="1458"/><text x="0.3101%" y="815.50">ping_node`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>ping_node`tokio::runtime::park::Inner::park (101 samples, 3.04%)</title><rect x="40.8476%" y="789" width="3.0358%" height="15" fill="rgb(215,141,46)" fg:x="1359" fg:w="101"/><text x="41.0976%" y="799.50">pin..</text></g><g><title>ping_node`parking_lot::condvar::Condvar::wait_until_internal (97 samples, 2.92%)</title><rect x="40.9678%" y="773" width="2.9155%" height="15" fill="rgb(250,160,47)" fg:x="1363" fg:w="97"/><text x="41.2178%" y="783.50">pi..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="43.8533%" y="757" width="0.0301%" height="15" fill="rgb(216,222,40)" fg:x="1459" fg:w="1"/><text x="44.1033%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (5 samples, 0.15%)</title><rect x="43.8834%" y="933" width="0.1503%" height="15" fill="rgb(234,217,39)" fg:x="1460" fg:w="5"/><text x="44.1334%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (8 samples, 0.24%)</title><rect x="44.0337%" y="933" width="0.2405%" height="15" fill="rgb(207,178,40)" fg:x="1465" fg:w="8"/><text x="44.2837%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`kevent (23 samples, 0.69%)</title><rect x="44.2741%" y="933" width="0.6913%" height="15" fill="rgb(221,136,13)" fg:x="1473" fg:w="23"/><text x="44.5241%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (10 samples, 0.30%)</title><rect x="44.9654%" y="933" width="0.3006%" height="15" fill="rgb(249,199,10)" fg:x="1496" fg:w="10"/><text x="45.2154%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (1 samples, 0.03%)</title><rect x="45.2660%" y="885" width="0.0301%" height="15" fill="rgb(249,222,13)" fg:x="1506" fg:w="1"/><text x="45.5160%" y="895.50"></text></g><g><title>ping_node`&lt;rayon_core::registry::WorkerThread as core::convert::From&lt;rayon_core::registry::ThreadBuilder&gt;&gt;::from (1 samples, 0.03%)</title><rect x="45.2961%" y="837" width="0.0301%" height="15" fill="rgb(244,185,38)" fg:x="1507" fg:w="1"/><text x="45.5461%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="45.2961%" y="821" width="0.0301%" height="15" fill="rgb(236,202,9)" fg:x="1507" fg:w="1"/><text x="45.5461%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.03%)</title><rect x="45.2961%" y="805" width="0.0301%" height="15" fill="rgb(250,229,37)" fg:x="1507" fg:w="1"/><text x="45.5461%" y="815.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.3261%" y="597" width="0.0301%" height="15" fill="rgb(206,174,23)" fg:x="1508" fg:w="1"/><text x="45.5761%" y="607.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.3261%" y="581" width="0.0301%" height="15" fill="rgb(211,33,43)" fg:x="1508" fg:w="1"/><text x="45.5761%" y="591.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="45.3261%" y="565" width="0.0301%" height="15" fill="rgb(245,58,50)" fg:x="1508" fg:w="1"/><text x="45.5761%" y="575.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.3261%" y="549" width="0.0301%" height="15" fill="rgb(244,68,36)" fg:x="1508" fg:w="1"/><text x="45.5761%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.3261%" y="533" width="0.0301%" height="15" fill="rgb(232,229,15)" fg:x="1508" fg:w="1"/><text x="45.5761%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (4 samples, 0.12%)</title><rect x="45.3562%" y="517" width="0.1202%" height="15" fill="rgb(254,30,23)" fg:x="1509" fg:w="4"/><text x="45.6062%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (4 samples, 0.12%)</title><rect x="45.3562%" y="501" width="0.1202%" height="15" fill="rgb(235,160,14)" fg:x="1509" fg:w="4"/><text x="45.6062%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (4 samples, 0.12%)</title><rect x="45.3562%" y="485" width="0.1202%" height="15" fill="rgb(212,155,44)" fg:x="1509" fg:w="4"/><text x="45.6062%" y="495.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.18%)</title><rect x="45.3562%" y="565" width="0.1803%" height="15" fill="rgb(226,2,50)" fg:x="1509" fg:w="6"/><text x="45.6062%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.18%)</title><rect x="45.3562%" y="549" width="0.1803%" height="15" fill="rgb(234,177,6)" fg:x="1509" fg:w="6"/><text x="45.6062%" y="559.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (6 samples, 0.18%)</title><rect x="45.3562%" y="533" width="0.1803%" height="15" fill="rgb(217,24,9)" fg:x="1509" fg:w="6"/><text x="45.6062%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (2 samples, 0.06%)</title><rect x="45.4764%" y="517" width="0.0601%" height="15" fill="rgb(220,13,46)" fg:x="1513" fg:w="2"/><text x="45.7264%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (2 samples, 0.06%)</title><rect x="45.4764%" y="501" width="0.0601%" height="15" fill="rgb(239,221,27)" fg:x="1513" fg:w="2"/><text x="45.7264%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="45.5365%" y="517" width="0.0301%" height="15" fill="rgb(222,198,25)" fg:x="1515" fg:w="1"/><text x="45.7865%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.27%)</title><rect x="45.3261%" y="613" width="0.2705%" height="15" fill="rgb(211,99,13)" fg:x="1508" fg:w="9"/><text x="45.5761%" y="623.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (8 samples, 0.24%)</title><rect x="45.3562%" y="597" width="0.2405%" height="15" fill="rgb(232,111,31)" fg:x="1509" fg:w="8"/><text x="45.6062%" y="607.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (8 samples, 0.24%)</title><rect x="45.3562%" y="581" width="0.2405%" height="15" fill="rgb(245,82,37)" fg:x="1509" fg:w="8"/><text x="45.6062%" y="591.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.06%)</title><rect x="45.5365%" y="565" width="0.0601%" height="15" fill="rgb(227,149,46)" fg:x="1515" fg:w="2"/><text x="45.7865%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="45.5365%" y="549" width="0.0601%" height="15" fill="rgb(218,36,50)" fg:x="1515" fg:w="2"/><text x="45.7865%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (2 samples, 0.06%)</title><rect x="45.5365%" y="533" width="0.0601%" height="15" fill="rgb(226,80,48)" fg:x="1515" fg:w="2"/><text x="45.7865%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.5666%" y="517" width="0.0301%" height="15" fill="rgb(238,224,15)" fg:x="1516" fg:w="1"/><text x="45.8166%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="45.5666%" y="501" width="0.0301%" height="15" fill="rgb(241,136,10)" fg:x="1516" fg:w="1"/><text x="45.8166%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="45.5666%" y="485" width="0.0301%" height="15" fill="rgb(208,32,45)" fg:x="1516" fg:w="1"/><text x="45.8166%" y="495.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.5966%" y="549" width="0.0301%" height="15" fill="rgb(207,135,9)" fg:x="1517" fg:w="1"/><text x="45.8466%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.5966%" y="533" width="0.0301%" height="15" fill="rgb(206,86,44)" fg:x="1517" fg:w="1"/><text x="45.8466%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.5966%" y="517" width="0.0301%" height="15" fill="rgb(245,177,15)" fg:x="1517" fg:w="1"/><text x="45.8466%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.5966%" y="501" width="0.0301%" height="15" fill="rgb(206,64,50)" fg:x="1517" fg:w="1"/><text x="45.8466%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.5966%" y="485" width="0.0301%" height="15" fill="rgb(234,36,40)" fg:x="1517" fg:w="1"/><text x="45.8466%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="45.6267%" y="485" width="0.0301%" height="15" fill="rgb(213,64,8)" fg:x="1518" fg:w="1"/><text x="45.8767%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_cwd_root (1 samples, 0.03%)</title><rect x="45.6567%" y="485" width="0.0301%" height="15" fill="rgb(210,75,36)" fg:x="1519" fg:w="1"/><text x="45.9067%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="45.6567%" y="469" width="0.0301%" height="15" fill="rgb(229,88,21)" fg:x="1519" fg:w="1"/><text x="45.9067%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.42%)</title><rect x="45.3261%" y="661" width="0.4208%" height="15" fill="rgb(252,204,47)" fg:x="1508" fg:w="14"/><text x="45.5761%" y="671.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (14 samples, 0.42%)</title><rect x="45.3261%" y="645" width="0.4208%" height="15" fill="rgb(208,77,27)" fg:x="1508" fg:w="14"/><text x="45.5761%" y="655.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (14 samples, 0.42%)</title><rect x="45.3261%" y="629" width="0.4208%" height="15" fill="rgb(221,76,26)" fg:x="1508" fg:w="14"/><text x="45.5761%" y="639.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.15%)</title><rect x="45.5966%" y="613" width="0.1503%" height="15" fill="rgb(225,139,18)" fg:x="1517" fg:w="5"/><text x="45.8466%" y="623.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.15%)</title><rect x="45.5966%" y="597" width="0.1503%" height="15" fill="rgb(230,137,11)" fg:x="1517" fg:w="5"/><text x="45.8466%" y="607.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (5 samples, 0.15%)</title><rect x="45.5966%" y="581" width="0.1503%" height="15" fill="rgb(212,28,1)" fg:x="1517" fg:w="5"/><text x="45.8466%" y="591.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (5 samples, 0.15%)</title><rect x="45.5966%" y="565" width="0.1503%" height="15" fill="rgb(248,164,17)" fg:x="1517" fg:w="5"/><text x="45.8466%" y="575.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.12%)</title><rect x="45.6267%" y="549" width="0.1202%" height="15" fill="rgb(222,171,42)" fg:x="1518" fg:w="4"/><text x="45.8767%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.12%)</title><rect x="45.6267%" y="533" width="0.1202%" height="15" fill="rgb(243,84,45)" fg:x="1518" fg:w="4"/><text x="45.8767%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.12%)</title><rect x="45.6267%" y="517" width="0.1202%" height="15" fill="rgb(252,49,23)" fg:x="1518" fg:w="4"/><text x="45.8767%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (4 samples, 0.12%)</title><rect x="45.6267%" y="501" width="0.1202%" height="15" fill="rgb(215,19,7)" fg:x="1518" fg:w="4"/><text x="45.8767%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (2 samples, 0.06%)</title><rect x="45.6868%" y="485" width="0.0601%" height="15" fill="rgb(238,81,41)" fg:x="1520" fg:w="2"/><text x="45.9368%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (2 samples, 0.06%)</title><rect x="45.6868%" y="469" width="0.0601%" height="15" fill="rgb(210,199,37)" fg:x="1520" fg:w="2"/><text x="45.9368%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="45.7469%" y="469" width="0.0301%" height="15" fill="rgb(244,192,49)" fg:x="1522" fg:w="1"/><text x="45.9969%" y="479.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (3 samples, 0.09%)</title><rect x="45.7469%" y="485" width="0.0902%" height="15" fill="rgb(226,211,11)" fg:x="1522" fg:w="3"/><text x="45.9969%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (2 samples, 0.06%)</title><rect x="45.7770%" y="469" width="0.0601%" height="15" fill="rgb(236,162,54)" fg:x="1523" fg:w="2"/><text x="46.0270%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (2 samples, 0.06%)</title><rect x="45.7770%" y="453" width="0.0601%" height="15" fill="rgb(220,229,9)" fg:x="1523" fg:w="2"/><text x="46.0270%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.54%)</title><rect x="45.3261%" y="709" width="0.5410%" height="15" fill="rgb(250,87,22)" fg:x="1508" fg:w="18"/><text x="45.5761%" y="719.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (18 samples, 0.54%)</title><rect x="45.3261%" y="693" width="0.5410%" height="15" fill="rgb(239,43,17)" fg:x="1508" fg:w="18"/><text x="45.5761%" y="703.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (18 samples, 0.54%)</title><rect x="45.3261%" y="677" width="0.5410%" height="15" fill="rgb(231,177,25)" fg:x="1508" fg:w="18"/><text x="45.5761%" y="687.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.12%)</title><rect x="45.7469%" y="661" width="0.1202%" height="15" fill="rgb(219,179,1)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="671.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.12%)</title><rect x="45.7469%" y="645" width="0.1202%" height="15" fill="rgb(238,219,53)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="655.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (4 samples, 0.12%)</title><rect x="45.7469%" y="629" width="0.1202%" height="15" fill="rgb(232,167,36)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="639.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (4 samples, 0.12%)</title><rect x="45.7469%" y="613" width="0.1202%" height="15" fill="rgb(244,19,51)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="623.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.12%)</title><rect x="45.7469%" y="597" width="0.1202%" height="15" fill="rgb(224,6,22)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="607.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (4 samples, 0.12%)</title><rect x="45.7469%" y="581" width="0.1202%" height="15" fill="rgb(224,145,5)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="591.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (4 samples, 0.12%)</title><rect x="45.7469%" y="565" width="0.1202%" height="15" fill="rgb(234,130,49)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="575.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.12%)</title><rect x="45.7469%" y="549" width="0.1202%" height="15" fill="rgb(254,6,2)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.12%)</title><rect x="45.7469%" y="533" width="0.1202%" height="15" fill="rgb(208,96,46)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.12%)</title><rect x="45.7469%" y="517" width="0.1202%" height="15" fill="rgb(239,3,39)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (4 samples, 0.12%)</title><rect x="45.7469%" y="501" width="0.1202%" height="15" fill="rgb(233,210,1)" fg:x="1522" fg:w="4"/><text x="45.9969%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.8371%" y="485" width="0.0301%" height="15" fill="rgb(244,137,37)" fg:x="1525" fg:w="1"/><text x="46.0871%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.8371%" y="469" width="0.0301%" height="15" fill="rgb(240,136,2)" fg:x="1525" fg:w="1"/><text x="46.0871%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.8671%" y="645" width="0.0301%" height="15" fill="rgb(239,18,37)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="655.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="45.8671%" y="629" width="0.0301%" height="15" fill="rgb(218,185,22)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="639.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="45.8671%" y="613" width="0.0301%" height="15" fill="rgb(225,218,4)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="623.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="45.8671%" y="597" width="0.0301%" height="15" fill="rgb(230,182,32)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="607.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.8671%" y="581" width="0.0301%" height="15" fill="rgb(242,56,43)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="591.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="45.8671%" y="565" width="0.0301%" height="15" fill="rgb(233,99,24)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="575.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="45.8671%" y="549" width="0.0301%" height="15" fill="rgb(234,209,42)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="559.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="45.8671%" y="533" width="0.0301%" height="15" fill="rgb(227,7,12)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.8671%" y="517" width="0.0301%" height="15" fill="rgb(245,203,43)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.8671%" y="501" width="0.0301%" height="15" fill="rgb(238,205,33)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.8671%" y="485" width="0.0301%" height="15" fill="rgb(231,56,7)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="45.8671%" y="469" width="0.0301%" height="15" fill="rgb(244,186,29)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="479.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.8671%" y="453" width="0.0301%" height="15" fill="rgb(234,111,31)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.8671%" y="437" width="0.0301%" height="15" fill="rgb(241,149,10)" fg:x="1526" fg:w="1"/><text x="46.1171%" y="447.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.8972%" y="613" width="0.0301%" height="15" fill="rgb(249,206,44)" fg:x="1527" fg:w="1"/><text x="46.1472%" y="623.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.8972%" y="597" width="0.0301%" height="15" fill="rgb(251,153,30)" fg:x="1527" fg:w="1"/><text x="46.1472%" y="607.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="45.8972%" y="581" width="0.0301%" height="15" fill="rgb(239,152,38)" fg:x="1527" fg:w="1"/><text x="46.1472%" y="591.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.8972%" y="565" width="0.0301%" height="15" fill="rgb(249,139,47)" fg:x="1527" fg:w="1"/><text x="46.1472%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.8972%" y="549" width="0.0301%" height="15" fill="rgb(244,64,35)" fg:x="1527" fg:w="1"/><text x="46.1472%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.9273%" y="533" width="0.0301%" height="15" fill="rgb(216,46,15)" fg:x="1528" fg:w="1"/><text x="46.1773%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.9273%" y="517" width="0.0301%" height="15" fill="rgb(250,74,19)" fg:x="1528" fg:w="1"/><text x="46.1773%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.9273%" y="501" width="0.0301%" height="15" fill="rgb(249,42,33)" fg:x="1528" fg:w="1"/><text x="46.1773%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="45.9273%" y="485" width="0.0301%" height="15" fill="rgb(242,149,17)" fg:x="1528" fg:w="1"/><text x="46.1773%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.9273%" y="469" width="0.0301%" height="15" fill="rgb(244,29,21)" fg:x="1528" fg:w="1"/><text x="46.1773%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.03%)</title><rect x="45.9273%" y="453" width="0.0301%" height="15" fill="rgb(220,130,37)" fg:x="1528" fg:w="1"/><text x="46.1773%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="45.9273%" y="581" width="0.0601%" height="15" fill="rgb(211,67,2)" fg:x="1528" fg:w="2"/><text x="46.1773%" y="591.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="45.9273%" y="565" width="0.0601%" height="15" fill="rgb(235,68,52)" fg:x="1528" fg:w="2"/><text x="46.1773%" y="575.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="45.9273%" y="549" width="0.0601%" height="15" fill="rgb(246,142,3)" fg:x="1528" fg:w="2"/><text x="46.1773%" y="559.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="45.9573%" y="533" width="0.0301%" height="15" fill="rgb(241,25,7)" fg:x="1529" fg:w="1"/><text x="46.2073%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.9573%" y="517" width="0.0301%" height="15" fill="rgb(242,119,39)" fg:x="1529" fg:w="1"/><text x="46.2073%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.9573%" y="501" width="0.0301%" height="15" fill="rgb(241,98,45)" fg:x="1529" fg:w="1"/><text x="46.2073%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.9573%" y="485" width="0.0301%" height="15" fill="rgb(254,28,30)" fg:x="1529" fg:w="1"/><text x="46.2073%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.9573%" y="469" width="0.0301%" height="15" fill="rgb(241,142,54)" fg:x="1529" fg:w="1"/><text x="46.2073%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.9573%" y="453" width="0.0301%" height="15" fill="rgb(222,85,15)" fg:x="1529" fg:w="1"/><text x="46.2073%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="45.9874%" y="517" width="0.0301%" height="15" fill="rgb(210,85,47)" fg:x="1530" fg:w="1"/><text x="46.2374%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="45.9874%" y="501" width="0.0301%" height="15" fill="rgb(224,206,25)" fg:x="1530" fg:w="1"/><text x="46.2374%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="45.9874%" y="485" width="0.0301%" height="15" fill="rgb(243,201,19)" fg:x="1530" fg:w="1"/><text x="46.2374%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="45.9874%" y="469" width="0.0301%" height="15" fill="rgb(236,59,4)" fg:x="1530" fg:w="1"/><text x="46.2374%" y="479.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="45.9874%" y="453" width="0.0301%" height="15" fill="rgb(254,179,45)" fg:x="1530" fg:w="1"/><text x="46.2374%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="45.9874%" y="437" width="0.0301%" height="15" fill="rgb(226,14,10)" fg:x="1530" fg:w="1"/><text x="46.2374%" y="447.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.06%)</title><rect x="45.9874%" y="581" width="0.0601%" height="15" fill="rgb(244,27,41)" fg:x="1530" fg:w="2"/><text x="46.2374%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="45.9874%" y="565" width="0.0601%" height="15" fill="rgb(235,35,32)" fg:x="1530" fg:w="2"/><text x="46.2374%" y="575.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="45.9874%" y="549" width="0.0601%" height="15" fill="rgb(218,68,31)" fg:x="1530" fg:w="2"/><text x="46.2374%" y="559.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="45.9874%" y="533" width="0.0601%" height="15" fill="rgb(207,120,37)" fg:x="1530" fg:w="2"/><text x="46.2374%" y="543.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.0174%" y="517" width="0.0301%" height="15" fill="rgb(227,98,0)" fg:x="1531" fg:w="1"/><text x="46.2674%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0174%" y="501" width="0.0301%" height="15" fill="rgb(207,7,3)" fg:x="1531" fg:w="1"/><text x="46.2674%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.0174%" y="485" width="0.0301%" height="15" fill="rgb(206,98,19)" fg:x="1531" fg:w="1"/><text x="46.2674%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.0174%" y="469" width="0.0301%" height="15" fill="rgb(217,5,26)" fg:x="1531" fg:w="1"/><text x="46.2674%" y="479.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.0174%" y="453" width="0.0301%" height="15" fill="rgb(235,190,38)" fg:x="1531" fg:w="1"/><text x="46.2674%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.0174%" y="437" width="0.0301%" height="15" fill="rgb(247,86,24)" fg:x="1531" fg:w="1"/><text x="46.2674%" y="447.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.18%)</title><rect x="45.8972%" y="645" width="0.1803%" height="15" fill="rgb(205,101,16)" fg:x="1527" fg:w="6"/><text x="46.1472%" y="655.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.18%)</title><rect x="45.8972%" y="629" width="0.1803%" height="15" fill="rgb(246,168,33)" fg:x="1527" fg:w="6"/><text x="46.1472%" y="639.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (5 samples, 0.15%)</title><rect x="45.9273%" y="613" width="0.1503%" height="15" fill="rgb(231,114,1)" fg:x="1528" fg:w="5"/><text x="46.1773%" y="623.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (5 samples, 0.15%)</title><rect x="45.9273%" y="597" width="0.1503%" height="15" fill="rgb(207,184,53)" fg:x="1528" fg:w="5"/><text x="46.1773%" y="607.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.0475%" y="581" width="0.0301%" height="15" fill="rgb(224,95,51)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="591.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.0475%" y="565" width="0.0301%" height="15" fill="rgb(212,188,45)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0475%" y="549" width="0.0301%" height="15" fill="rgb(223,154,38)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="559.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0475%" y="533" width="0.0301%" height="15" fill="rgb(251,22,52)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="543.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0475%" y="517" width="0.0301%" height="15" fill="rgb(229,209,22)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="527.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.0475%" y="501" width="0.0301%" height="15" fill="rgb(234,138,34)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0475%" y="485" width="0.0301%" height="15" fill="rgb(212,95,11)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="495.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0475%" y="469" width="0.0301%" height="15" fill="rgb(240,179,47)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="479.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0475%" y="453" width="0.0301%" height="15" fill="rgb(240,163,11)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0475%" y="437" width="0.0301%" height="15" fill="rgb(236,37,12)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="447.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0475%" y="421" width="0.0301%" height="15" fill="rgb(232,164,16)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="431.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0475%" y="405" width="0.0301%" height="15" fill="rgb(244,205,15)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0475%" y="389" width="0.0301%" height="15" fill="rgb(223,117,47)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="399.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0475%" y="373" width="0.0301%" height="15" fill="rgb(244,107,35)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="383.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0475%" y="357" width="0.0301%" height="15" fill="rgb(205,140,8)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="367.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.0475%" y="341" width="0.0301%" height="15" fill="rgb(228,84,46)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="351.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0475%" y="325" width="0.0301%" height="15" fill="rgb(254,188,9)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="335.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.0475%" y="309" width="0.0301%" height="15" fill="rgb(206,112,54)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="319.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.0475%" y="293" width="0.0301%" height="15" fill="rgb(216,84,49)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="303.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.0475%" y="277" width="0.0301%" height="15" fill="rgb(214,194,35)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="287.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.0475%" y="261" width="0.0301%" height="15" fill="rgb(249,28,3)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.0475%" y="245" width="0.0301%" height="15" fill="rgb(222,56,52)" fg:x="1532" fg:w="1"/><text x="46.2975%" y="255.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.24%)</title><rect x="45.8671%" y="709" width="0.2405%" height="15" fill="rgb(245,217,50)" fg:x="1526" fg:w="8"/><text x="46.1171%" y="719.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.24%)</title><rect x="45.8671%" y="693" width="0.2405%" height="15" fill="rgb(213,201,24)" fg:x="1526" fg:w="8"/><text x="46.1171%" y="703.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (8 samples, 0.24%)</title><rect x="45.8671%" y="677" width="0.2405%" height="15" fill="rgb(248,116,28)" fg:x="1526" fg:w="8"/><text x="46.1171%" y="687.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (8 samples, 0.24%)</title><rect x="45.8671%" y="661" width="0.2405%" height="15" fill="rgb(219,72,43)" fg:x="1526" fg:w="8"/><text x="46.1171%" y="671.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.0775%" y="645" width="0.0301%" height="15" fill="rgb(209,138,14)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="655.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.0775%" y="629" width="0.0301%" height="15" fill="rgb(222,18,33)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="639.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0775%" y="613" width="0.0301%" height="15" fill="rgb(213,199,7)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="623.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0775%" y="597" width="0.0301%" height="15" fill="rgb(250,110,10)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="607.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0775%" y="581" width="0.0301%" height="15" fill="rgb(248,123,6)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="591.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.0775%" y="565" width="0.0301%" height="15" fill="rgb(206,91,31)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0775%" y="549" width="0.0301%" height="15" fill="rgb(211,154,13)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="559.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0775%" y="533" width="0.0301%" height="15" fill="rgb(225,148,7)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="543.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0775%" y="517" width="0.0301%" height="15" fill="rgb(220,160,43)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0775%" y="501" width="0.0301%" height="15" fill="rgb(213,52,39)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="511.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0775%" y="485" width="0.0301%" height="15" fill="rgb(243,137,7)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="495.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0775%" y="469" width="0.0301%" height="15" fill="rgb(230,79,13)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0775%" y="453" width="0.0301%" height="15" fill="rgb(247,105,23)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="463.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.0775%" y="437" width="0.0301%" height="15" fill="rgb(223,179,41)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="447.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.0775%" y="421" width="0.0301%" height="15" fill="rgb(218,9,34)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="431.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.0775%" y="405" width="0.0301%" height="15" fill="rgb(222,106,8)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.0775%" y="389" width="0.0301%" height="15" fill="rgb(211,220,0)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="399.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.0775%" y="373" width="0.0301%" height="15" fill="rgb(229,52,16)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="383.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.0775%" y="357" width="0.0301%" height="15" fill="rgb(212,155,18)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.0775%" y="341" width="0.0301%" height="15" fill="rgb(242,21,14)" fg:x="1533" fg:w="1"/><text x="46.3275%" y="351.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1076%" y="629" width="0.0301%" height="15" fill="rgb(222,19,48)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="639.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1076%" y="613" width="0.0301%" height="15" fill="rgb(232,45,27)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="623.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1076%" y="597" width="0.0301%" height="15" fill="rgb(249,103,42)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="607.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1076%" y="581" width="0.0301%" height="15" fill="rgb(246,81,33)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="591.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1076%" y="565" width="0.0301%" height="15" fill="rgb(252,33,42)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="575.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1076%" y="549" width="0.0301%" height="15" fill="rgb(209,212,41)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="559.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1076%" y="533" width="0.0301%" height="15" fill="rgb(207,154,6)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1076%" y="517" width="0.0301%" height="15" fill="rgb(223,64,47)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="527.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1076%" y="501" width="0.0301%" height="15" fill="rgb(211,161,38)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="511.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1076%" y="485" width="0.0301%" height="15" fill="rgb(219,138,40)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="495.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1076%" y="469" width="0.0301%" height="15" fill="rgb(241,228,46)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="479.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1076%" y="453" width="0.0301%" height="15" fill="rgb(223,209,38)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="463.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1076%" y="437" width="0.0301%" height="15" fill="rgb(236,164,45)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="447.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1076%" y="421" width="0.0301%" height="15" fill="rgb(231,15,5)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="431.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1076%" y="405" width="0.0301%" height="15" fill="rgb(252,35,15)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.1076%" y="389" width="0.0301%" height="15" fill="rgb(248,181,18)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="399.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.1076%" y="373" width="0.0301%" height="15" fill="rgb(233,39,42)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="383.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.1076%" y="357" width="0.0301%" height="15" fill="rgb(238,110,33)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="367.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.1076%" y="341" width="0.0301%" height="15" fill="rgb(233,195,10)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.1076%" y="325" width="0.0301%" height="15" fill="rgb(254,105,3)" fg:x="1534" fg:w="1"/><text x="46.3576%" y="335.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1377%" y="629" width="0.0301%" height="15" fill="rgb(221,225,9)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="639.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1377%" y="613" width="0.0301%" height="15" fill="rgb(224,227,45)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="623.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1377%" y="597" width="0.0301%" height="15" fill="rgb(229,198,43)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="607.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1377%" y="581" width="0.0301%" height="15" fill="rgb(206,209,35)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1377%" y="565" width="0.0301%" height="15" fill="rgb(245,195,53)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="575.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1377%" y="549" width="0.0301%" height="15" fill="rgb(240,92,26)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="559.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1377%" y="533" width="0.0301%" height="15" fill="rgb(207,40,23)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1377%" y="517" width="0.0301%" height="15" fill="rgb(223,111,35)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="527.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1377%" y="501" width="0.0301%" height="15" fill="rgb(229,147,28)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="511.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1377%" y="485" width="0.0301%" height="15" fill="rgb(211,29,28)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="495.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1377%" y="469" width="0.0301%" height="15" fill="rgb(228,72,33)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1377%" y="453" width="0.0301%" height="15" fill="rgb(205,214,31)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="463.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1377%" y="437" width="0.0301%" height="15" fill="rgb(224,111,15)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="447.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1377%" y="421" width="0.0301%" height="15" fill="rgb(253,21,26)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="431.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1377%" y="405" width="0.0301%" height="15" fill="rgb(245,139,43)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1377%" y="389" width="0.0301%" height="15" fill="rgb(252,170,7)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="399.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.1377%" y="373" width="0.0301%" height="15" fill="rgb(231,118,14)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="383.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.1377%" y="357" width="0.0301%" height="15" fill="rgb(238,83,0)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="367.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.1377%" y="341" width="0.0301%" height="15" fill="rgb(221,39,39)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="351.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.1377%" y="325" width="0.0301%" height="15" fill="rgb(222,119,46)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.1377%" y="309" width="0.0301%" height="15" fill="rgb(222,165,49)" fg:x="1535" fg:w="1"/><text x="46.3877%" y="319.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1677%" y="501" width="0.0301%" height="15" fill="rgb(219,113,52)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="511.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1677%" y="485" width="0.0301%" height="15" fill="rgb(214,7,15)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="495.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1677%" y="469" width="0.0301%" height="15" fill="rgb(235,32,4)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1677%" y="453" width="0.0301%" height="15" fill="rgb(238,90,54)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="463.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1677%" y="437" width="0.0301%" height="15" fill="rgb(213,208,19)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="447.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1677%" y="421" width="0.0301%" height="15" fill="rgb(233,156,4)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="431.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1677%" y="405" width="0.0301%" height="15" fill="rgb(207,194,5)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="415.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1677%" y="389" width="0.0301%" height="15" fill="rgb(206,111,30)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="399.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1677%" y="373" width="0.0301%" height="15" fill="rgb(243,70,54)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="383.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1677%" y="357" width="0.0301%" height="15" fill="rgb(242,28,8)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="367.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.1677%" y="341" width="0.0301%" height="15" fill="rgb(219,106,18)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="351.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.1677%" y="325" width="0.0301%" height="15" fill="rgb(244,222,10)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`proc_pidinfo (1 samples, 0.03%)</title><rect x="46.1677%" y="309" width="0.0301%" height="15" fill="rgb(236,179,52)" fg:x="1536" fg:w="1"/><text x="46.4177%" y="319.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.90%)</title><rect x="45.3261%" y="757" width="0.9017%" height="15" fill="rgb(213,23,39)" fg:x="1508" fg:w="30"/><text x="45.5761%" y="767.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (30 samples, 0.90%)</title><rect x="45.3261%" y="741" width="0.9017%" height="15" fill="rgb(238,48,10)" fg:x="1508" fg:w="30"/><text x="45.5761%" y="751.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (30 samples, 0.90%)</title><rect x="45.3261%" y="725" width="0.9017%" height="15" fill="rgb(251,196,23)" fg:x="1508" fg:w="30"/><text x="45.5761%" y="735.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.12%)</title><rect x="46.1076%" y="709" width="0.1202%" height="15" fill="rgb(250,152,24)" fg:x="1534" fg:w="4"/><text x="46.3576%" y="719.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.12%)</title><rect x="46.1076%" y="693" width="0.1202%" height="15" fill="rgb(209,150,17)" fg:x="1534" fg:w="4"/><text x="46.3576%" y="703.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.12%)</title><rect x="46.1076%" y="677" width="0.1202%" height="15" fill="rgb(234,202,34)" fg:x="1534" fg:w="4"/><text x="46.3576%" y="687.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (4 samples, 0.12%)</title><rect x="46.1076%" y="661" width="0.1202%" height="15" fill="rgb(253,148,53)" fg:x="1534" fg:w="4"/><text x="46.3576%" y="671.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (4 samples, 0.12%)</title><rect x="46.1076%" y="645" width="0.1202%" height="15" fill="rgb(218,129,16)" fg:x="1534" fg:w="4"/><text x="46.3576%" y="655.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.06%)</title><rect x="46.1677%" y="629" width="0.0601%" height="15" fill="rgb(216,85,19)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="639.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.06%)</title><rect x="46.1677%" y="613" width="0.0601%" height="15" fill="rgb(235,228,7)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="623.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.1677%" y="597" width="0.0601%" height="15" fill="rgb(245,175,0)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="607.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.1677%" y="581" width="0.0601%" height="15" fill="rgb(208,168,36)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="591.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.1677%" y="565" width="0.0601%" height="15" fill="rgb(246,171,24)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.1677%" y="549" width="0.0601%" height="15" fill="rgb(215,142,24)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="559.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.1677%" y="533" width="0.0601%" height="15" fill="rgb(250,187,7)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="543.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.1677%" y="517" width="0.0601%" height="15" fill="rgb(228,66,33)" fg:x="1536" fg:w="2"/><text x="46.4177%" y="527.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1978%" y="501" width="0.0301%" height="15" fill="rgb(234,215,21)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1978%" y="485" width="0.0301%" height="15" fill="rgb(222,191,20)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="495.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1978%" y="469" width="0.0301%" height="15" fill="rgb(245,79,54)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="479.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1978%" y="453" width="0.0301%" height="15" fill="rgb(240,10,37)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="463.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1978%" y="437" width="0.0301%" height="15" fill="rgb(214,192,32)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="447.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1978%" y="421" width="0.0301%" height="15" fill="rgb(209,36,54)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="431.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1978%" y="405" width="0.0301%" height="15" fill="rgb(220,10,11)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="415.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1978%" y="389" width="0.0301%" height="15" fill="rgb(221,106,17)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="399.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1978%" y="373" width="0.0301%" height="15" fill="rgb(251,142,44)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="383.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1978%" y="357" width="0.0301%" height="15" fill="rgb(238,13,15)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="367.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.1978%" y="341" width="0.0301%" height="15" fill="rgb(208,107,27)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="351.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.1978%" y="325" width="0.0301%" height="15" fill="rgb(205,136,37)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="335.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.1978%" y="309" width="0.0301%" height="15" fill="rgb(250,205,27)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="319.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.1978%" y="293" width="0.0301%" height="15" fill="rgb(210,80,43)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="303.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.1978%" y="277" width="0.0301%" height="15" fill="rgb(247,160,36)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="287.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.1978%" y="261" width="0.0301%" height="15" fill="rgb(234,13,49)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="271.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.1978%" y="245" width="0.0301%" height="15" fill="rgb(234,122,0)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.1978%" y="229" width="0.0301%" height="15" fill="rgb(207,146,38)" fg:x="1537" fg:w="1"/><text x="46.4478%" y="239.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.2278%" y="629" width="0.0301%" height="15" fill="rgb(207,177,25)" fg:x="1538" fg:w="1"/><text x="46.4778%" y="639.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.2278%" y="613" width="0.0301%" height="15" fill="rgb(211,178,42)" fg:x="1538" fg:w="1"/><text x="46.4778%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.2278%" y="597" width="0.0301%" height="15" fill="rgb(230,69,54)" fg:x="1538" fg:w="1"/><text x="46.4778%" y="607.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.2278%" y="645" width="0.0601%" height="15" fill="rgb(214,135,41)" fg:x="1538" fg:w="2"/><text x="46.4778%" y="655.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.2579%" y="629" width="0.0301%" height="15" fill="rgb(237,67,25)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="639.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.2579%" y="613" width="0.0301%" height="15" fill="rgb(222,189,50)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="623.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.2579%" y="597" width="0.0301%" height="15" fill="rgb(245,148,34)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="607.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.2579%" y="581" width="0.0301%" height="15" fill="rgb(222,29,6)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="591.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.2579%" y="565" width="0.0301%" height="15" fill="rgb(221,189,43)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="575.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.2579%" y="549" width="0.0301%" height="15" fill="rgb(207,36,27)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.2579%" y="533" width="0.0301%" height="15" fill="rgb(217,90,24)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.2579%" y="517" width="0.0301%" height="15" fill="rgb(224,66,35)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.2579%" y="501" width="0.0301%" height="15" fill="rgb(221,13,50)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.2579%" y="485" width="0.0301%" height="15" fill="rgb(236,68,49)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.2579%" y="469" width="0.0301%" height="15" fill="rgb(229,146,28)" fg:x="1539" fg:w="1"/><text x="46.5079%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.09%)</title><rect x="46.2278%" y="693" width="0.0902%" height="15" fill="rgb(225,31,38)" fg:x="1538" fg:w="3"/><text x="46.4778%" y="703.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (3 samples, 0.09%)</title><rect x="46.2278%" y="677" width="0.0902%" height="15" fill="rgb(250,208,3)" fg:x="1538" fg:w="3"/><text x="46.4778%" y="687.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (3 samples, 0.09%)</title><rect x="46.2278%" y="661" width="0.0902%" height="15" fill="rgb(246,54,23)" fg:x="1538" fg:w="3"/><text x="46.4778%" y="671.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.2879%" y="645" width="0.0301%" height="15" fill="rgb(243,76,11)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="655.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.2879%" y="629" width="0.0301%" height="15" fill="rgb(245,21,50)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="639.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.2879%" y="613" width="0.0301%" height="15" fill="rgb(228,9,43)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="623.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.2879%" y="597" width="0.0301%" height="15" fill="rgb(208,100,47)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="607.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.2879%" y="581" width="0.0301%" height="15" fill="rgb(232,26,8)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.2879%" y="565" width="0.0301%" height="15" fill="rgb(216,166,38)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="575.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.2879%" y="549" width="0.0301%" height="15" fill="rgb(251,202,51)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="559.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.2879%" y="533" width="0.0301%" height="15" fill="rgb(254,216,34)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.2879%" y="517" width="0.0301%" height="15" fill="rgb(251,32,27)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.2879%" y="501" width="0.0301%" height="15" fill="rgb(208,127,28)" fg:x="1540" fg:w="1"/><text x="46.5379%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3180%" y="629" width="0.0301%" height="15" fill="rgb(224,137,22)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="639.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.3180%" y="613" width="0.0301%" height="15" fill="rgb(254,70,32)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="623.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.3180%" y="597" width="0.0301%" height="15" fill="rgb(229,75,37)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="607.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.3180%" y="581" width="0.0301%" height="15" fill="rgb(252,64,23)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3180%" y="565" width="0.0301%" height="15" fill="rgb(232,162,48)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.3180%" y="549" width="0.0301%" height="15" fill="rgb(246,160,12)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="559.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.3180%" y="533" width="0.0301%" height="15" fill="rgb(247,166,0)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.3180%" y="517" width="0.0301%" height="15" fill="rgb(249,219,21)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.3180%" y="501" width="0.0301%" height="15" fill="rgb(205,209,3)" fg:x="1541" fg:w="1"/><text x="46.5680%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3481%" y="501" width="0.0301%" height="15" fill="rgb(243,44,1)" fg:x="1542" fg:w="1"/><text x="46.5981%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.3481%" y="485" width="0.0301%" height="15" fill="rgb(206,159,16)" fg:x="1542" fg:w="1"/><text x="46.5981%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.3481%" y="469" width="0.0301%" height="15" fill="rgb(244,77,30)" fg:x="1542" fg:w="1"/><text x="46.5981%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.3481%" y="453" width="0.0301%" height="15" fill="rgb(218,69,12)" fg:x="1542" fg:w="1"/><text x="46.5981%" y="463.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.06%)</title><rect x="46.3481%" y="629" width="0.0601%" height="15" fill="rgb(212,87,7)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="639.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.3481%" y="613" width="0.0601%" height="15" fill="rgb(245,114,25)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="623.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.3481%" y="597" width="0.0601%" height="15" fill="rgb(210,61,42)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="607.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.3481%" y="581" width="0.0601%" height="15" fill="rgb(211,52,33)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="591.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.06%)</title><rect x="46.3481%" y="565" width="0.0601%" height="15" fill="rgb(234,58,33)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.3481%" y="549" width="0.0601%" height="15" fill="rgb(220,115,36)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="559.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.3481%" y="533" width="0.0601%" height="15" fill="rgb(243,153,54)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="543.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.3481%" y="517" width="0.0601%" height="15" fill="rgb(251,47,18)" fg:x="1542" fg:w="2"/><text x="46.5981%" y="527.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.3781%" y="501" width="0.0301%" height="15" fill="rgb(242,102,42)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="511.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.3781%" y="485" width="0.0301%" height="15" fill="rgb(234,31,38)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="495.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3781%" y="469" width="0.0301%" height="15" fill="rgb(221,117,51)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="479.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.3781%" y="453" width="0.0301%" height="15" fill="rgb(212,20,18)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="463.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.3781%" y="437" width="0.0301%" height="15" fill="rgb(245,133,36)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="447.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.3781%" y="421" width="0.0301%" height="15" fill="rgb(212,6,19)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="431.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3781%" y="405" width="0.0301%" height="15" fill="rgb(218,1,36)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="415.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.3781%" y="389" width="0.0301%" height="15" fill="rgb(246,84,54)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="399.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.3781%" y="373" width="0.0301%" height="15" fill="rgb(242,110,6)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="383.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3781%" y="357" width="0.0301%" height="15" fill="rgb(214,47,5)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="367.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.3781%" y="341" width="0.0301%" height="15" fill="rgb(218,159,25)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="351.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.3781%" y="325" width="0.0301%" height="15" fill="rgb(215,211,28)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="335.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3781%" y="309" width="0.0301%" height="15" fill="rgb(238,59,32)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="319.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.3781%" y="293" width="0.0301%" height="15" fill="rgb(226,82,3)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="303.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.3781%" y="277" width="0.0301%" height="15" fill="rgb(240,164,32)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="287.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.3781%" y="261" width="0.0301%" height="15" fill="rgb(232,46,7)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="271.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.3781%" y="245" width="0.0301%" height="15" fill="rgb(229,129,53)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="255.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.3781%" y="229" width="0.0301%" height="15" fill="rgb(234,188,29)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="239.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_cwd_root (1 samples, 0.03%)</title><rect x="46.3781%" y="213" width="0.0301%" height="15" fill="rgb(246,141,4)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.3781%" y="197" width="0.0301%" height="15" fill="rgb(229,23,39)" fg:x="1543" fg:w="1"/><text x="46.6281%" y="207.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4082%" y="549" width="0.0301%" height="15" fill="rgb(206,12,3)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="559.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4082%" y="533" width="0.0301%" height="15" fill="rgb(252,226,20)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="543.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4082%" y="517" width="0.0301%" height="15" fill="rgb(216,123,35)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="527.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.4082%" y="501" width="0.0301%" height="15" fill="rgb(212,68,40)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="511.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4082%" y="485" width="0.0301%" height="15" fill="rgb(254,125,32)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="495.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4082%" y="469" width="0.0301%" height="15" fill="rgb(253,97,22)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="479.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4082%" y="453" width="0.0301%" height="15" fill="rgb(241,101,14)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4082%" y="437" width="0.0301%" height="15" fill="rgb(238,103,29)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="447.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.4082%" y="421" width="0.0301%" height="15" fill="rgb(233,195,47)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="431.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.4082%" y="405" width="0.0301%" height="15" fill="rgb(246,218,30)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="415.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.4082%" y="389" width="0.0301%" height="15" fill="rgb(219,145,47)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.4082%" y="373" width="0.0301%" height="15" fill="rgb(243,12,26)" fg:x="1544" fg:w="1"/><text x="46.6582%" y="383.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.15%)</title><rect x="46.3180%" y="693" width="0.1503%" height="15" fill="rgb(214,87,16)" fg:x="1541" fg:w="5"/><text x="46.5680%" y="703.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.15%)</title><rect x="46.3180%" y="677" width="0.1503%" height="15" fill="rgb(208,99,42)" fg:x="1541" fg:w="5"/><text x="46.5680%" y="687.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (5 samples, 0.15%)</title><rect x="46.3180%" y="661" width="0.1503%" height="15" fill="rgb(253,99,2)" fg:x="1541" fg:w="5"/><text x="46.5680%" y="671.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (5 samples, 0.15%)</title><rect x="46.3180%" y="645" width="0.1503%" height="15" fill="rgb(220,168,23)" fg:x="1541" fg:w="5"/><text x="46.5680%" y="655.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.06%)</title><rect x="46.4082%" y="629" width="0.0601%" height="15" fill="rgb(242,38,24)" fg:x="1544" fg:w="2"/><text x="46.6582%" y="639.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.06%)</title><rect x="46.4082%" y="613" width="0.0601%" height="15" fill="rgb(225,182,9)" fg:x="1544" fg:w="2"/><text x="46.6582%" y="623.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.4082%" y="597" width="0.0601%" height="15" fill="rgb(243,178,37)" fg:x="1544" fg:w="2"/><text x="46.6582%" y="607.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.4082%" y="581" width="0.0601%" height="15" fill="rgb(232,139,19)" fg:x="1544" fg:w="2"/><text x="46.6582%" y="591.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.4082%" y="565" width="0.0601%" height="15" fill="rgb(225,201,24)" fg:x="1544" fg:w="2"/><text x="46.6582%" y="575.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.4382%" y="549" width="0.0301%" height="15" fill="rgb(221,47,46)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="559.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.4382%" y="533" width="0.0301%" height="15" fill="rgb(249,23,13)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4382%" y="517" width="0.0301%" height="15" fill="rgb(219,9,5)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="527.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4382%" y="501" width="0.0301%" height="15" fill="rgb(254,171,16)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="511.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4382%" y="485" width="0.0301%" height="15" fill="rgb(230,171,20)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="495.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4382%" y="469" width="0.0301%" height="15" fill="rgb(210,71,41)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="479.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4382%" y="453" width="0.0301%" height="15" fill="rgb(206,173,20)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="463.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4382%" y="437" width="0.0301%" height="15" fill="rgb(233,88,34)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="447.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.4382%" y="421" width="0.0301%" height="15" fill="rgb(223,209,46)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="431.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4382%" y="405" width="0.0301%" height="15" fill="rgb(250,43,18)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="415.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4382%" y="389" width="0.0301%" height="15" fill="rgb(208,13,10)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="399.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4382%" y="373" width="0.0301%" height="15" fill="rgb(212,200,36)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="383.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.4382%" y="357" width="0.0301%" height="15" fill="rgb(225,90,30)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="367.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.4382%" y="341" width="0.0301%" height="15" fill="rgb(236,182,39)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="351.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4382%" y="325" width="0.0301%" height="15" fill="rgb(212,144,35)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="335.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4382%" y="309" width="0.0301%" height="15" fill="rgb(228,63,44)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="319.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4382%" y="293" width="0.0301%" height="15" fill="rgb(228,109,6)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="303.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4382%" y="277" width="0.0301%" height="15" fill="rgb(238,117,24)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="287.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4382%" y="261" width="0.0301%" height="15" fill="rgb(242,26,26)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="271.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4382%" y="245" width="0.0301%" height="15" fill="rgb(221,92,48)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="255.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4382%" y="229" width="0.0301%" height="15" fill="rgb(209,209,32)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="239.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.4382%" y="213" width="0.0301%" height="15" fill="rgb(221,70,22)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="223.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.4382%" y="197" width="0.0301%" height="15" fill="rgb(248,145,5)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="207.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.4382%" y="181" width="0.0301%" height="15" fill="rgb(226,116,26)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.4382%" y="165" width="0.0301%" height="15" fill="rgb(244,5,17)" fg:x="1545" fg:w="1"/><text x="46.6882%" y="175.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.27%)</title><rect x="46.2278%" y="757" width="0.2705%" height="15" fill="rgb(252,159,33)" fg:x="1538" fg:w="9"/><text x="46.4778%" y="767.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.27%)</title><rect x="46.2278%" y="741" width="0.2705%" height="15" fill="rgb(206,71,0)" fg:x="1538" fg:w="9"/><text x="46.4778%" y="751.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (9 samples, 0.27%)</title><rect x="46.2278%" y="725" width="0.2705%" height="15" fill="rgb(233,118,54)" fg:x="1538" fg:w="9"/><text x="46.4778%" y="735.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (9 samples, 0.27%)</title><rect x="46.2278%" y="709" width="0.2705%" height="15" fill="rgb(234,83,48)" fg:x="1538" fg:w="9"/><text x="46.4778%" y="719.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.4683%" y="693" width="0.0301%" height="15" fill="rgb(228,3,54)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="703.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.4683%" y="677" width="0.0301%" height="15" fill="rgb(226,155,13)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="687.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4683%" y="661" width="0.0301%" height="15" fill="rgb(241,28,37)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="671.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4683%" y="645" width="0.0301%" height="15" fill="rgb(233,93,10)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="655.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4683%" y="629" width="0.0301%" height="15" fill="rgb(225,113,19)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="639.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4683%" y="613" width="0.0301%" height="15" fill="rgb(241,2,18)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="623.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4683%" y="597" width="0.0301%" height="15" fill="rgb(228,207,21)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="607.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4683%" y="581" width="0.0301%" height="15" fill="rgb(213,211,35)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4683%" y="565" width="0.0301%" height="15" fill="rgb(209,83,10)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="575.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4683%" y="549" width="0.0301%" height="15" fill="rgb(209,164,1)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="559.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4683%" y="533" width="0.0301%" height="15" fill="rgb(213,184,43)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="543.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.4683%" y="517" width="0.0301%" height="15" fill="rgb(231,61,34)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4683%" y="501" width="0.0301%" height="15" fill="rgb(235,75,3)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="511.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4683%" y="485" width="0.0301%" height="15" fill="rgb(220,106,47)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="495.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4683%" y="469" width="0.0301%" height="15" fill="rgb(210,196,33)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4683%" y="453" width="0.0301%" height="15" fill="rgb(229,154,42)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="463.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.4683%" y="437" width="0.0301%" height="15" fill="rgb(228,114,26)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="447.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.4683%" y="421" width="0.0301%" height="15" fill="rgb(208,144,1)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="431.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.4683%" y="405" width="0.0301%" height="15" fill="rgb(239,112,37)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.4683%" y="389" width="0.0301%" height="15" fill="rgb(210,96,50)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="399.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.4683%" y="373" width="0.0301%" height="15" fill="rgb(222,178,2)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="383.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.4683%" y="357" width="0.0301%" height="15" fill="rgb(226,74,18)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="367.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.4683%" y="341" width="0.0301%" height="15" fill="rgb(225,67,54)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.4683%" y="325" width="0.0301%" height="15" fill="rgb(251,92,32)" fg:x="1546" fg:w="1"/><text x="46.7183%" y="335.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.4983%" y="661" width="0.0301%" height="15" fill="rgb(228,149,22)" fg:x="1547" fg:w="1"/><text x="46.7483%" y="671.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.4983%" y="645" width="0.0301%" height="15" fill="rgb(243,54,13)" fg:x="1547" fg:w="1"/><text x="46.7483%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.4983%" y="629" width="0.0301%" height="15" fill="rgb(243,180,28)" fg:x="1547" fg:w="1"/><text x="46.7483%" y="639.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 1.23%)</title><rect x="45.3261%" y="805" width="1.2323%" height="15" fill="rgb(208,167,24)" fg:x="1508" fg:w="41"/><text x="45.5761%" y="815.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (41 samples, 1.23%)</title><rect x="45.3261%" y="789" width="1.2323%" height="15" fill="rgb(245,73,45)" fg:x="1508" fg:w="41"/><text x="45.5761%" y="799.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (41 samples, 1.23%)</title><rect x="45.3261%" y="773" width="1.2323%" height="15" fill="rgb(237,203,48)" fg:x="1508" fg:w="41"/><text x="45.5761%" y="783.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.06%)</title><rect x="46.4983%" y="757" width="0.0601%" height="15" fill="rgb(211,197,16)" fg:x="1547" fg:w="2"/><text x="46.7483%" y="767.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.06%)</title><rect x="46.4983%" y="741" width="0.0601%" height="15" fill="rgb(243,99,51)" fg:x="1547" fg:w="2"/><text x="46.7483%" y="751.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.4983%" y="725" width="0.0601%" height="15" fill="rgb(215,123,29)" fg:x="1547" fg:w="2"/><text x="46.7483%" y="735.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.4983%" y="709" width="0.0601%" height="15" fill="rgb(239,186,37)" fg:x="1547" fg:w="2"/><text x="46.7483%" y="719.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.4983%" y="693" width="0.0601%" height="15" fill="rgb(252,136,39)" fg:x="1547" fg:w="2"/><text x="46.7483%" y="703.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.4983%" y="677" width="0.0601%" height="15" fill="rgb(223,213,32)" fg:x="1547" fg:w="2"/><text x="46.7483%" y="687.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.5284%" y="661" width="0.0301%" height="15" fill="rgb(233,115,5)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="671.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.5284%" y="645" width="0.0301%" height="15" fill="rgb(207,226,44)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="655.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.5284%" y="629" width="0.0301%" height="15" fill="rgb(208,126,0)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="639.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.5284%" y="613" width="0.0301%" height="15" fill="rgb(244,66,21)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="623.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.5284%" y="597" width="0.0301%" height="15" fill="rgb(222,97,12)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="607.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.5284%" y="581" width="0.0301%" height="15" fill="rgb(219,213,19)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.5284%" y="565" width="0.0301%" height="15" fill="rgb(252,169,30)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="575.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.5284%" y="549" width="0.0301%" height="15" fill="rgb(206,32,51)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="559.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.5284%" y="533" width="0.0301%" height="15" fill="rgb(250,172,42)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="543.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.5284%" y="517" width="0.0301%" height="15" fill="rgb(209,34,43)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.5284%" y="501" width="0.0301%" height="15" fill="rgb(223,11,35)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="511.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.5284%" y="485" width="0.0301%" height="15" fill="rgb(251,219,26)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="495.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.5284%" y="469" width="0.0301%" height="15" fill="rgb(231,119,3)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.5284%" y="453" width="0.0301%" height="15" fill="rgb(216,97,11)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.5284%" y="437" width="0.0301%" height="15" fill="rgb(223,59,9)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="447.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.5284%" y="421" width="0.0301%" height="15" fill="rgb(233,93,31)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.5284%" y="405" width="0.0301%" height="15" fill="rgb(239,81,33)" fg:x="1548" fg:w="1"/><text x="46.7784%" y="415.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.5585%" y="501" width="0.0301%" height="15" fill="rgb(213,120,34)" fg:x="1549" fg:w="1"/><text x="46.8085%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.5585%" y="485" width="0.0301%" height="15" fill="rgb(243,49,53)" fg:x="1549" fg:w="1"/><text x="46.8085%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.5585%" y="469" width="0.0301%" height="15" fill="rgb(247,216,33)" fg:x="1549" fg:w="1"/><text x="46.8085%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.5585%" y="597" width="0.0601%" height="15" fill="rgb(226,26,14)" fg:x="1549" fg:w="2"/><text x="46.8085%" y="607.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.5585%" y="581" width="0.0601%" height="15" fill="rgb(215,49,53)" fg:x="1549" fg:w="2"/><text x="46.8085%" y="591.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.5585%" y="565" width="0.0601%" height="15" fill="rgb(245,162,40)" fg:x="1549" fg:w="2"/><text x="46.8085%" y="575.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.5585%" y="549" width="0.0601%" height="15" fill="rgb(229,68,17)" fg:x="1549" fg:w="2"/><text x="46.8085%" y="559.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (2 samples, 0.06%)</title><rect x="46.5585%" y="533" width="0.0601%" height="15" fill="rgb(213,182,10)" fg:x="1549" fg:w="2"/><text x="46.8085%" y="543.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (2 samples, 0.06%)</title><rect x="46.5585%" y="517" width="0.0601%" height="15" fill="rgb(245,125,30)" fg:x="1549" fg:w="2"/><text x="46.8085%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.5885%" y="501" width="0.0301%" height="15" fill="rgb(232,202,2)" fg:x="1550" fg:w="1"/><text x="46.8385%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.5885%" y="485" width="0.0301%" height="15" fill="rgb(237,140,51)" fg:x="1550" fg:w="1"/><text x="46.8385%" y="495.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6186%" y="533" width="0.0301%" height="15" fill="rgb(236,157,25)" fg:x="1551" fg:w="1"/><text x="46.8686%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.6186%" y="517" width="0.0301%" height="15" fill="rgb(219,209,0)" fg:x="1551" fg:w="1"/><text x="46.8686%" y="527.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.6186%" y="501" width="0.0301%" height="15" fill="rgb(240,116,54)" fg:x="1551" fg:w="1"/><text x="46.8686%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::create_new_process (1 samples, 0.03%)</title><rect x="46.6186%" y="485" width="0.0301%" height="15" fill="rgb(216,10,36)" fg:x="1551" fg:w="1"/><text x="46.8686%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.6186%" y="469" width="0.0301%" height="15" fill="rgb(222,72,44)" fg:x="1551" fg:w="1"/><text x="46.8686%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.6186%" y="453" width="0.0301%" height="15" fill="rgb(232,159,9)" fg:x="1551" fg:w="1"/><text x="46.8686%" y="463.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.6486%" y="533" width="0.0301%" height="15" fill="rgb(210,39,32)" fg:x="1552" fg:w="1"/><text x="46.8986%" y="543.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6486%" y="517" width="0.0301%" height="15" fill="rgb(216,194,45)" fg:x="1552" fg:w="1"/><text x="46.8986%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.6486%" y="501" width="0.0301%" height="15" fill="rgb(218,18,35)" fg:x="1552" fg:w="1"/><text x="46.8986%" y="511.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.6486%" y="485" width="0.0301%" height="15" fill="rgb(207,83,51)" fg:x="1552" fg:w="1"/><text x="46.8986%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.6486%" y="469" width="0.0301%" height="15" fill="rgb(225,63,43)" fg:x="1552" fg:w="1"/><text x="46.8986%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.6486%" y="453" width="0.0301%" height="15" fill="rgb(207,57,36)" fg:x="1552" fg:w="1"/><text x="46.8986%" y="463.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.15%)</title><rect x="46.5585%" y="645" width="0.1503%" height="15" fill="rgb(216,99,33)" fg:x="1549" fg:w="5"/><text x="46.8085%" y="655.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (5 samples, 0.15%)</title><rect x="46.5585%" y="629" width="0.1503%" height="15" fill="rgb(225,42,16)" fg:x="1549" fg:w="5"/><text x="46.8085%" y="639.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (5 samples, 0.15%)</title><rect x="46.5585%" y="613" width="0.1503%" height="15" fill="rgb(220,201,45)" fg:x="1549" fg:w="5"/><text x="46.8085%" y="623.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.09%)</title><rect x="46.6186%" y="597" width="0.0902%" height="15" fill="rgb(225,33,4)" fg:x="1551" fg:w="3"/><text x="46.8686%" y="607.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.09%)</title><rect x="46.6186%" y="581" width="0.0902%" height="15" fill="rgb(224,33,50)" fg:x="1551" fg:w="3"/><text x="46.8686%" y="591.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (3 samples, 0.09%)</title><rect x="46.6186%" y="565" width="0.0902%" height="15" fill="rgb(246,198,51)" fg:x="1551" fg:w="3"/><text x="46.8686%" y="575.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (3 samples, 0.09%)</title><rect x="46.6186%" y="549" width="0.0902%" height="15" fill="rgb(205,22,4)" fg:x="1551" fg:w="3"/><text x="46.8686%" y="559.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.6787%" y="533" width="0.0301%" height="15" fill="rgb(206,3,8)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="543.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.6787%" y="517" width="0.0301%" height="15" fill="rgb(251,23,15)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="501" width="0.0301%" height="15" fill="rgb(252,88,28)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="511.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="485" width="0.0301%" height="15" fill="rgb(212,127,14)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="495.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="469" width="0.0301%" height="15" fill="rgb(247,145,37)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="453" width="0.0301%" height="15" fill="rgb(209,117,53)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="463.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="437" width="0.0301%" height="15" fill="rgb(212,90,42)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="447.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="421" width="0.0301%" height="15" fill="rgb(218,164,37)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="431.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.6787%" y="405" width="0.0301%" height="15" fill="rgb(246,65,34)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="389" width="0.0301%" height="15" fill="rgb(231,100,33)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="399.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="373" width="0.0301%" height="15" fill="rgb(228,126,14)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="383.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="357" width="0.0301%" height="15" fill="rgb(215,173,21)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="367.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.03%)</title><rect x="46.6787%" y="341" width="0.0301%" height="15" fill="rgb(210,6,40)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="351.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.03%)</title><rect x="46.6787%" y="325" width="0.0301%" height="15" fill="rgb(212,48,18)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="335.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="309" width="0.0301%" height="15" fill="rgb(230,214,11)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="319.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="293" width="0.0301%" height="15" fill="rgb(254,105,39)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="303.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="277" width="0.0301%" height="15" fill="rgb(245,158,5)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="287.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="261" width="0.0301%" height="15" fill="rgb(249,208,11)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="271.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="245" width="0.0301%" height="15" fill="rgb(210,39,28)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="255.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="229" width="0.0301%" height="15" fill="rgb(211,56,53)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="239.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.6787%" y="213" width="0.0301%" height="15" fill="rgb(226,201,30)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="223.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="197" width="0.0301%" height="15" fill="rgb(239,101,34)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="207.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="181" width="0.0301%" height="15" fill="rgb(226,209,5)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="191.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="165" width="0.0301%" height="15" fill="rgb(250,105,47)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="175.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.6787%" y="149" width="0.0301%" height="15" fill="rgb(230,72,3)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="159.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="133" width="0.0301%" height="15" fill="rgb(232,218,39)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="143.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.6787%" y="117" width="0.0301%" height="15" fill="rgb(248,166,6)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="127.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.6787%" y="101" width="0.0301%" height="15" fill="rgb(247,89,20)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="111.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.6787%" y="85" width="0.0301%" height="15" fill="rgb(248,130,54)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="95.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.6787%" y="69" width="0.0301%" height="15" fill="rgb(234,196,4)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="79.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.6787%" y="53" width="0.0301%" height="15" fill="rgb(250,143,31)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.03%)</title><rect x="46.6787%" y="37" width="0.0301%" height="15" fill="rgb(211,110,34)" fg:x="1553" fg:w="1"/><text x="46.9287%" y="47.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.7087%" y="485" width="0.0301%" height="15" fill="rgb(215,124,48)" fg:x="1554" fg:w="1"/><text x="46.9587%" y="495.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.7087%" y="469" width="0.0301%" height="15" fill="rgb(216,46,13)" fg:x="1554" fg:w="1"/><text x="46.9587%" y="479.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.7087%" y="453" width="0.0301%" height="15" fill="rgb(205,184,25)" fg:x="1554" fg:w="1"/><text x="46.9587%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.7087%" y="437" width="0.0301%" height="15" fill="rgb(228,1,10)" fg:x="1554" fg:w="1"/><text x="46.9587%" y="447.50"></text></g><g><title>ping_node`rayon_core::registry::ThreadBuilder::run (49 samples, 1.47%)</title><rect x="45.2961%" y="853" width="1.4728%" height="15" fill="rgb(213,116,27)" fg:x="1507" fg:w="49"/><text x="45.5461%" y="863.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (48 samples, 1.44%)</title><rect x="45.3261%" y="837" width="1.4427%" height="15" fill="rgb(241,95,50)" fg:x="1508" fg:w="48"/><text x="45.5761%" y="847.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (48 samples, 1.44%)</title><rect x="45.3261%" y="821" width="1.4427%" height="15" fill="rgb(238,48,32)" fg:x="1508" fg:w="48"/><text x="45.5761%" y="831.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (7 samples, 0.21%)</title><rect x="46.5585%" y="805" width="0.2104%" height="15" fill="rgb(235,113,49)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="815.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.21%)</title><rect x="46.5585%" y="789" width="0.2104%" height="15" fill="rgb(205,127,43)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="799.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (7 samples, 0.21%)</title><rect x="46.5585%" y="773" width="0.2104%" height="15" fill="rgb(250,162,2)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="783.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (7 samples, 0.21%)</title><rect x="46.5585%" y="757" width="0.2104%" height="15" fill="rgb(220,13,41)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="767.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.21%)</title><rect x="46.5585%" y="741" width="0.2104%" height="15" fill="rgb(249,221,25)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="751.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (7 samples, 0.21%)</title><rect x="46.5585%" y="725" width="0.2104%" height="15" fill="rgb(215,208,19)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="735.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (7 samples, 0.21%)</title><rect x="46.5585%" y="709" width="0.2104%" height="15" fill="rgb(236,175,2)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="719.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.21%)</title><rect x="46.5585%" y="693" width="0.2104%" height="15" fill="rgb(241,52,2)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="703.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (7 samples, 0.21%)</title><rect x="46.5585%" y="677" width="0.2104%" height="15" fill="rgb(248,140,14)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="687.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (7 samples, 0.21%)</title><rect x="46.5585%" y="661" width="0.2104%" height="15" fill="rgb(253,22,42)" fg:x="1549" fg:w="7"/><text x="46.8085%" y="671.50"></text></g><g><title>ping_node`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.06%)</title><rect x="46.7087%" y="645" width="0.0601%" height="15" fill="rgb(234,61,47)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="655.50"></text></g><g><title>ping_node`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.06%)</title><rect x="46.7087%" y="629" width="0.0601%" height="15" fill="rgb(208,226,15)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="639.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.7087%" y="613" width="0.0601%" height="15" fill="rgb(217,221,4)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="623.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.7087%" y="597" width="0.0601%" height="15" fill="rgb(212,174,34)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="607.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.7087%" y="581" width="0.0601%" height="15" fill="rgb(253,83,4)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="591.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.7087%" y="565" width="0.0601%" height="15" fill="rgb(250,195,49)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="575.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (2 samples, 0.06%)</title><rect x="46.7087%" y="549" width="0.0601%" height="15" fill="rgb(241,192,25)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="559.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (2 samples, 0.06%)</title><rect x="46.7087%" y="533" width="0.0601%" height="15" fill="rgb(208,124,10)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="543.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.06%)</title><rect x="46.7087%" y="517" width="0.0601%" height="15" fill="rgb(222,33,0)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="527.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="46.7087%" y="501" width="0.0601%" height="15" fill="rgb(234,209,28)" fg:x="1554" fg:w="2"/><text x="46.9587%" y="511.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.7388%" y="485" width="0.0301%" height="15" fill="rgb(224,11,23)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="495.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.7388%" y="469" width="0.0301%" height="15" fill="rgb(232,99,1)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="479.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.7388%" y="453" width="0.0301%" height="15" fill="rgb(237,95,45)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="463.50"></text></g><g><title>ping_node`rayon_core::registry::in_worker (1 samples, 0.03%)</title><rect x="46.7388%" y="437" width="0.0301%" height="15" fill="rgb(208,109,11)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="447.50"></text></g><g><title>ping_node`rayon_core::join::join_context::_{{closure}} (1 samples, 0.03%)</title><rect x="46.7388%" y="421" width="0.0301%" height="15" fill="rgb(216,190,48)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="431.50"></text></g><g><title>ping_node`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.03%)</title><rect x="46.7388%" y="405" width="0.0301%" height="15" fill="rgb(251,171,36)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="415.50"></text></g><g><title>ping_node`rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.03%)</title><rect x="46.7388%" y="389" width="0.0301%" height="15" fill="rgb(230,62,22)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="399.50"></text></g><g><title>ping_node`rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.03%)</title><rect x="46.7388%" y="373" width="0.0301%" height="15" fill="rgb(225,114,35)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="383.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::update_process (1 samples, 0.03%)</title><rect x="46.7388%" y="357" width="0.0301%" height="15" fill="rgb(215,118,42)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="367.50"></text></g><g><title>ping_node`sysinfo::unix::apple::macos::process::get_process_infos (1 samples, 0.03%)</title><rect x="46.7388%" y="341" width="0.0301%" height="15" fill="rgb(243,119,21)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="46.7388%" y="325" width="0.0301%" height="15" fill="rgb(252,177,53)" fg:x="1555" fg:w="1"/><text x="46.9888%" y="335.50"></text></g><g><title>ping_node`__floatuntidf (2 samples, 0.06%)</title><rect x="46.7689%" y="773" width="0.0601%" height="15" fill="rgb(237,209,29)" fg:x="1556" fg:w="2"/><text x="47.0189%" y="783.50"></text></g><g><title>ping_node`std::time::Instant::now (1 samples, 0.03%)</title><rect x="46.8290%" y="773" width="0.0301%" height="15" fill="rgb(212,65,23)" fg:x="1558" fg:w="1"/><text x="47.0790%" y="783.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="47.4602%" y="757" width="0.0301%" height="15" fill="rgb(230,222,46)" fg:x="1579" fg:w="1"/><text x="47.7102%" y="767.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.03%)</title><rect x="47.4902%" y="757" width="0.0301%" height="15" fill="rgb(215,135,32)" fg:x="1580" fg:w="1"/><text x="47.7402%" y="767.50"></text></g><g><title>libsystem_m.dylib`pow (2 samples, 0.06%)</title><rect x="47.5203%" y="757" width="0.0601%" height="15" fill="rgb(246,101,22)" fg:x="1581" fg:w="2"/><text x="47.7703%" y="767.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (2 samples, 0.06%)</title><rect x="47.5804%" y="757" width="0.0601%" height="15" fill="rgb(206,107,13)" fg:x="1583" fg:w="2"/><text x="47.8304%" y="767.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.03%)</title><rect x="47.6105%" y="741" width="0.0301%" height="15" fill="rgb(250,100,44)" fg:x="1584" fg:w="1"/><text x="47.8605%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::park::Parker::park (3 samples, 0.09%)</title><rect x="47.6405%" y="757" width="0.0902%" height="15" fill="rgb(231,147,38)" fg:x="1585" fg:w="3"/><text x="47.8905%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (5 samples, 0.15%)</title><rect x="47.7307%" y="757" width="0.1503%" height="15" fill="rgb(229,8,40)" fg:x="1588" fg:w="5"/><text x="47.9807%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::driver::Driver::park (3 samples, 0.09%)</title><rect x="48.0012%" y="741" width="0.0902%" height="15" fill="rgb(221,135,30)" fg:x="1597" fg:w="3"/><text x="48.2512%" y="751.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.06%)</title><rect x="48.2717%" y="725" width="0.0601%" height="15" fill="rgb(249,193,18)" fg:x="1606" fg:w="2"/><text x="48.5217%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (1 samples, 0.03%)</title><rect x="48.3318%" y="725" width="0.0301%" height="15" fill="rgb(209,133,39)" fg:x="1608" fg:w="1"/><text x="48.5818%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="48.3619%" y="725" width="0.0301%" height="15" fill="rgb(232,100,14)" fg:x="1609" fg:w="1"/><text x="48.6119%" y="735.50"></text></g><g><title>ping_node`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="48.3919%" y="725" width="0.0301%" height="15" fill="rgb(224,185,1)" fg:x="1610" fg:w="1"/><text x="48.6419%" y="735.50"></text></g><g><title>ping_node`__rdl_dealloc (1 samples, 0.03%)</title><rect x="48.4220%" y="725" width="0.0301%" height="15" fill="rgb(223,139,8)" fg:x="1611" fg:w="1"/><text x="48.6720%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (13 samples, 0.39%)</title><rect x="48.4821%" y="709" width="0.3907%" height="15" fill="rgb(232,213,38)" fg:x="1613" fg:w="13"/><text x="48.7321%" y="719.50"></text></g><g><title>ping_node`parking_lot::condvar::Condvar::wait_until_internal (16 samples, 0.48%)</title><rect x="48.4521%" y="725" width="0.4809%" height="15" fill="rgb(207,94,22)" fg:x="1612" fg:w="16"/><text x="48.7021%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (2 samples, 0.06%)</title><rect x="48.8729%" y="709" width="0.0601%" height="15" fill="rgb(219,183,54)" fg:x="1626" fg:w="2"/><text x="49.1229%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.03%)</title><rect x="48.9029%" y="693" width="0.0301%" height="15" fill="rgb(216,185,54)" fg:x="1627" fg:w="1"/><text x="49.1529%" y="703.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (5 samples, 0.15%)</title><rect x="48.9330%" y="725" width="0.1503%" height="15" fill="rgb(254,217,39)" fg:x="1628" fg:w="5"/><text x="49.1830%" y="735.50"></text></g><g><title>ping_node`std::time::Instant::now (1 samples, 0.03%)</title><rect x="49.0833%" y="725" width="0.0301%" height="15" fill="rgb(240,178,23)" fg:x="1633" fg:w="1"/><text x="49.3333%" y="735.50"></text></g><g><title>ping_node`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (4 samples, 0.12%)</title><rect x="49.1133%" y="725" width="0.1202%" height="15" fill="rgb(218,11,47)" fg:x="1634" fg:w="4"/><text x="49.3633%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Driver::turn (2 samples, 0.06%)</title><rect x="49.2335%" y="725" width="0.0601%" height="15" fill="rgb(218,51,51)" fg:x="1638" fg:w="2"/><text x="49.4835%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::signal::Driver::process (2 samples, 0.06%)</title><rect x="49.2937%" y="725" width="0.0601%" height="15" fill="rgb(238,126,27)" fg:x="1640" fg:w="2"/><text x="49.5437%" y="735.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (6 samples, 0.18%)</title><rect x="49.8948%" y="709" width="0.1803%" height="15" fill="rgb(249,202,22)" fg:x="1660" fg:w="6"/><text x="50.1448%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.24%)</title><rect x="50.0751%" y="709" width="0.2405%" height="15" fill="rgb(254,195,49)" fg:x="1666" fg:w="8"/><text x="50.3251%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.12%)</title><rect x="50.3156%" y="709" width="0.1202%" height="15" fill="rgb(208,123,14)" fg:x="1674" fg:w="4"/><text x="50.5656%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 1.02%)</title><rect x="50.4358%" y="709" width="1.0219%" height="15" fill="rgb(224,200,8)" fg:x="1678" fg:w="34"/><text x="50.6858%" y="719.50"></text></g><g><title>ping_node`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="51.4578%" y="709" width="0.1202%" height="15" fill="rgb(217,61,36)" fg:x="1712" fg:w="4"/><text x="51.7078%" y="719.50"></text></g><g><title>ping_node`DYLD-STUB$$clock_gettime (2 samples, 0.06%)</title><rect x="51.5780%" y="709" width="0.0601%" height="15" fill="rgb(206,35,45)" fg:x="1716" fg:w="2"/><text x="51.8280%" y="719.50"></text></g><g><title>ping_node`__rdl_alloc (1 samples, 0.03%)</title><rect x="51.6381%" y="709" width="0.0301%" height="15" fill="rgb(217,65,33)" fg:x="1718" fg:w="1"/><text x="51.8881%" y="719.50"></text></g><g><title>ping_node`__rust_alloc (1 samples, 0.03%)</title><rect x="51.6682%" y="709" width="0.0301%" height="15" fill="rgb(222,158,48)" fg:x="1719" fg:w="1"/><text x="51.9182%" y="719.50"></text></g><g><title>ping_node`mio::poll::Poll::poll (1 samples, 0.03%)</title><rect x="51.6982%" y="709" width="0.0301%" height="15" fill="rgb(254,2,54)" fg:x="1720" fg:w="1"/><text x="51.9482%" y="719.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_absolute_time (1 samples, 0.03%)</title><rect x="51.7583%" y="677" width="0.0301%" height="15" fill="rgb(250,143,38)" fg:x="1722" fg:w="1"/><text x="52.0083%" y="687.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (1 samples, 0.03%)</title><rect x="51.7884%" y="677" width="0.0301%" height="15" fill="rgb(248,25,0)" fg:x="1723" fg:w="1"/><text x="52.0384%" y="687.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (8 samples, 0.24%)</title><rect x="51.8185%" y="677" width="0.2405%" height="15" fill="rgb(206,152,27)" fg:x="1724" fg:w="8"/><text x="52.0685%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (6 samples, 0.18%)</title><rect x="51.8786%" y="661" width="0.1803%" height="15" fill="rgb(240,77,30)" fg:x="1726" fg:w="6"/><text x="52.1286%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.12%)</title><rect x="52.0589%" y="677" width="0.1202%" height="15" fill="rgb(231,5,3)" fg:x="1732" fg:w="4"/><text x="52.3089%" y="687.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (20 samples, 0.60%)</title><rect x="51.7283%" y="709" width="0.6011%" height="15" fill="rgb(207,226,32)" fg:x="1721" fg:w="20"/><text x="51.9783%" y="719.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (20 samples, 0.60%)</title><rect x="51.7283%" y="693" width="0.6011%" height="15" fill="rgb(222,207,47)" fg:x="1721" fg:w="20"/><text x="51.9783%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (5 samples, 0.15%)</title><rect x="52.1791%" y="677" width="0.1503%" height="15" fill="rgb(229,115,45)" fg:x="1736" fg:w="5"/><text x="52.4291%" y="687.50"></text></g><g><title>ping_node`std::time::Instant::duration_since (5 samples, 0.15%)</title><rect x="52.3294%" y="709" width="0.1503%" height="15" fill="rgb(224,191,6)" fg:x="1741" fg:w="5"/><text x="52.5794%" y="719.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::sub_timespec (5 samples, 0.15%)</title><rect x="52.3294%" y="693" width="0.1503%" height="15" fill="rgb(230,227,24)" fg:x="1741" fg:w="5"/><text x="52.5794%" y="703.50"></text></g><g><title>ping_node`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (6 samples, 0.18%)</title><rect x="52.4797%" y="709" width="0.1803%" height="15" fill="rgb(228,80,19)" fg:x="1746" fg:w="6"/><text x="52.7297%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent (336 samples, 10.10%)</title><rect x="53.1710%" y="693" width="10.0992%" height="15" fill="rgb(247,229,0)" fg:x="1769" fg:w="336"/><text x="53.4210%" y="703.50">libsystem_kerne..</text></g><g><title>ping_node`mio::poll::Poll::poll (25 samples, 0.75%)</title><rect x="63.2702%" y="693" width="0.7514%" height="15" fill="rgb(237,194,15)" fg:x="2105" fg:w="25"/><text x="63.5202%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.03%)</title><rect x="64.0216%" y="677" width="0.0301%" height="15" fill="rgb(219,203,20)" fg:x="2130" fg:w="1"/><text x="64.2716%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.03%)</title><rect x="64.0517%" y="677" width="0.0301%" height="15" fill="rgb(234,128,8)" fg:x="2131" fg:w="1"/><text x="64.3017%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.03%)</title><rect x="64.0818%" y="661" width="0.0301%" height="15" fill="rgb(248,202,8)" fg:x="2132" fg:w="1"/><text x="64.3318%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.12%)</title><rect x="64.0818%" y="677" width="0.1202%" height="15" fill="rgb(206,104,37)" fg:x="2132" fg:w="4"/><text x="64.3318%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.09%)</title><rect x="64.1118%" y="661" width="0.0902%" height="15" fill="rgb(223,8,27)" fg:x="2133" fg:w="3"/><text x="64.3618%" y="671.50"></text></g><g><title>ping_node`__rdl_dealloc (1 samples, 0.03%)</title><rect x="64.2020%" y="677" width="0.0301%" height="15" fill="rgb(216,217,28)" fg:x="2136" fg:w="1"/><text x="64.4520%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::release (8 samples, 0.24%)</title><rect x="64.0216%" y="693" width="0.2405%" height="15" fill="rgb(249,199,1)" fg:x="2130" fg:w="8"/><text x="64.2716%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.03%)</title><rect x="64.2320%" y="677" width="0.0301%" height="15" fill="rgb(240,85,17)" fg:x="2137" fg:w="1"/><text x="64.4820%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (21 samples, 0.63%)</title><rect x="64.3523%" y="645" width="0.6312%" height="15" fill="rgb(206,108,45)" fg:x="2141" fg:w="21"/><text x="64.6023%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::park::wake (24 samples, 0.72%)</title><rect x="64.3523%" y="677" width="0.7214%" height="15" fill="rgb(245,210,41)" fg:x="2141" fg:w="24"/><text x="64.6023%" y="687.50"></text></g><g><title>ping_node`parking_lot::condvar::Condvar::notify_one_slow (24 samples, 0.72%)</title><rect x="64.3523%" y="661" width="0.7214%" height="15" fill="rgb(206,13,37)" fg:x="2141" fg:w="24"/><text x="64.6023%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (3 samples, 0.09%)</title><rect x="64.9835%" y="645" width="0.0902%" height="15" fill="rgb(250,61,18)" fg:x="2162" fg:w="3"/><text x="65.2335%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::task::raw::schedule (1 samples, 0.03%)</title><rect x="65.0736%" y="677" width="0.0301%" height="15" fill="rgb(235,172,48)" fg:x="2165" fg:w="1"/><text x="65.3236%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5 samples, 0.15%)</title><rect x="65.1338%" y="629" width="0.1503%" height="15" fill="rgb(249,201,17)" fg:x="2167" fg:w="5"/><text x="65.3838%" y="639.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.03%)</title><rect x="65.2540%" y="613" width="0.0301%" height="15" fill="rgb(219,208,6)" fg:x="2171" fg:w="1"/><text x="65.5040%" y="623.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (8 samples, 0.24%)</title><rect x="65.1037%" y="661" width="0.2405%" height="15" fill="rgb(248,31,23)" fg:x="2166" fg:w="8"/><text x="65.3537%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (8 samples, 0.24%)</title><rect x="65.1037%" y="645" width="0.2405%" height="15" fill="rgb(245,15,42)" fg:x="2166" fg:w="8"/><text x="65.3537%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.06%)</title><rect x="65.2840%" y="629" width="0.0601%" height="15" fill="rgb(222,217,39)" fg:x="2172" fg:w="2"/><text x="65.5340%" y="639.50"></text></g><g><title>ping_node`tokio::runtime::io::scheduled_io::ScheduledIo::wake (37 samples, 1.11%)</title><rect x="64.2621%" y="693" width="1.1121%" height="15" fill="rgb(210,219,27)" fg:x="2138" fg:w="37"/><text x="64.5121%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::task::waker::wake_by_val (9 samples, 0.27%)</title><rect x="65.1037%" y="677" width="0.2705%" height="15" fill="rgb(252,166,36)" fg:x="2166" fg:w="9"/><text x="65.3537%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.03%)</title><rect x="65.3442%" y="661" width="0.0301%" height="15" fill="rgb(245,132,34)" fg:x="2174" fg:w="1"/><text x="65.5942%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Driver::turn (426 samples, 12.80%)</title><rect x="52.6601%" y="709" width="12.8043%" height="15" fill="rgb(236,54,3)" fg:x="1752" fg:w="426"/><text x="52.9101%" y="719.50">ping_node`tokio::ru..</text></g><g><title>ping_node`tokio::runtime::task::waker::wake_by_val (3 samples, 0.09%)</title><rect x="65.3742%" y="693" width="0.0902%" height="15" fill="rgb(241,173,43)" fg:x="2175" fg:w="3"/><text x="65.6242%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::park::wake (1 samples, 0.03%)</title><rect x="65.4644%" y="709" width="0.0301%" height="15" fill="rgb(215,190,9)" fg:x="2178" fg:w="1"/><text x="65.7144%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::signal::Driver::process (2 samples, 0.06%)</title><rect x="65.4944%" y="709" width="0.0601%" height="15" fill="rgb(242,101,16)" fg:x="2179" fg:w="2"/><text x="65.7444%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::task::waker::wake_by_val (1 samples, 0.03%)</title><rect x="65.5546%" y="709" width="0.0301%" height="15" fill="rgb(223,190,21)" fg:x="2181" fg:w="1"/><text x="65.8046%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="65.9754%" y="677" width="0.0301%" height="15" fill="rgb(215,228,25)" fg:x="2195" fg:w="1"/><text x="66.2254%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="66.0054%" y="677" width="0.0301%" height="15" fill="rgb(225,36,22)" fg:x="2196" fg:w="1"/><text x="66.2554%" y="687.50"></text></g><g><title>ping_node`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.03%)</title><rect x="66.0355%" y="677" width="0.0301%" height="15" fill="rgb(251,106,46)" fg:x="2197" fg:w="1"/><text x="66.2855%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (16 samples, 0.48%)</title><rect x="66.0655%" y="661" width="0.4809%" height="15" fill="rgb(208,90,1)" fg:x="2198" fg:w="16"/><text x="66.3155%" y="671.50"></text></g><g><title>ping_node`parking_lot_core::parking_lot::lock_bucket_pair (10 samples, 0.30%)</title><rect x="66.5464%" y="661" width="0.3006%" height="15" fill="rgb(243,10,4)" fg:x="2214" fg:w="10"/><text x="66.7964%" y="671.50"></text></g><g><title>ping_node`parking_lot::condvar::Condvar::notify_one_slow (27 samples, 0.81%)</title><rect x="66.0655%" y="677" width="0.8115%" height="15" fill="rgb(212,137,27)" fg:x="2198" fg:w="27"/><text x="66.3155%" y="687.50"></text></g><g><title>ping_node`std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="66.8470%" y="661" width="0.0301%" height="15" fill="rgb(231,220,49)" fg:x="2224" fg:w="1"/><text x="67.0970%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::park::wake (35 samples, 1.05%)</title><rect x="65.8551%" y="693" width="1.0520%" height="15" fill="rgb(237,96,20)" fg:x="2191" fg:w="35"/><text x="66.1051%" y="703.50"></text></g><g><title>ping_node`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.03%)</title><rect x="66.8771%" y="677" width="0.0301%" height="15" fill="rgb(239,229,30)" fg:x="2225" fg:w="1"/><text x="67.1271%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::task::raw::schedule (3 samples, 0.09%)</title><rect x="66.9071%" y="693" width="0.0902%" height="15" fill="rgb(219,65,33)" fg:x="2226" fg:w="3"/><text x="67.1571%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.03%)</title><rect x="66.9973%" y="693" width="0.0301%" height="15" fill="rgb(243,134,7)" fg:x="2229" fg:w="1"/><text x="67.2473%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (1 samples, 0.03%)</title><rect x="67.0274%" y="677" width="0.0301%" height="15" fill="rgb(216,177,54)" fg:x="2230" fg:w="1"/><text x="67.2774%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="67.0574%" y="645" width="0.0301%" height="15" fill="rgb(211,160,20)" fg:x="2231" fg:w="1"/><text x="67.3074%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.06%)</title><rect x="67.0574%" y="677" width="0.0601%" height="15" fill="rgb(239,85,39)" fg:x="2231" fg:w="2"/><text x="67.3074%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (2 samples, 0.06%)</title><rect x="67.0574%" y="661" width="0.0601%" height="15" fill="rgb(232,125,22)" fg:x="2231" fg:w="2"/><text x="67.3074%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.03%)</title><rect x="67.0875%" y="645" width="0.0301%" height="15" fill="rgb(244,57,34)" fg:x="2232" fg:w="1"/><text x="67.3375%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::task::waker::wake_by_val (5 samples, 0.15%)</title><rect x="67.0274%" y="693" width="0.1503%" height="15" fill="rgb(214,203,32)" fg:x="2230" fg:w="5"/><text x="67.2774%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.06%)</title><rect x="67.1175%" y="677" width="0.0601%" height="15" fill="rgb(207,58,43)" fg:x="2233" fg:w="2"/><text x="67.3675%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::next_expiration (4 samples, 0.12%)</title><rect x="67.1776%" y="693" width="0.1202%" height="15" fill="rgb(215,193,15)" fg:x="2235" fg:w="4"/><text x="67.4276%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.06%)</title><rect x="67.9892%" y="677" width="0.0601%" height="15" fill="rgb(232,15,44)" fg:x="2262" fg:w="2"/><text x="68.2392%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::poll (64 samples, 1.92%)</title><rect x="67.2979%" y="693" width="1.9237%" height="15" fill="rgb(212,3,48)" fg:x="2239" fg:w="64"/><text x="67.5479%" y="703.50">p..</text></g><g><title>ping_node`tokio::runtime::time::wheel::level::Level::next_expiration (39 samples, 1.17%)</title><rect x="68.0493%" y="677" width="1.1722%" height="15" fill="rgb(218,128,7)" fg:x="2264" fg:w="39"/><text x="68.2993%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (125 samples, 3.76%)</title><rect x="65.5846%" y="709" width="3.7571%" height="15" fill="rgb(226,216,39)" fg:x="2182" fg:w="125"/><text x="65.8346%" y="719.50">ping..</text></g><g><title>ping_node`tokio::runtime::time::wheel::level::Level::next_expiration (4 samples, 0.12%)</title><rect x="69.2215%" y="693" width="0.1202%" height="15" fill="rgb(243,47,51)" fg:x="2303" fg:w="4"/><text x="69.4715%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="69.3417%" y="709" width="0.0301%" height="15" fill="rgb(241,183,40)" fg:x="2307" fg:w="1"/><text x="69.5917%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::poll (3 samples, 0.09%)</title><rect x="69.3718%" y="709" width="0.0902%" height="15" fill="rgb(231,217,32)" fg:x="2308" fg:w="3"/><text x="69.6218%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::time::Driver::park_internal (671 samples, 20.17%)</title><rect x="49.3538%" y="725" width="20.1683%" height="15" fill="rgb(229,61,38)" fg:x="1642" fg:w="671"/><text x="49.6038%" y="735.50">ping_node`tokio::runtime::time::..</text></g><g><title>ping_node`tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.06%)</title><rect x="69.4620%" y="709" width="0.0601%" height="15" fill="rgb(225,210,5)" fg:x="2311" fg:w="2"/><text x="69.7120%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (3 samples, 0.09%)</title><rect x="69.5221%" y="725" width="0.0902%" height="15" fill="rgb(231,79,45)" fg:x="2313" fg:w="3"/><text x="69.7721%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::park::Parker::park (717 samples, 21.55%)</title><rect x="48.0914%" y="741" width="21.5509%" height="15" fill="rgb(224,100,7)" fg:x="1600" fg:w="717"/><text x="48.3414%" y="751.50">ping_node`tokio::runtime::schedule..</text></g><g><title>ping_node`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="69.6123%" y="725" width="0.0301%" height="15" fill="rgb(241,198,18)" fg:x="2316" fg:w="1"/><text x="69.8623%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (728 samples, 21.88%)</title><rect x="47.8810%" y="757" width="21.8816%" height="15" fill="rgb(252,97,53)" fg:x="1593" fg:w="728"/><text x="48.1310%" y="767.50">ping_node`tokio::runtime::scheduler..</text></g><g><title>ping_node`tokio::runtime::time::Driver::park_internal (4 samples, 0.12%)</title><rect x="69.6423%" y="741" width="0.1202%" height="15" fill="rgb(220,88,7)" fg:x="2317" fg:w="4"/><text x="69.8923%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Driver::turn (3 samples, 0.09%)</title><rect x="69.6724%" y="725" width="0.0902%" height="15" fill="rgb(213,176,14)" fg:x="2318" fg:w="3"/><text x="69.9224%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.09%)</title><rect x="69.6724%" y="709" width="0.0902%" height="15" fill="rgb(246,73,7)" fg:x="2318" fg:w="3"/><text x="69.9224%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.09%)</title><rect x="69.7926%" y="741" width="0.0902%" height="15" fill="rgb(245,64,36)" fg:x="2322" fg:w="3"/><text x="70.0426%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.15%)</title><rect x="70.0030%" y="725" width="0.1503%" height="15" fill="rgb(245,80,10)" fg:x="2329" fg:w="5"/><text x="70.2530%" y="735.50"></text></g><g><title>ping_node`parking_lot::condvar::Condvar::notify_one_slow (10 samples, 0.30%)</title><rect x="69.8828%" y="741" width="0.3006%" height="15" fill="rgb(232,107,50)" fg:x="2325" fg:w="10"/><text x="70.1328%" y="751.50"></text></g><g><title>ping_node`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.03%)</title><rect x="70.1533%" y="725" width="0.0301%" height="15" fill="rgb(253,3,0)" fg:x="2334" fg:w="1"/><text x="70.4033%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.03%)</title><rect x="70.1833%" y="741" width="0.0301%" height="15" fill="rgb(212,99,53)" fg:x="2335" fg:w="1"/><text x="70.4333%" y="751.50"></text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.03%)</title><rect x="70.2134%" y="741" width="0.0301%" height="15" fill="rgb(249,111,54)" fg:x="2336" fg:w="1"/><text x="70.4634%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.12%)</title><rect x="70.4839%" y="725" width="0.1202%" height="15" fill="rgb(249,55,30)" fg:x="2345" fg:w="4"/><text x="70.7339%" y="735.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;gossipod::listener::EventListener&lt;gossipod::node::DefaultMetadata&gt;::handle_stream::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.06%)</title><rect x="70.6041%" y="725" width="0.0601%" height="15" fill="rgb(237,47,42)" fg:x="2349" fg:w="2"/><text x="70.8541%" y="735.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::handle_ping::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="70.6643%" y="725" width="0.0301%" height="15" fill="rgb(211,20,18)" fg:x="2351" fg:w="1"/><text x="70.9143%" y="735.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_event_scheduler::_{{closure}} (2 samples, 0.06%)</title><rect x="70.6943%" y="725" width="0.0601%" height="15" fill="rgb(231,203,46)" fg:x="2352" fg:w="2"/><text x="70.9443%" y="735.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_listeners::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="70.7544%" y="725" width="0.0301%" height="15" fill="rgb(237,142,3)" fg:x="2354" fg:w="1"/><text x="71.0044%" y="735.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_tcp_listener_with_retry::_{{closure}} (1 samples, 0.03%)</title><rect x="70.7845%" y="725" width="0.0301%" height="15" fill="rgb(241,107,1)" fg:x="2355" fg:w="1"/><text x="71.0345%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (4 samples, 0.12%)</title><rect x="70.8145%" y="725" width="0.1202%" height="15" fill="rgb(229,83,13)" fg:x="2356" fg:w="4"/><text x="71.0645%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.06%)</title><rect x="70.9949%" y="709" width="0.0601%" height="15" fill="rgb(241,91,40)" fg:x="2362" fg:w="2"/><text x="71.2449%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`close (46 samples, 1.38%)</title><rect x="71.0550%" y="709" width="1.3826%" height="15" fill="rgb(225,3,45)" fg:x="2364" fg:w="46"/><text x="71.3050%" y="719.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.06%)</title><rect x="72.4376%" y="709" width="0.0601%" height="15" fill="rgb(244,223,14)" fg:x="2410" fg:w="2"/><text x="72.6876%" y="719.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::write_to_udp::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="72.4977%" y="709" width="0.0301%" height="15" fill="rgb(224,124,37)" fg:x="2412" fg:w="1"/><text x="72.7477%" y="719.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::Gossipod::probe::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="72.5278%" y="709" width="0.0301%" height="15" fill="rgb(251,171,30)" fg:x="2413" fg:w="1"/><text x="72.7778%" y="719.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::Gossipod::send_ack::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="72.5579%" y="709" width="0.0301%" height="15" fill="rgb(236,46,54)" fg:x="2414" fg:w="1"/><text x="72.8079%" y="719.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;alloc::vec::Vec&lt;u8&gt;&gt;::send::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="72.5879%" y="709" width="0.0301%" height="15" fill="rgb(245,213,5)" fg:x="2415" fg:w="1"/><text x="72.8379%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="72.6480%" y="693" width="0.0301%" height="15" fill="rgb(230,144,27)" fg:x="2417" fg:w="1"/><text x="72.8980%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.03%)</title><rect x="72.7081%" y="645" width="0.0301%" height="15" fill="rgb(220,86,6)" fg:x="2419" fg:w="1"/><text x="72.9581%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="72.7382%" y="645" width="0.0601%" height="15" fill="rgb(240,20,13)" fg:x="2420" fg:w="2"/><text x="72.9882%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="72.7382%" y="629" width="0.0601%" height="15" fill="rgb(217,89,34)" fg:x="2420" fg:w="2"/><text x="72.9882%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="72.7382%" y="613" width="0.0601%" height="15" fill="rgb(229,13,5)" fg:x="2420" fg:w="2"/><text x="72.9882%" y="623.50"></text></g><g><title>ping_node`core::iter::adapters::try_process (8 samples, 0.24%)</title><rect x="72.6781%" y="677" width="0.2405%" height="15" fill="rgb(244,67,35)" fg:x="2418" fg:w="8"/><text x="72.9281%" y="687.50"></text></g><g><title>ping_node`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.24%)</title><rect x="72.6781%" y="661" width="0.2405%" height="15" fill="rgb(221,40,2)" fg:x="2418" fg:w="8"/><text x="72.9281%" y="671.50"></text></g><g><title>ping_node`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.12%)</title><rect x="72.7983%" y="645" width="0.1202%" height="15" fill="rgb(237,157,21)" fg:x="2422" fg:w="4"/><text x="73.0483%" y="655.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::from_bytes (1 samples, 0.03%)</title><rect x="72.8885%" y="629" width="0.0301%" height="15" fill="rgb(222,94,11)" fg:x="2425" fg:w="1"/><text x="73.1385%" y="639.50"></text></g><g><title>ping_node`serde::de::SeqAccess::next_element (1 samples, 0.03%)</title><rect x="72.8885%" y="613" width="0.0301%" height="15" fill="rgb(249,113,6)" fg:x="2425" fg:w="1"/><text x="73.1385%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.03%)</title><rect x="72.9486%" y="661" width="0.0301%" height="15" fill="rgb(238,137,36)" fg:x="2427" fg:w="1"/><text x="73.1986%" y="671.50"></text></g><g><title>ping_node`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (1 samples, 0.03%)</title><rect x="72.9787%" y="661" width="0.0301%" height="15" fill="rgb(210,102,26)" fg:x="2428" fg:w="1"/><text x="73.2287%" y="671.50"></text></g><g><title>ping_node`gossipod::members::Membership&lt;M&gt;::merge (5 samples, 0.15%)</title><rect x="72.9185%" y="677" width="0.1503%" height="15" fill="rgb(218,30,30)" fg:x="2426" fg:w="5"/><text x="73.1685%" y="687.50"></text></g><g><title>ping_node`gossipod::node::Node&lt;M&gt;::merge (2 samples, 0.06%)</title><rect x="73.0087%" y="661" width="0.0601%" height="15" fill="rgb(214,67,26)" fg:x="2429" fg:w="2"/><text x="73.2587%" y="671.50"></text></g><g><title>ping_node`gossipod::node::Node&lt;M&gt;::update_network_info (1 samples, 0.03%)</title><rect x="73.0388%" y="645" width="0.0301%" height="15" fill="rgb(251,9,53)" fg:x="2430" fg:w="1"/><text x="73.2888%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.03%)</title><rect x="73.0388%" y="629" width="0.0301%" height="15" fill="rgb(228,204,25)" fg:x="2430" fg:w="1"/><text x="73.2888%" y="639.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (3 samples, 0.09%)</title><rect x="73.0688%" y="629" width="0.0902%" height="15" fill="rgb(207,153,8)" fg:x="2431" fg:w="3"/><text x="73.3188%" y="639.50"></text></g><g><title>ping_node`core::fmt::write (3 samples, 0.09%)</title><rect x="73.0688%" y="613" width="0.0902%" height="15" fill="rgb(242,9,16)" fg:x="2431" fg:w="3"/><text x="73.3188%" y="623.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::humantime::Timestamp as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="73.1289%" y="597" width="0.0301%" height="15" fill="rgb(217,211,10)" fg:x="2433" fg:w="1"/><text x="73.3789%" y="607.50"></text></g><g><title>ping_node`&lt;humantime::date::Rfc3339Timestamp as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="73.1289%" y="581" width="0.0301%" height="15" fill="rgb(219,228,52)" fg:x="2433" fg:w="1"/><text x="73.3789%" y="591.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::handle_piggybacked_updates::_{{closure}} (24 samples, 0.72%)</title><rect x="72.6781%" y="693" width="0.7214%" height="15" fill="rgb(231,92,29)" fg:x="2418" fg:w="24"/><text x="72.9281%" y="703.50"></text></g><g><title>ping_node`log::__private_api::log_impl (11 samples, 0.33%)</title><rect x="73.0688%" y="677" width="0.3306%" height="15" fill="rgb(232,8,23)" fg:x="2431" fg:w="11"/><text x="73.3188%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (11 samples, 0.33%)</title><rect x="73.0688%" y="661" width="0.3306%" height="15" fill="rgb(216,211,34)" fg:x="2431" fg:w="11"/><text x="73.3188%" y="671.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (11 samples, 0.33%)</title><rect x="73.0688%" y="645" width="0.3306%" height="15" fill="rgb(236,151,0)" fg:x="2431" fg:w="11"/><text x="73.3188%" y="655.50"></text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (8 samples, 0.24%)</title><rect x="73.1590%" y="629" width="0.2405%" height="15" fill="rgb(209,168,3)" fg:x="2434" fg:w="8"/><text x="73.4090%" y="639.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (8 samples, 0.24%)</title><rect x="73.1590%" y="613" width="0.2405%" height="15" fill="rgb(208,129,28)" fg:x="2434" fg:w="8"/><text x="73.4090%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.24%)</title><rect x="73.1590%" y="597" width="0.2405%" height="15" fill="rgb(229,78,22)" fg:x="2434" fg:w="8"/><text x="73.4090%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.03%)</title><rect x="73.3995%" y="677" width="0.0301%" height="15" fill="rgb(228,187,13)" fg:x="2442" fg:w="1"/><text x="73.6495%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="73.4295%" y="677" width="0.0301%" height="15" fill="rgb(240,119,24)" fg:x="2443" fg:w="1"/><text x="73.6795%" y="687.50"></text></g><g><title>ping_node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="73.4596%" y="677" width="0.0301%" height="15" fill="rgb(209,194,42)" fg:x="2444" fg:w="1"/><text x="73.7096%" y="687.50"></text></g><g><title>ping_node`&lt;gossipod::message::Message as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="73.4896%" y="677" width="0.0301%" height="15" fill="rgb(247,200,46)" fg:x="2445" fg:w="1"/><text x="73.7396%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.96%)</title><rect x="73.5497%" y="661" width="0.9618%" height="15" fill="rgb(218,76,16)" fg:x="2447" fg:w="32"/><text x="73.7997%" y="671.50"></text></g><g><title>ping_node`mio::net::udp::UdpSocket::send_to (30 samples, 0.90%)</title><rect x="73.6099%" y="645" width="0.9017%" height="15" fill="rgb(225,21,48)" fg:x="2449" fg:w="30"/><text x="73.8599%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (30 samples, 0.90%)</title><rect x="73.6099%" y="629" width="0.9017%" height="15" fill="rgb(239,223,50)" fg:x="2449" fg:w="30"/><text x="73.8599%" y="639.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::Handle::current (1 samples, 0.03%)</title><rect x="74.5116%" y="661" width="0.0301%" height="15" fill="rgb(244,45,21)" fg:x="2479" fg:w="1"/><text x="74.7616%" y="671.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::write_to_udp::_{{closure}} (35 samples, 1.05%)</title><rect x="73.5197%" y="677" width="1.0520%" height="15" fill="rgb(232,33,43)" fg:x="2446" fg:w="35"/><text x="73.7697%" y="687.50"></text></g><g><title>ping_node`tokio::time::sleep::Sleep::new_timeout (1 samples, 0.03%)</title><rect x="74.5416%" y="661" width="0.0301%" height="15" fill="rgb(209,8,3)" fg:x="2480" fg:w="1"/><text x="74.7916%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::Handle::current (1 samples, 0.03%)</title><rect x="74.5416%" y="645" width="0.0301%" height="15" fill="rgb(214,25,53)" fg:x="2480" fg:w="1"/><text x="74.7916%" y="655.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::write_to_udp::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="74.5717%" y="677" width="0.0301%" height="15" fill="rgb(254,186,54)" fg:x="2481" fg:w="1"/><text x="74.8217%" y="687.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::node::Node&lt;gossipod::node::DefaultMetadata&gt;&gt; (1 samples, 0.03%)</title><rect x="74.6017%" y="677" width="0.0301%" height="15" fill="rgb(208,174,49)" fg:x="2482" fg:w="1"/><text x="74.8517%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="74.6318%" y="661" width="0.0301%" height="15" fill="rgb(233,191,51)" fg:x="2483" fg:w="1"/><text x="74.8818%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="74.8422%" y="645" width="0.0301%" height="15" fill="rgb(222,134,10)" fg:x="2490" fg:w="1"/><text x="75.0922%" y="655.50"></text></g><g><title>ping_node`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (4 samples, 0.12%)</title><rect x="74.8723%" y="645" width="0.1202%" height="15" fill="rgb(230,226,20)" fg:x="2491" fg:w="4"/><text x="75.1223%" y="655.50"></text></g><g><title>ping_node`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.12%)</title><rect x="74.8723%" y="629" width="0.1202%" height="15" fill="rgb(251,111,25)" fg:x="2491" fg:w="4"/><text x="75.1223%" y="639.50"></text></g><g><title>ping_node`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="74.9925%" y="645" width="0.0301%" height="15" fill="rgb(224,40,46)" fg:x="2495" fg:w="1"/><text x="75.2425%" y="655.50"></text></g><g><title>ping_node`alloc::vec::Vec&lt;T,A&gt;::retain (2 samples, 0.06%)</title><rect x="75.0225%" y="645" width="0.0601%" height="15" fill="rgb(236,108,47)" fg:x="2496" fg:w="2"/><text x="75.2725%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.03%)</title><rect x="75.0526%" y="629" width="0.0301%" height="15" fill="rgb(234,93,0)" fg:x="2497" fg:w="1"/><text x="75.3026%" y="639.50"></text></g><g><title>ping_node`&lt;gossipod::members::LeastRecentlyPiggybackedIter&lt;M&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.63%)</title><rect x="74.6619%" y="661" width="0.6312%" height="15" fill="rgb(224,213,32)" fg:x="2484" fg:w="21"/><text x="74.9119%" y="671.50"></text></g><g><title>ping_node`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.21%)</title><rect x="75.0827%" y="645" width="0.2104%" height="15" fill="rgb(251,11,48)" fg:x="2498" fg:w="7"/><text x="75.3327%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.21%)</title><rect x="75.0827%" y="629" width="0.2104%" height="15" fill="rgb(236,173,5)" fg:x="2498" fg:w="7"/><text x="75.3327%" y="639.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (5 samples, 0.15%)</title><rect x="75.2931%" y="661" width="0.1503%" height="15" fill="rgb(230,95,12)" fg:x="2505" fg:w="5"/><text x="75.5431%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.15%)</title><rect x="75.2931%" y="645" width="0.1503%" height="15" fill="rgb(232,209,1)" fg:x="2505" fg:w="5"/><text x="75.5431%" y="655.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (5 samples, 0.15%)</title><rect x="75.2931%" y="629" width="0.1503%" height="15" fill="rgb(232,6,1)" fg:x="2505" fg:w="5"/><text x="75.5431%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.15%)</title><rect x="75.2931%" y="613" width="0.1503%" height="15" fill="rgb(210,224,50)" fg:x="2505" fg:w="5"/><text x="75.5431%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.15%)</title><rect x="75.2931%" y="597" width="0.1503%" height="15" fill="rgb(228,127,35)" fg:x="2505" fg:w="5"/><text x="75.5431%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.15%)</title><rect x="75.2931%" y="581" width="0.1503%" height="15" fill="rgb(245,102,45)" fg:x="2505" fg:w="5"/><text x="75.5431%" y="591.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.03%)</title><rect x="75.4433%" y="645" width="0.0301%" height="15" fill="rgb(214,1,49)" fg:x="2510" fg:w="1"/><text x="75.6933%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.12%)</title><rect x="75.4734%" y="565" width="0.1202%" height="15" fill="rgb(226,163,40)" fg:x="2511" fg:w="4"/><text x="75.7234%" y="575.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_bytes (6 samples, 0.18%)</title><rect x="75.4433%" y="661" width="0.1803%" height="15" fill="rgb(239,212,28)" fg:x="2510" fg:w="6"/><text x="75.6933%" y="671.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (5 samples, 0.15%)</title><rect x="75.4734%" y="645" width="0.1503%" height="15" fill="rgb(220,20,13)" fg:x="2511" fg:w="5"/><text x="75.7234%" y="655.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.15%)</title><rect x="75.4734%" y="629" width="0.1503%" height="15" fill="rgb(210,164,35)" fg:x="2511" fg:w="5"/><text x="75.7234%" y="639.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (5 samples, 0.15%)</title><rect x="75.4734%" y="613" width="0.1503%" height="15" fill="rgb(248,109,41)" fg:x="2511" fg:w="5"/><text x="75.7234%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.15%)</title><rect x="75.4734%" y="597" width="0.1503%" height="15" fill="rgb(238,23,50)" fg:x="2511" fg:w="5"/><text x="75.7234%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.15%)</title><rect x="75.4734%" y="581" width="0.1503%" height="15" fill="rgb(211,48,49)" fg:x="2511" fg:w="5"/><text x="75.7234%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="75.5936%" y="565" width="0.0301%" height="15" fill="rgb(223,36,21)" fg:x="2515" fg:w="1"/><text x="75.8436%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.03%)</title><rect x="75.5936%" y="549" width="0.0301%" height="15" fill="rgb(207,123,46)" fg:x="2515" fg:w="1"/><text x="75.8436%" y="559.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (11 samples, 0.33%)</title><rect x="75.6237%" y="645" width="0.3306%" height="15" fill="rgb(240,218,32)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="655.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (11 samples, 0.33%)</title><rect x="75.6237%" y="629" width="0.3306%" height="15" fill="rgb(252,5,43)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="639.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.33%)</title><rect x="75.6237%" y="613" width="0.3306%" height="15" fill="rgb(252,84,19)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="623.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (11 samples, 0.33%)</title><rect x="75.6237%" y="597" width="0.3306%" height="15" fill="rgb(243,152,39)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.33%)</title><rect x="75.6237%" y="581" width="0.3306%" height="15" fill="rgb(234,160,15)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.33%)</title><rect x="75.6237%" y="565" width="0.3306%" height="15" fill="rgb(237,34,20)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (11 samples, 0.33%)</title><rect x="75.6237%" y="549" width="0.3306%" height="15" fill="rgb(229,97,13)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.33%)</title><rect x="75.6237%" y="533" width="0.3306%" height="15" fill="rgb(234,71,50)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.33%)</title><rect x="75.6237%" y="517" width="0.3306%" height="15" fill="rgb(253,155,4)" fg:x="2516" fg:w="11"/><text x="75.8737%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.30%)</title><rect x="75.6537%" y="501" width="0.3006%" height="15" fill="rgb(222,185,37)" fg:x="2517" fg:w="10"/><text x="75.9037%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.03%)</title><rect x="75.9243%" y="485" width="0.0301%" height="15" fill="rgb(251,177,13)" fg:x="2526" fg:w="1"/><text x="76.1743%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.18%)</title><rect x="76.0144%" y="565" width="0.1803%" height="15" fill="rgb(250,179,40)" fg:x="2529" fg:w="6"/><text x="76.2644%" y="575.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (9 samples, 0.27%)</title><rect x="75.9543%" y="645" width="0.2705%" height="15" fill="rgb(242,44,2)" fg:x="2527" fg:w="9"/><text x="76.2043%" y="655.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.27%)</title><rect x="75.9543%" y="629" width="0.2705%" height="15" fill="rgb(216,177,13)" fg:x="2527" fg:w="9"/><text x="76.2043%" y="639.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (9 samples, 0.27%)</title><rect x="75.9543%" y="613" width="0.2705%" height="15" fill="rgb(216,106,43)" fg:x="2527" fg:w="9"/><text x="76.2043%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.21%)</title><rect x="76.0144%" y="597" width="0.2104%" height="15" fill="rgb(216,183,2)" fg:x="2529" fg:w="7"/><text x="76.2644%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.21%)</title><rect x="76.0144%" y="581" width="0.2104%" height="15" fill="rgb(249,75,3)" fg:x="2529" fg:w="7"/><text x="76.2644%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="76.1948%" y="565" width="0.0301%" height="15" fill="rgb(219,67,39)" fg:x="2535" fg:w="1"/><text x="76.4448%" y="575.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_remote_node (21 samples, 0.63%)</title><rect x="75.6237%" y="661" width="0.6312%" height="15" fill="rgb(253,228,2)" fg:x="2516" fg:w="21"/><text x="75.8737%" y="671.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_socket_addr (1 samples, 0.03%)</title><rect x="76.2248%" y="645" width="0.0301%" height="15" fill="rgb(235,138,27)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="655.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.03%)</title><rect x="76.2248%" y="629" width="0.0301%" height="15" fill="rgb(236,97,51)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="639.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.03%)</title><rect x="76.2248%" y="613" width="0.0301%" height="15" fill="rgb(240,80,30)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="623.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="76.2248%" y="597" width="0.0301%" height="15" fill="rgb(230,178,19)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="607.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="76.2248%" y="581" width="0.0301%" height="15" fill="rgb(210,190,27)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="76.2248%" y="565" width="0.0301%" height="15" fill="rgb(222,107,31)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="76.2248%" y="549" width="0.0301%" height="15" fill="rgb(216,127,34)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="76.2248%" y="533" width="0.0301%" height="15" fill="rgb(234,116,52)" fg:x="2536" fg:w="1"/><text x="76.4748%" y="543.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_u8 (1 samples, 0.03%)</title><rect x="76.2549%" y="661" width="0.0301%" height="15" fill="rgb(222,124,15)" fg:x="2537" fg:w="1"/><text x="76.5049%" y="671.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.03%)</title><rect x="76.2549%" y="645" width="0.0301%" height="15" fill="rgb(231,179,28)" fg:x="2537" fg:w="1"/><text x="76.5049%" y="655.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.03%)</title><rect x="76.2549%" y="629" width="0.0301%" height="15" fill="rgb(226,93,45)" fg:x="2537" fg:w="1"/><text x="76.5049%" y="639.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::encode_message_with_piggybacked_updates::_{{closure}} (59 samples, 1.77%)</title><rect x="74.6318%" y="677" width="1.7734%" height="15" fill="rgb(215,8,51)" fg:x="2483" fg:w="59"/><text x="74.8818%" y="687.50">p..</text></g><g><title>ping_node`gossipod::node::NodeMetadata::to_bytes (4 samples, 0.12%)</title><rect x="76.2849%" y="661" width="0.1202%" height="15" fill="rgb(223,106,5)" fg:x="2538" fg:w="4"/><text x="76.5349%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.12%)</title><rect x="76.2849%" y="645" width="0.1202%" height="15" fill="rgb(250,191,5)" fg:x="2538" fg:w="4"/><text x="76.5349%" y="655.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::get_local_node::_{{closure}} (1 samples, 0.03%)</title><rect x="76.4052%" y="677" width="0.0301%" height="15" fill="rgb(242,132,44)" fg:x="2542" fg:w="1"/><text x="76.6552%" y="687.50"></text></g><g><title>ping_node`&lt;gossipod::node::Node&lt;M&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="76.4052%" y="661" width="0.0301%" height="15" fill="rgb(251,152,29)" fg:x="2542" fg:w="1"/><text x="76.6552%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="76.4052%" y="645" width="0.0301%" height="15" fill="rgb(218,179,5)" fg:x="2542" fg:w="1"/><text x="76.6552%" y="655.50"></text></g><g><title>ping_node`gossipod::members::Membership&lt;M&gt;::least_recently_piggybacked_iter (1 samples, 0.03%)</title><rect x="76.4352%" y="677" width="0.0301%" height="15" fill="rgb(227,67,19)" fg:x="2543" fg:w="1"/><text x="76.6852%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.24%)</title><rect x="76.4653%" y="533" width="0.2405%" height="15" fill="rgb(233,119,31)" fg:x="2544" fg:w="8"/><text x="76.7153%" y="543.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (10 samples, 0.30%)</title><rect x="76.4653%" y="597" width="0.3006%" height="15" fill="rgb(241,120,22)" fg:x="2544" fg:w="10"/><text x="76.7153%" y="607.50"></text></g><g><title>ping_node`core::fmt::write (10 samples, 0.30%)</title><rect x="76.4653%" y="581" width="0.3006%" height="15" fill="rgb(224,102,30)" fg:x="2544" fg:w="10"/><text x="76.7153%" y="591.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (10 samples, 0.30%)</title><rect x="76.4653%" y="565" width="0.3006%" height="15" fill="rgb(210,164,37)" fg:x="2544" fg:w="10"/><text x="76.7153%" y="575.50"></text></g><g><title>ping_node`core::fmt::write (10 samples, 0.30%)</title><rect x="76.4653%" y="549" width="0.3006%" height="15" fill="rgb(226,191,16)" fg:x="2544" fg:w="10"/><text x="76.7153%" y="559.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.06%)</title><rect x="76.7057%" y="533" width="0.0601%" height="15" fill="rgb(214,40,45)" fg:x="2552" fg:w="2"/><text x="76.9557%" y="543.50"></text></g><g><title>ping_node`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="76.7659%" y="581" width="0.0301%" height="15" fill="rgb(244,29,26)" fg:x="2554" fg:w="1"/><text x="77.0159%" y="591.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="76.7659%" y="565" width="0.0301%" height="15" fill="rgb(216,16,5)" fg:x="2554" fg:w="1"/><text x="77.0159%" y="575.50"></text></g><g><title>ping_node`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.03%)</title><rect x="76.7659%" y="549" width="0.0301%" height="15" fill="rgb(249,76,35)" fg:x="2554" fg:w="1"/><text x="77.0159%" y="559.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (12 samples, 0.36%)</title><rect x="76.4653%" y="629" width="0.3607%" height="15" fill="rgb(207,11,44)" fg:x="2544" fg:w="12"/><text x="76.7153%" y="639.50"></text></g><g><title>ping_node`core::fmt::write (12 samples, 0.36%)</title><rect x="76.4653%" y="613" width="0.3607%" height="15" fill="rgb(228,190,49)" fg:x="2544" fg:w="12"/><text x="76.7153%" y="623.50"></text></g><g><title>ping_node`core::fmt::write (2 samples, 0.06%)</title><rect x="76.7659%" y="597" width="0.0601%" height="15" fill="rgb(214,173,12)" fg:x="2554" fg:w="2"/><text x="77.0159%" y="607.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="76.7959%" y="581" width="0.0301%" height="15" fill="rgb(218,26,35)" fg:x="2555" fg:w="1"/><text x="77.0459%" y="591.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="76.7959%" y="565" width="0.0301%" height="15" fill="rgb(220,200,19)" fg:x="2555" fg:w="1"/><text x="77.0459%" y="575.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (1 samples, 0.03%)</title><rect x="76.7959%" y="549" width="0.0301%" height="15" fill="rgb(239,95,49)" fg:x="2555" fg:w="1"/><text x="77.0459%" y="559.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="76.7959%" y="533" width="0.0301%" height="15" fill="rgb(235,85,53)" fg:x="2555" fg:w="1"/><text x="77.0459%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="76.7959%" y="517" width="0.0301%" height="15" fill="rgb(233,133,31)" fg:x="2555" fg:w="1"/><text x="77.0459%" y="527.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (9 samples, 0.27%)</title><rect x="76.8260%" y="613" width="0.2705%" height="15" fill="rgb(218,25,20)" fg:x="2556" fg:w="9"/><text x="77.0760%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (9 samples, 0.27%)</title><rect x="76.8260%" y="597" width="0.2705%" height="15" fill="rgb(252,210,38)" fg:x="2556" fg:w="9"/><text x="77.0760%" y="607.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (1 samples, 0.03%)</title><rect x="77.0965%" y="613" width="0.0301%" height="15" fill="rgb(242,134,21)" fg:x="2565" fg:w="1"/><text x="77.3465%" y="623.50"></text></g><g><title>libsystem_c.dylib`isatty (1 samples, 0.03%)</title><rect x="77.0965%" y="597" width="0.0301%" height="15" fill="rgb(213,28,48)" fg:x="2565" fg:w="1"/><text x="77.3465%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (1 samples, 0.03%)</title><rect x="77.0965%" y="581" width="0.0301%" height="15" fill="rgb(250,196,2)" fg:x="2565" fg:w="1"/><text x="77.3465%" y="591.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::send_ack::_{{closure}} (125 samples, 3.76%)</title><rect x="73.3995%" y="693" width="3.7571%" height="15" fill="rgb(227,5,17)" fg:x="2442" fg:w="125"/><text x="73.6495%" y="703.50">ping..</text></g><g><title>ping_node`log::__private_api::log_impl (23 samples, 0.69%)</title><rect x="76.4653%" y="677" width="0.6913%" height="15" fill="rgb(221,226,24)" fg:x="2544" fg:w="23"/><text x="76.7153%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (23 samples, 0.69%)</title><rect x="76.4653%" y="661" width="0.6913%" height="15" fill="rgb(211,5,48)" fg:x="2544" fg:w="23"/><text x="76.7153%" y="671.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (23 samples, 0.69%)</title><rect x="76.4653%" y="645" width="0.6913%" height="15" fill="rgb(219,150,6)" fg:x="2544" fg:w="23"/><text x="76.7153%" y="655.50"></text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (11 samples, 0.33%)</title><rect x="76.8260%" y="629" width="0.3306%" height="15" fill="rgb(251,46,16)" fg:x="2556" fg:w="11"/><text x="77.0760%" y="639.50"></text></g><g><title>ping_node`std::io::stdio::Stderr::lock (1 samples, 0.03%)</title><rect x="77.1265%" y="613" width="0.0301%" height="15" fill="rgb(220,204,40)" fg:x="2566" fg:w="1"/><text x="77.3765%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="77.1265%" y="597" width="0.0301%" height="15" fill="rgb(211,85,2)" fg:x="2566" fg:w="1"/><text x="77.3765%" y="607.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::handle_ping::_{{closure}}::_{{closure}} (152 samples, 4.57%)</title><rect x="72.6180%" y="709" width="4.5687%" height="15" fill="rgb(229,17,7)" fg:x="2416" fg:w="152"/><text x="72.8680%" y="719.50">ping_..</text></g><g><title>ping_node`gossipod::members::Membership&lt;M&gt;::merge (1 samples, 0.03%)</title><rect x="77.1566%" y="693" width="0.0301%" height="15" fill="rgb(239,72,28)" fg:x="2567" fg:w="1"/><text x="77.4066%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="77.2468%" y="693" width="0.0601%" height="15" fill="rgb(230,47,54)" fg:x="2570" fg:w="2"/><text x="77.4968%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="77.2468%" y="677" width="0.0601%" height="15" fill="rgb(214,50,8)" fg:x="2570" fg:w="2"/><text x="77.4968%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="77.2468%" y="661" width="0.0601%" height="15" fill="rgb(216,198,43)" fg:x="2570" fg:w="2"/><text x="77.4968%" y="671.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="77.3069%" y="693" width="0.0301%" height="15" fill="rgb(234,20,35)" fg:x="2572" fg:w="1"/><text x="77.5569%" y="703.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (1 samples, 0.03%)</title><rect x="77.3069%" y="677" width="0.0301%" height="15" fill="rgb(254,45,19)" fg:x="2572" fg:w="1"/><text x="77.5569%" y="687.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (1 samples, 0.03%)</title><rect x="77.3069%" y="661" width="0.0301%" height="15" fill="rgb(219,14,44)" fg:x="2572" fg:w="1"/><text x="77.5569%" y="671.50"></text></g><g><title>ping_node`&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="77.3369%" y="693" width="0.0301%" height="15" fill="rgb(217,220,26)" fg:x="2573" fg:w="1"/><text x="77.5869%" y="703.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_event_scheduler::_{{closure}} (7 samples, 0.21%)</title><rect x="77.1867%" y="709" width="0.2104%" height="15" fill="rgb(213,158,28)" fg:x="2568" fg:w="7"/><text x="77.4367%" y="719.50"></text></g><g><title>ping_node`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="77.3670%" y="693" width="0.0301%" height="15" fill="rgb(252,51,52)" fg:x="2574" fg:w="1"/><text x="77.6170%" y="703.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.06%)</title><rect x="77.6676%" y="693" width="0.0601%" height="15" fill="rgb(246,89,16)" fg:x="2584" fg:w="2"/><text x="77.9176%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.15%)</title><rect x="77.7277%" y="693" width="0.1503%" height="15" fill="rgb(216,158,49)" fg:x="2586" fg:w="5"/><text x="77.9777%" y="703.50"></text></g><g><title>ping_node`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="77.9080%" y="677" width="0.0301%" height="15" fill="rgb(236,107,19)" fg:x="2592" fg:w="1"/><text x="78.1580%" y="687.50"></text></g><g><title>ping_node`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (3 samples, 0.09%)</title><rect x="77.9381%" y="677" width="0.0902%" height="15" fill="rgb(228,185,30)" fg:x="2593" fg:w="3"/><text x="78.1881%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::task::waker::clone_waker (1 samples, 0.03%)</title><rect x="78.0283%" y="661" width="0.0301%" height="15" fill="rgb(246,134,8)" fg:x="2596" fg:w="1"/><text x="78.2783%" y="671.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (4 samples, 0.12%)</title><rect x="78.0283%" y="677" width="0.1202%" height="15" fill="rgb(214,143,50)" fg:x="2596" fg:w="4"/><text x="78.2783%" y="687.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (3 samples, 0.09%)</title><rect x="78.0583%" y="661" width="0.0902%" height="15" fill="rgb(228,75,8)" fg:x="2597" fg:w="3"/><text x="78.3083%" y="671.50"></text></g><g><title>ping_node`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2 samples, 0.06%)</title><rect x="78.1485%" y="661" width="0.0601%" height="15" fill="rgb(207,175,4)" fg:x="2600" fg:w="2"/><text x="78.3985%" y="671.50"></text></g><g><title>ping_node`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (8 samples, 0.24%)</title><rect x="78.2086%" y="661" width="0.2405%" height="15" fill="rgb(205,108,24)" fg:x="2602" fg:w="8"/><text x="78.4586%" y="671.50"></text></g><g><title>ping_node`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (11 samples, 0.33%)</title><rect x="78.1485%" y="677" width="0.3306%" height="15" fill="rgb(244,120,49)" fg:x="2600" fg:w="11"/><text x="78.3985%" y="687.50"></text></g><g><title>ping_node`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.03%)</title><rect x="78.4491%" y="661" width="0.0301%" height="15" fill="rgb(223,47,38)" fg:x="2610" fg:w="1"/><text x="78.6991%" y="671.50"></text></g><g><title>ping_node`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (2 samples, 0.06%)</title><rect x="78.4791%" y="677" width="0.0601%" height="15" fill="rgb(229,179,11)" fg:x="2611" fg:w="2"/><text x="78.7291%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (23 samples, 0.69%)</title><rect x="77.8780%" y="693" width="0.6913%" height="15" fill="rgb(231,122,1)" fg:x="2591" fg:w="23"/><text x="78.1280%" y="703.50"></text></g><g><title>ping_node`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.03%)</title><rect x="78.5392%" y="677" width="0.0301%" height="15" fill="rgb(245,119,9)" fg:x="2613" fg:w="1"/><text x="78.7892%" y="687.50"></text></g><g><title>ping_node`tokio::macros::support::thread_rng_n (1 samples, 0.03%)</title><rect x="78.5693%" y="693" width="0.0301%" height="15" fill="rgb(241,163,25)" fg:x="2614" fg:w="1"/><text x="78.8193%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.03%)</title><rect x="78.5993%" y="693" width="0.0301%" height="15" fill="rgb(217,214,3)" fg:x="2615" fg:w="1"/><text x="78.8493%" y="703.50"></text></g><g><title>ping_node`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (3 samples, 0.09%)</title><rect x="78.6294%" y="693" width="0.0902%" height="15" fill="rgb(240,86,28)" fg:x="2616" fg:w="3"/><text x="78.8794%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.45%)</title><rect x="78.8999%" y="677" width="0.4509%" height="15" fill="rgb(215,47,9)" fg:x="2625" fg:w="15"/><text x="79.1499%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (2 samples, 0.06%)</title><rect x="79.3508%" y="677" width="0.0601%" height="15" fill="rgb(252,25,45)" fg:x="2640" fg:w="2"/><text x="79.6008%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (1 samples, 0.03%)</title><rect x="79.4109%" y="677" width="0.0301%" height="15" fill="rgb(251,164,9)" fg:x="2642" fg:w="1"/><text x="79.6609%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (1 samples, 0.03%)</title><rect x="79.4109%" y="661" width="0.0301%" height="15" fill="rgb(233,194,0)" fg:x="2642" fg:w="1"/><text x="79.6609%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (1 samples, 0.03%)</title><rect x="79.4409%" y="661" width="0.0301%" height="15" fill="rgb(249,111,24)" fg:x="2643" fg:w="1"/><text x="79.6909%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.09%)</title><rect x="80.2825%" y="565" width="0.0902%" height="15" fill="rgb(250,223,3)" fg:x="2671" fg:w="3"/><text x="80.5325%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.15%)</title><rect x="80.3727%" y="565" width="0.1503%" height="15" fill="rgb(236,178,37)" fg:x="2674" fg:w="5"/><text x="80.6227%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (41 samples, 1.23%)</title><rect x="79.4710%" y="629" width="1.2323%" height="15" fill="rgb(241,158,50)" fg:x="2644" fg:w="41"/><text x="79.7210%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 1.23%)</title><rect x="79.4710%" y="613" width="1.2323%" height="15" fill="rgb(213,121,41)" fg:x="2644" fg:w="41"/><text x="79.7210%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (41 samples, 1.23%)</title><rect x="79.4710%" y="597" width="1.2323%" height="15" fill="rgb(240,92,3)" fg:x="2644" fg:w="41"/><text x="79.7210%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (30 samples, 0.90%)</title><rect x="79.8016%" y="581" width="0.9017%" height="15" fill="rgb(205,123,3)" fg:x="2655" fg:w="30"/><text x="80.0516%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.18%)</title><rect x="80.5230%" y="565" width="0.1803%" height="15" fill="rgb(205,97,47)" fg:x="2679" fg:w="6"/><text x="80.7730%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_memalign (2 samples, 0.06%)</title><rect x="80.7033%" y="629" width="0.0601%" height="15" fill="rgb(247,152,14)" fg:x="2685" fg:w="2"/><text x="80.9533%" y="639.50"></text></g><g><title>ping_node`__rdl_alloc (44 samples, 1.32%)</title><rect x="79.4710%" y="661" width="1.3225%" height="15" fill="rgb(248,195,53)" fg:x="2644" fg:w="44"/><text x="79.7210%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (44 samples, 1.32%)</title><rect x="79.4710%" y="645" width="1.3225%" height="15" fill="rgb(226,201,16)" fg:x="2644" fg:w="44"/><text x="79.7210%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_memalign (1 samples, 0.03%)</title><rect x="80.7635%" y="629" width="0.0301%" height="15" fill="rgb(205,98,0)" fg:x="2687" fg:w="1"/><text x="81.0135%" y="639.50"></text></g><g><title>ping_node`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (49 samples, 1.47%)</title><rect x="79.4409%" y="677" width="1.4728%" height="15" fill="rgb(214,191,48)" fg:x="2643" fg:w="49"/><text x="79.6909%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (4 samples, 0.12%)</title><rect x="80.7935%" y="661" width="0.1202%" height="15" fill="rgb(237,112,39)" fg:x="2688" fg:w="4"/><text x="81.0435%" y="671.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_listeners::_{{closure}}::_{{closure}} (119 samples, 3.58%)</title><rect x="77.3971%" y="709" width="3.5768%" height="15" fill="rgb(247,203,27)" fg:x="2575" fg:w="119"/><text x="77.6471%" y="719.50">ping..</text></g><g><title>ping_node`tokio::task::spawn::spawn (75 samples, 2.25%)</title><rect x="78.7196%" y="693" width="2.2543%" height="15" fill="rgb(235,124,28)" fg:x="2619" fg:w="75"/><text x="78.9696%" y="703.50">p..</text></g><g><title>ping_node`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (2 samples, 0.06%)</title><rect x="80.9137%" y="677" width="0.0601%" height="15" fill="rgb(208,207,46)" fg:x="2692" fg:w="2"/><text x="81.1637%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.06%)</title><rect x="81.1542%" y="693" width="0.0601%" height="15" fill="rgb(234,176,4)" fg:x="2700" fg:w="2"/><text x="81.4042%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="81.2143%" y="693" width="0.0301%" height="15" fill="rgb(230,133,28)" fg:x="2702" fg:w="1"/><text x="81.4643%" y="703.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="81.2444%" y="693" width="0.0301%" height="15" fill="rgb(211,137,40)" fg:x="2703" fg:w="1"/><text x="81.4944%" y="703.50"></text></g><g><title>ping_node`&lt;gossipod::transport::Transport as gossipod::transport::NodeTransport&gt;::write_to_udp::_{{closure}} (17 samples, 0.51%)</title><rect x="81.2744%" y="693" width="0.5110%" height="15" fill="rgb(254,35,13)" fg:x="2704" fg:w="17"/><text x="81.5244%" y="703.50"></text></g><g><title>ping_node`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.51%)</title><rect x="81.2744%" y="677" width="0.5110%" height="15" fill="rgb(225,49,51)" fg:x="2704" fg:w="17"/><text x="81.5244%" y="687.50"></text></g><g><title>ping_node`mio::net::udp::UdpSocket::send_to (17 samples, 0.51%)</title><rect x="81.2744%" y="661" width="0.5110%" height="15" fill="rgb(251,10,15)" fg:x="2704" fg:w="17"/><text x="81.5244%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (17 samples, 0.51%)</title><rect x="81.2744%" y="645" width="0.5110%" height="15" fill="rgb(228,207,15)" fg:x="2704" fg:w="17"/><text x="81.5244%" y="655.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (2 samples, 0.06%)</title><rect x="81.8154%" y="677" width="0.0601%" height="15" fill="rgb(241,99,19)" fg:x="2722" fg:w="2"/><text x="82.0654%" y="687.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (2 samples, 0.06%)</title><rect x="81.8154%" y="661" width="0.0601%" height="15" fill="rgb(207,104,49)" fg:x="2722" fg:w="2"/><text x="82.0654%" y="671.50"></text></g><g><title>ping_node`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.03%)</title><rect x="81.8756%" y="677" width="0.0301%" height="15" fill="rgb(234,99,18)" fg:x="2724" fg:w="1"/><text x="82.1256%" y="687.50"></text></g><g><title>ping_node`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="81.8756%" y="661" width="0.0301%" height="15" fill="rgb(213,191,49)" fg:x="2724" fg:w="1"/><text x="82.1256%" y="671.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.15%)</title><rect x="81.7854%" y="693" width="0.1503%" height="15" fill="rgb(210,226,19)" fg:x="2721" fg:w="5"/><text x="82.0354%" y="703.50"></text></g><g><title>ping_node`tokio::time::interval::Interval::poll_tick (1 samples, 0.03%)</title><rect x="81.9056%" y="677" width="0.0301%" height="15" fill="rgb(229,97,18)" fg:x="2725" fg:w="1"/><text x="82.1556%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::time::entry::TimerEntry::inner (1 samples, 0.03%)</title><rect x="81.9056%" y="661" width="0.0301%" height="15" fill="rgb(211,167,15)" fg:x="2725" fg:w="1"/><text x="82.1556%" y="671.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.03%)</title><rect x="81.9657%" y="677" width="0.0301%" height="15" fill="rgb(210,169,34)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="687.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.03%)</title><rect x="81.9657%" y="661" width="0.0301%" height="15" fill="rgb(241,121,31)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="81.9657%" y="645" width="0.0301%" height="15" fill="rgb(232,40,11)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="655.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="81.9657%" y="629" width="0.0301%" height="15" fill="rgb(205,86,26)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="81.9657%" y="613" width="0.0301%" height="15" fill="rgb(231,126,28)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="81.9657%" y="597" width="0.0301%" height="15" fill="rgb(219,221,18)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="81.9657%" y="581" width="0.0301%" height="15" fill="rgb(211,40,0)" fg:x="2727" fg:w="1"/><text x="82.2157%" y="591.50"></text></g><g><title>ping_node`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.03%)</title><rect x="82.0258%" y="661" width="0.0301%" height="15" fill="rgb(239,85,43)" fg:x="2729" fg:w="1"/><text x="82.2758%" y="671.50"></text></g><g><title>ping_node`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="82.0258%" y="645" width="0.0301%" height="15" fill="rgb(231,55,21)" fg:x="2729" fg:w="1"/><text x="82.2758%" y="655.50"></text></g><g><title>ping_node`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="82.0559%" y="661" width="0.0301%" height="15" fill="rgb(225,184,43)" fg:x="2730" fg:w="1"/><text x="82.3059%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.21%)</title><rect x="82.0860%" y="645" width="0.2104%" height="15" fill="rgb(251,158,41)" fg:x="2731" fg:w="7"/><text x="82.3360%" y="655.50"></text></g><g><title>ping_node`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.27%)</title><rect x="82.0860%" y="661" width="0.2705%" height="15" fill="rgb(234,159,37)" fg:x="2731" fg:w="9"/><text x="82.3360%" y="671.50"></text></g><g><title>ping_node`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.06%)</title><rect x="82.2964%" y="645" width="0.0601%" height="15" fill="rgb(216,204,22)" fg:x="2738" fg:w="2"/><text x="82.5464%" y="655.50"></text></g><g><title>ping_node`&lt;gossipod::members::LeastRecentlyPiggybackedIter&lt;M&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.39%)</title><rect x="81.9958%" y="677" width="0.3907%" height="15" fill="rgb(214,17,3)" fg:x="2728" fg:w="13"/><text x="82.2458%" y="687.50"></text></g><g><title>ping_node`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="82.3565%" y="661" width="0.0301%" height="15" fill="rgb(212,111,17)" fg:x="2740" fg:w="1"/><text x="82.6065%" y="671.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.03%)</title><rect x="82.3865%" y="677" width="0.0301%" height="15" fill="rgb(221,157,24)" fg:x="2741" fg:w="1"/><text x="82.6365%" y="687.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="82.3865%" y="661" width="0.0301%" height="15" fill="rgb(252,16,13)" fg:x="2741" fg:w="1"/><text x="82.6365%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="82.3865%" y="645" width="0.0301%" height="15" fill="rgb(221,62,2)" fg:x="2741" fg:w="1"/><text x="82.6365%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.03%)</title><rect x="82.3865%" y="629" width="0.0301%" height="15" fill="rgb(247,87,22)" fg:x="2741" fg:w="1"/><text x="82.6365%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.03%)</title><rect x="82.3865%" y="613" width="0.0301%" height="15" fill="rgb(215,73,9)" fg:x="2741" fg:w="1"/><text x="82.6365%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="82.3865%" y="597" width="0.0301%" height="15" fill="rgb(207,175,33)" fg:x="2741" fg:w="1"/><text x="82.6365%" y="607.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_bytes (3 samples, 0.09%)</title><rect x="82.4166%" y="677" width="0.0902%" height="15" fill="rgb(243,129,54)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="687.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (3 samples, 0.09%)</title><rect x="82.4166%" y="661" width="0.0902%" height="15" fill="rgb(227,119,45)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.09%)</title><rect x="82.4166%" y="645" width="0.0902%" height="15" fill="rgb(205,109,36)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="655.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="82.4166%" y="629" width="0.0902%" height="15" fill="rgb(205,6,39)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.09%)</title><rect x="82.4166%" y="613" width="0.0902%" height="15" fill="rgb(221,32,16)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.09%)</title><rect x="82.4166%" y="597" width="0.0902%" height="15" fill="rgb(228,144,50)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.09%)</title><rect x="82.4166%" y="581" width="0.0902%" height="15" fill="rgb(229,201,53)" fg:x="2742" fg:w="3"/><text x="82.6666%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="82.5068%" y="581" width="0.0301%" height="15" fill="rgb(249,153,27)" fg:x="2745" fg:w="1"/><text x="82.7568%" y="591.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_remote_node (2 samples, 0.06%)</title><rect x="82.5068%" y="677" width="0.0601%" height="15" fill="rgb(227,106,25)" fg:x="2745" fg:w="2"/><text x="82.7568%" y="687.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::reserve_inner (2 samples, 0.06%)</title><rect x="82.5068%" y="661" width="0.0601%" height="15" fill="rgb(230,65,29)" fg:x="2745" fg:w="2"/><text x="82.7568%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="82.5068%" y="645" width="0.0601%" height="15" fill="rgb(221,57,46)" fg:x="2745" fg:w="2"/><text x="82.7568%" y="655.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="82.5068%" y="629" width="0.0601%" height="15" fill="rgb(229,161,17)" fg:x="2745" fg:w="2"/><text x="82.7568%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.06%)</title><rect x="82.5068%" y="613" width="0.0601%" height="15" fill="rgb(222,213,11)" fg:x="2745" fg:w="2"/><text x="82.7568%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.06%)</title><rect x="82.5068%" y="597" width="0.0601%" height="15" fill="rgb(235,35,13)" fg:x="2745" fg:w="2"/><text x="82.7568%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="82.5368%" y="581" width="0.0301%" height="15" fill="rgb(233,158,34)" fg:x="2746" fg:w="1"/><text x="82.7868%" y="591.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_u8 (1 samples, 0.03%)</title><rect x="82.5669%" y="677" width="0.0301%" height="15" fill="rgb(215,151,48)" fg:x="2747" fg:w="1"/><text x="82.8169%" y="687.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.03%)</title><rect x="82.5669%" y="661" width="0.0301%" height="15" fill="rgb(229,84,14)" fg:x="2747" fg:w="1"/><text x="82.8169%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="82.5669%" y="645" width="0.0301%" height="15" fill="rgb(229,68,14)" fg:x="2747" fg:w="1"/><text x="82.8169%" y="655.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::encode_message_with_piggybacked_updates::_{{closure}} (24 samples, 0.72%)</title><rect x="81.9357%" y="693" width="0.7214%" height="15" fill="rgb(243,106,26)" fg:x="2726" fg:w="24"/><text x="82.1857%" y="703.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::to_bytes (2 samples, 0.06%)</title><rect x="82.5969%" y="677" width="0.0601%" height="15" fill="rgb(206,45,38)" fg:x="2748" fg:w="2"/><text x="82.8469%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.06%)</title><rect x="82.5969%" y="661" width="0.0601%" height="15" fill="rgb(226,6,15)" fg:x="2748" fg:w="2"/><text x="82.8469%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="82.6570%" y="677" width="0.0301%" height="15" fill="rgb(232,22,54)" fg:x="2750" fg:w="1"/><text x="82.9070%" y="687.50"></text></g><g><title>ping_node`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="82.6871%" y="677" width="0.0301%" height="15" fill="rgb(229,222,32)" fg:x="2751" fg:w="1"/><text x="82.9371%" y="687.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::get_local_node::_{{closure}} (3 samples, 0.09%)</title><rect x="82.6570%" y="693" width="0.0902%" height="15" fill="rgb(228,62,29)" fg:x="2750" fg:w="3"/><text x="82.9070%" y="703.50"></text></g><g><title>ping_node`&lt;gossipod::node::Node&lt;M&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="82.7172%" y="677" width="0.0301%" height="15" fill="rgb(251,103,34)" fg:x="2752" fg:w="1"/><text x="82.9672%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="82.7172%" y="661" width="0.0301%" height="15" fill="rgb(233,12,30)" fg:x="2752" fg:w="1"/><text x="82.9672%" y="671.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::encode_u8 (1 samples, 0.03%)</title><rect x="82.7472%" y="693" width="0.0301%" height="15" fill="rgb(238,52,0)" fg:x="2753" fg:w="1"/><text x="82.9972%" y="703.50"></text></g><g><title>ping_node`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.09%)</title><rect x="82.8073%" y="677" width="0.0902%" height="15" fill="rgb(223,98,5)" fg:x="2755" fg:w="3"/><text x="83.0573%" y="687.50"></text></g><g><title>ping_node`core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="82.8674%" y="661" width="0.0301%" height="15" fill="rgb(228,75,37)" fg:x="2757" fg:w="1"/><text x="83.1174%" y="671.50"></text></g><g><title>ping_node`gossipod::event_manager::EventManager::schedule_event::_{{closure}} (5 samples, 0.15%)</title><rect x="82.7773%" y="693" width="0.1503%" height="15" fill="rgb(205,115,49)" fg:x="2754" fg:w="5"/><text x="83.0273%" y="703.50"></text></g><g><title>ping_node`tokio::sync::mpsc::chan::channel (1 samples, 0.03%)</title><rect x="82.8975%" y="677" width="0.0301%" height="15" fill="rgb(250,154,43)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="687.50"></text></g><g><title>ping_node`__rdl_alloc (1 samples, 0.03%)</title><rect x="82.8975%" y="661" width="0.0301%" height="15" fill="rgb(226,43,29)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (1 samples, 0.03%)</title><rect x="82.8975%" y="645" width="0.0301%" height="15" fill="rgb(249,228,39)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (1 samples, 0.03%)</title><rect x="82.8975%" y="629" width="0.0301%" height="15" fill="rgb(216,79,43)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (1 samples, 0.03%)</title><rect x="82.8975%" y="613" width="0.0301%" height="15" fill="rgb(228,95,12)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="82.8975%" y="597" width="0.0301%" height="15" fill="rgb(249,221,15)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="82.8975%" y="581" width="0.0301%" height="15" fill="rgb(233,34,13)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.03%)</title><rect x="82.8975%" y="565" width="0.0301%" height="15" fill="rgb(214,103,39)" fg:x="2758" fg:w="1"/><text x="83.1475%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="82.9276%" y="677" width="0.0301%" height="15" fill="rgb(251,126,39)" fg:x="2759" fg:w="1"/><text x="83.1776%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.18%)</title><rect x="82.9576%" y="661" width="0.1803%" height="15" fill="rgb(214,216,36)" fg:x="2760" fg:w="6"/><text x="83.2076%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.18%)</title><rect x="82.9576%" y="645" width="0.1803%" height="15" fill="rgb(220,221,8)" fg:x="2760" fg:w="6"/><text x="83.2076%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.09%)</title><rect x="83.0478%" y="629" width="0.0902%" height="15" fill="rgb(240,216,3)" fg:x="2763" fg:w="3"/><text x="83.2978%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.06%)</title><rect x="83.0778%" y="613" width="0.0601%" height="15" fill="rgb(232,218,17)" fg:x="2764" fg:w="2"/><text x="83.3278%" y="623.50"></text></g><g><title>ping_node`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.24%)</title><rect x="82.9576%" y="677" width="0.2405%" height="15" fill="rgb(229,163,45)" fg:x="2760" fg:w="8"/><text x="83.2076%" y="687.50"></text></g><g><title>ping_node`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="83.1380%" y="661" width="0.0601%" height="15" fill="rgb(231,110,42)" fg:x="2766" fg:w="2"/><text x="83.3880%" y="671.50"></text></g><g><title>ping_node`&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="83.1380%" y="645" width="0.0601%" height="15" fill="rgb(208,170,48)" fg:x="2766" fg:w="2"/><text x="83.3880%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.06%)</title><rect x="83.1380%" y="629" width="0.0601%" height="15" fill="rgb(239,116,25)" fg:x="2766" fg:w="2"/><text x="83.3880%" y="639.50"></text></g><g><title>ping_node`gossipod::members::Membership&lt;M&gt;::next_node (10 samples, 0.30%)</title><rect x="82.9276%" y="693" width="0.3006%" height="15" fill="rgb(219,200,50)" fg:x="2759" fg:w="10"/><text x="83.1776%" y="703.50"></text></g><g><title>ping_node`&lt;gossipod::node::Node&lt;M&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="83.1981%" y="677" width="0.0301%" height="15" fill="rgb(245,200,0)" fg:x="2768" fg:w="1"/><text x="83.4481%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="83.1981%" y="661" width="0.0301%" height="15" fill="rgb(245,119,33)" fg:x="2768" fg:w="1"/><text x="83.4481%" y="671.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::to_bytes (1 samples, 0.03%)</title><rect x="83.2281%" y="693" width="0.0301%" height="15" fill="rgb(231,125,12)" fg:x="2769" fg:w="1"/><text x="83.4781%" y="703.50"></text></g><g><title>ping_node`&lt;anstyle::style::Style as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="83.3183%" y="597" width="0.0301%" height="15" fill="rgb(216,96,41)" fg:x="2772" fg:w="1"/><text x="83.5683%" y="607.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (3 samples, 0.09%)</title><rect x="83.3183%" y="613" width="0.0902%" height="15" fill="rgb(248,43,45)" fg:x="2772" fg:w="3"/><text x="83.5683%" y="623.50"></text></g><g><title>ping_node`core::fmt::write (2 samples, 0.06%)</title><rect x="83.3484%" y="597" width="0.0601%" height="15" fill="rgb(217,222,7)" fg:x="2773" fg:w="2"/><text x="83.5984%" y="607.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (1 samples, 0.03%)</title><rect x="83.3784%" y="581" width="0.0301%" height="15" fill="rgb(233,28,6)" fg:x="2774" fg:w="1"/><text x="83.6284%" y="591.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="83.3784%" y="565" width="0.0301%" height="15" fill="rgb(231,218,15)" fg:x="2774" fg:w="1"/><text x="83.6284%" y="575.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="83.3784%" y="549" width="0.0301%" height="15" fill="rgb(226,171,48)" fg:x="2774" fg:w="1"/><text x="83.6284%" y="559.50"></text></g><g><title>ping_node`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="83.4085%" y="581" width="0.0301%" height="15" fill="rgb(235,201,9)" fg:x="2775" fg:w="1"/><text x="83.6585%" y="591.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="83.4085%" y="597" width="0.0601%" height="15" fill="rgb(217,80,15)" fg:x="2775" fg:w="2"/><text x="83.6585%" y="607.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="83.4385%" y="581" width="0.0301%" height="15" fill="rgb(219,152,8)" fg:x="2776" fg:w="1"/><text x="83.6885%" y="591.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (1 samples, 0.03%)</title><rect x="83.4385%" y="565" width="0.0301%" height="15" fill="rgb(243,107,38)" fg:x="2776" fg:w="1"/><text x="83.6885%" y="575.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="83.4385%" y="549" width="0.0301%" height="15" fill="rgb(231,17,5)" fg:x="2776" fg:w="1"/><text x="83.6885%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="83.4385%" y="533" width="0.0301%" height="15" fill="rgb(209,25,54)" fg:x="2776" fg:w="1"/><text x="83.6885%" y="543.50"></text></g><g><title>ping_node`core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.03%)</title><rect x="83.4686%" y="533" width="0.0301%" height="15" fill="rgb(219,0,2)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="543.50"></text></g><g><title>ping_node`core::fmt::builders::DebugTuple::field (1 samples, 0.03%)</title><rect x="83.4686%" y="517" width="0.0301%" height="15" fill="rgb(246,9,5)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="527.50"></text></g><g><title>ping_node`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="83.4686%" y="501" width="0.0301%" height="15" fill="rgb(226,159,4)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="511.50"></text></g><g><title>ping_node`core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.03%)</title><rect x="83.4686%" y="485" width="0.0301%" height="15" fill="rgb(219,175,34)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="495.50"></text></g><g><title>ping_node`core::fmt::builders::DebugStruct::field (1 samples, 0.03%)</title><rect x="83.4686%" y="469" width="0.0301%" height="15" fill="rgb(236,10,46)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="479.50"></text></g><g><title>ping_node`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.03%)</title><rect x="83.4686%" y="453" width="0.0301%" height="15" fill="rgb(240,211,16)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="463.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="83.4686%" y="437" width="0.0301%" height="15" fill="rgb(205,3,43)" fg:x="2777" fg:w="1"/><text x="83.7186%" y="447.50"></text></g><g><title>ping_node`&lt;gossipod::message::MessagePayload as core::fmt::Debug&gt;::fmt (2 samples, 0.06%)</title><rect x="83.4686%" y="549" width="0.0601%" height="15" fill="rgb(245,7,22)" fg:x="2777" fg:w="2"/><text x="83.7186%" y="559.50"></text></g><g><title>ping_node`core::fmt::builders::DebugTuple::field (1 samples, 0.03%)</title><rect x="83.4986%" y="533" width="0.0301%" height="15" fill="rgb(239,132,32)" fg:x="2778" fg:w="1"/><text x="83.7486%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="83.5287%" y="517" width="0.0301%" height="15" fill="rgb(228,202,34)" fg:x="2779" fg:w="1"/><text x="83.7787%" y="527.50"></text></g><g><title>ping_node`&lt;gossipod::message::Message as core::fmt::Debug&gt;::fmt (5 samples, 0.15%)</title><rect x="83.4686%" y="597" width="0.1503%" height="15" fill="rgb(254,200,22)" fg:x="2777" fg:w="5"/><text x="83.7186%" y="607.50"></text></g><g><title>ping_node`core::fmt::Formatter::debug_struct_field3_finish (5 samples, 0.15%)</title><rect x="83.4686%" y="581" width="0.1503%" height="15" fill="rgb(219,10,39)" fg:x="2777" fg:w="5"/><text x="83.7186%" y="591.50"></text></g><g><title>ping_node`core::fmt::builders::DebugStruct::field (5 samples, 0.15%)</title><rect x="83.4686%" y="565" width="0.1503%" height="15" fill="rgb(226,210,39)" fg:x="2777" fg:w="5"/><text x="83.7186%" y="575.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.09%)</title><rect x="83.5287%" y="549" width="0.0902%" height="15" fill="rgb(208,219,16)" fg:x="2779" fg:w="3"/><text x="83.7787%" y="559.50"></text></g><g><title>ping_node`std::io::Write::write_all (3 samples, 0.09%)</title><rect x="83.5287%" y="533" width="0.0902%" height="15" fill="rgb(216,158,51)" fg:x="2779" fg:w="3"/><text x="83.7787%" y="543.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::DefaultFormat::write_args::IndentWrapper as std::io::Write&gt;::write (2 samples, 0.06%)</title><rect x="83.5588%" y="517" width="0.0601%" height="15" fill="rgb(233,14,44)" fg:x="2780" fg:w="2"/><text x="83.8088%" y="527.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.06%)</title><rect x="83.6189%" y="597" width="0.0601%" height="15" fill="rgb(237,97,39)" fg:x="2782" fg:w="2"/><text x="83.8689%" y="607.50"></text></g><g><title>ping_node`std::io::Write::write_all (2 samples, 0.06%)</title><rect x="83.6189%" y="581" width="0.0601%" height="15" fill="rgb(218,198,43)" fg:x="2782" fg:w="2"/><text x="83.8689%" y="591.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::DefaultFormat::write_args::IndentWrapper as std::io::Write&gt;::write (2 samples, 0.06%)</title><rect x="83.6189%" y="565" width="0.0601%" height="15" fill="rgb(231,104,20)" fg:x="2782" fg:w="2"/><text x="83.8689%" y="575.50"></text></g><g><title>ping_node`core::fmt::write (13 samples, 0.39%)</title><rect x="83.3183%" y="629" width="0.3907%" height="15" fill="rgb(254,36,13)" fg:x="2772" fg:w="13"/><text x="83.5683%" y="639.50"></text></g><g><title>ping_node`core::fmt::write (10 samples, 0.30%)</title><rect x="83.4085%" y="613" width="0.3006%" height="15" fill="rgb(248,14,50)" fg:x="2775" fg:w="10"/><text x="83.6585%" y="623.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="83.6790%" y="597" width="0.0301%" height="15" fill="rgb(217,107,29)" fg:x="2784" fg:w="1"/><text x="83.9290%" y="607.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (16 samples, 0.48%)</title><rect x="83.2882%" y="645" width="0.4809%" height="15" fill="rgb(251,169,33)" fg:x="2771" fg:w="16"/><text x="83.5382%" y="655.50"></text></g><g><title>ping_node`env_logger::fmt::DefaultFormat::write_header_value (2 samples, 0.06%)</title><rect x="83.7090%" y="629" width="0.0601%" height="15" fill="rgb(217,108,32)" fg:x="2785" fg:w="2"/><text x="83.9590%" y="639.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="83.7391%" y="613" width="0.0301%" height="15" fill="rgb(219,66,42)" fg:x="2786" fg:w="1"/><text x="83.9891%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="83.7391%" y="597" width="0.0301%" height="15" fill="rgb(206,180,7)" fg:x="2786" fg:w="1"/><text x="83.9891%" y="607.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (13 samples, 0.39%)</title><rect x="83.7692%" y="629" width="0.3907%" height="15" fill="rgb(208,226,31)" fg:x="2787" fg:w="13"/><text x="84.0192%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`write (13 samples, 0.39%)</title><rect x="83.7692%" y="613" width="0.3907%" height="15" fill="rgb(218,26,49)" fg:x="2787" fg:w="13"/><text x="84.0192%" y="623.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (4 samples, 0.12%)</title><rect x="84.1599%" y="629" width="0.1202%" height="15" fill="rgb(233,197,48)" fg:x="2800" fg:w="4"/><text x="84.4099%" y="639.50"></text></g><g><title>libsystem_c.dylib`isatty (4 samples, 0.12%)</title><rect x="84.1599%" y="613" width="0.1202%" height="15" fill="rgb(252,181,51)" fg:x="2800" fg:w="4"/><text x="84.4099%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (4 samples, 0.12%)</title><rect x="84.1599%" y="597" width="0.1202%" height="15" fill="rgb(253,90,19)" fg:x="2800" fg:w="4"/><text x="84.4099%" y="607.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (34 samples, 1.02%)</title><rect x="83.2882%" y="661" width="1.0219%" height="15" fill="rgb(215,171,30)" fg:x="2771" fg:w="34"/><text x="83.5382%" y="671.50"></text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (18 samples, 0.54%)</title><rect x="83.7692%" y="645" width="0.5410%" height="15" fill="rgb(214,222,9)" fg:x="2787" fg:w="18"/><text x="84.0192%" y="655.50"></text></g><g><title>ping_node`std::io::stdio::Stderr::lock (1 samples, 0.03%)</title><rect x="84.2801%" y="629" width="0.0301%" height="15" fill="rgb(223,3,22)" fg:x="2804" fg:w="1"/><text x="84.5301%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="84.2801%" y="613" width="0.0301%" height="15" fill="rgb(225,196,46)" fg:x="2804" fg:w="1"/><text x="84.5301%" y="623.50"></text></g><g><title>ping_node`log::__private_api::log_impl (37 samples, 1.11%)</title><rect x="83.2582%" y="693" width="1.1121%" height="15" fill="rgb(209,110,37)" fg:x="2770" fg:w="37"/><text x="83.5082%" y="703.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (36 samples, 1.08%)</title><rect x="83.2882%" y="677" width="1.0821%" height="15" fill="rgb(249,89,12)" fg:x="2771" fg:w="36"/><text x="83.5382%" y="687.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (2 samples, 0.06%)</title><rect x="84.3102%" y="661" width="0.0601%" height="15" fill="rgb(226,27,33)" fg:x="2805" fg:w="2"/><text x="84.5602%" y="671.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_scheduler::_{{closure}} (114 samples, 3.43%)</title><rect x="80.9739%" y="709" width="3.4265%" height="15" fill="rgb(213,82,22)" fg:x="2694" fg:w="114"/><text x="81.2239%" y="719.50">pin..</text></g><g><title>ping_node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (1 samples, 0.03%)</title><rect x="84.3703%" y="693" width="0.0301%" height="15" fill="rgb(248,140,0)" fg:x="2807" fg:w="1"/><text x="84.6203%" y="703.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="84.5807%" y="677" width="0.0301%" height="15" fill="rgb(228,106,3)" fg:x="2814" fg:w="1"/><text x="84.8307%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (2 samples, 0.06%)</title><rect x="84.6108%" y="677" width="0.0601%" height="15" fill="rgb(209,23,37)" fg:x="2815" fg:w="2"/><text x="84.8608%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="84.6709%" y="677" width="0.0301%" height="15" fill="rgb(241,93,50)" fg:x="2817" fg:w="1"/><text x="84.9209%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="84.7610%" y="629" width="0.0301%" height="15" fill="rgb(253,46,43)" fg:x="2820" fg:w="1"/><text x="85.0110%" y="639.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (1 samples, 0.03%)</title><rect x="84.7911%" y="629" width="0.0301%" height="15" fill="rgb(226,206,43)" fg:x="2821" fg:w="1"/><text x="85.0411%" y="639.50"></text></g><g><title>ping_node`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="84.9714%" y="597" width="0.0301%" height="15" fill="rgb(217,54,7)" fg:x="2827" fg:w="1"/><text x="85.2214%" y="607.50"></text></g><g><title>ping_node`&lt;anstyle::style::Style as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="85.0015%" y="581" width="0.0301%" height="15" fill="rgb(223,5,52)" fg:x="2828" fg:w="1"/><text x="85.2515%" y="591.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (7 samples, 0.21%)</title><rect x="85.0015%" y="597" width="0.2104%" height="15" fill="rgb(206,52,46)" fg:x="2828" fg:w="7"/><text x="85.2515%" y="607.50"></text></g><g><title>ping_node`core::fmt::write (6 samples, 0.18%)</title><rect x="85.0316%" y="581" width="0.1803%" height="15" fill="rgb(253,136,11)" fg:x="2829" fg:w="6"/><text x="85.2816%" y="591.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (5 samples, 0.15%)</title><rect x="85.0616%" y="565" width="0.1503%" height="15" fill="rgb(208,106,33)" fg:x="2830" fg:w="5"/><text x="85.3116%" y="575.50"></text></g><g><title>ping_node`core::fmt::write (3 samples, 0.09%)</title><rect x="85.1217%" y="549" width="0.0902%" height="15" fill="rgb(206,54,4)" fg:x="2832" fg:w="3"/><text x="85.3717%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.09%)</title><rect x="85.1217%" y="533" width="0.0902%" height="15" fill="rgb(213,3,15)" fg:x="2832" fg:w="3"/><text x="85.3717%" y="543.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::humantime::Timestamp as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="85.2119%" y="597" width="0.0601%" height="15" fill="rgb(252,211,39)" fg:x="2835" fg:w="2"/><text x="85.4619%" y="607.50"></text></g><g><title>ping_node`&lt;humantime::date::Rfc3339Timestamp as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="85.2420%" y="581" width="0.0301%" height="15" fill="rgb(223,6,36)" fg:x="2836" fg:w="1"/><text x="85.4920%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="85.2420%" y="565" width="0.0301%" height="15" fill="rgb(252,169,45)" fg:x="2836" fg:w="1"/><text x="85.4920%" y="575.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="85.3021%" y="517" width="0.0301%" height="15" fill="rgb(212,48,26)" fg:x="2838" fg:w="1"/><text x="85.5521%" y="527.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="85.3021%" y="501" width="0.0301%" height="15" fill="rgb(251,102,48)" fg:x="2838" fg:w="1"/><text x="85.5521%" y="511.50"></text></g><g><title>ping_node`&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="85.3021%" y="549" width="0.0601%" height="15" fill="rgb(243,208,16)" fg:x="2838" fg:w="2"/><text x="85.5521%" y="559.50"></text></g><g><title>ping_node`core::fmt::write (2 samples, 0.06%)</title><rect x="85.3021%" y="533" width="0.0601%" height="15" fill="rgb(219,96,24)" fg:x="2838" fg:w="2"/><text x="85.5521%" y="543.50"></text></g><g><title>ping_node`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.03%)</title><rect x="85.3321%" y="517" width="0.0301%" height="15" fill="rgb(219,33,29)" fg:x="2839" fg:w="1"/><text x="85.5821%" y="527.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="85.3321%" y="501" width="0.0301%" height="15" fill="rgb(223,176,5)" fg:x="2839" fg:w="1"/><text x="85.5821%" y="511.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="85.3321%" y="485" width="0.0301%" height="15" fill="rgb(228,140,14)" fg:x="2839" fg:w="1"/><text x="85.5821%" y="495.50"></text></g><g><title>ping_node`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (3 samples, 0.09%)</title><rect x="85.3021%" y="581" width="0.0902%" height="15" fill="rgb(217,179,31)" fg:x="2838" fg:w="3"/><text x="85.5521%" y="591.50"></text></g><g><title>ping_node`core::fmt::write (3 samples, 0.09%)</title><rect x="85.3021%" y="565" width="0.0902%" height="15" fill="rgb(230,9,30)" fg:x="2838" fg:w="3"/><text x="85.5521%" y="575.50"></text></g><g><title>ping_node`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.03%)</title><rect x="85.3622%" y="549" width="0.0301%" height="15" fill="rgb(230,136,20)" fg:x="2840" fg:w="1"/><text x="85.6122%" y="559.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="85.3622%" y="533" width="0.0301%" height="15" fill="rgb(215,210,22)" fg:x="2840" fg:w="1"/><text x="85.6122%" y="543.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="85.3922%" y="581" width="0.0301%" height="15" fill="rgb(218,43,5)" fg:x="2841" fg:w="1"/><text x="85.6422%" y="591.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="85.3922%" y="565" width="0.0301%" height="15" fill="rgb(216,11,5)" fg:x="2841" fg:w="1"/><text x="85.6422%" y="575.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="85.4223%" y="581" width="0.0301%" height="15" fill="rgb(209,82,29)" fg:x="2842" fg:w="1"/><text x="85.6723%" y="591.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::DefaultFormat::write_args::IndentWrapper as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="85.4223%" y="565" width="0.0301%" height="15" fill="rgb(244,115,12)" fg:x="2842" fg:w="1"/><text x="85.6723%" y="575.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (22 samples, 0.66%)</title><rect x="84.8212%" y="629" width="0.6613%" height="15" fill="rgb(222,82,18)" fg:x="2822" fg:w="22"/><text x="85.0712%" y="639.50"></text></g><g><title>ping_node`core::fmt::write (20 samples, 0.60%)</title><rect x="84.8813%" y="613" width="0.6011%" height="15" fill="rgb(249,227,8)" fg:x="2824" fg:w="20"/><text x="85.1313%" y="623.50"></text></g><g><title>ping_node`core::fmt::write (7 samples, 0.21%)</title><rect x="85.2720%" y="597" width="0.2104%" height="15" fill="rgb(253,141,45)" fg:x="2837" fg:w="7"/><text x="85.5220%" y="607.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="85.4524%" y="581" width="0.0301%" height="15" fill="rgb(234,184,4)" fg:x="2843" fg:w="1"/><text x="85.7024%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (26 samples, 0.78%)</title><rect x="85.5726%" y="597" width="0.7815%" height="15" fill="rgb(218,194,23)" fg:x="2847" fg:w="26"/><text x="85.8226%" y="607.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (28 samples, 0.84%)</title><rect x="85.5425%" y="613" width="0.8416%" height="15" fill="rgb(235,66,41)" fg:x="2846" fg:w="28"/><text x="85.7925%" y="623.50"></text></g><g><title>ping_node`DYLD-STUB$$write (1 samples, 0.03%)</title><rect x="86.3541%" y="597" width="0.0301%" height="15" fill="rgb(245,217,1)" fg:x="2873" fg:w="1"/><text x="86.6041%" y="607.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (62 samples, 1.86%)</title><rect x="84.7310%" y="645" width="1.8635%" height="15" fill="rgb(229,91,1)" fg:x="2819" fg:w="62"/><text x="84.9810%" y="655.50">p..</text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (37 samples, 1.11%)</title><rect x="85.4824%" y="629" width="1.1121%" height="15" fill="rgb(207,101,30)" fg:x="2844" fg:w="37"/><text x="85.7324%" y="639.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (7 samples, 0.21%)</title><rect x="86.3841%" y="613" width="0.2104%" height="15" fill="rgb(223,82,49)" fg:x="2874" fg:w="7"/><text x="86.6341%" y="623.50"></text></g><g><title>libsystem_c.dylib`isatty (7 samples, 0.21%)</title><rect x="86.3841%" y="597" width="0.2104%" height="15" fill="rgb(218,167,17)" fg:x="2874" fg:w="7"/><text x="86.6341%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (7 samples, 0.21%)</title><rect x="86.3841%" y="581" width="0.2104%" height="15" fill="rgb(208,103,14)" fg:x="2874" fg:w="7"/><text x="86.6341%" y="591.50"></text></g><g><title>ping_node`env_filter::filter::Filter::matches (2 samples, 0.06%)</title><rect x="86.5945%" y="645" width="0.0601%" height="15" fill="rgb(238,20,8)" fg:x="2881" fg:w="2"/><text x="86.8445%" y="655.50"></text></g><g><title>ping_node`log::__private_api::log_impl (66 samples, 1.98%)</title><rect x="84.7009%" y="677" width="1.9838%" height="15" fill="rgb(218,80,54)" fg:x="2818" fg:w="66"/><text x="84.9509%" y="687.50">p..</text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (66 samples, 1.98%)</title><rect x="84.7009%" y="661" width="1.9838%" height="15" fill="rgb(240,144,17)" fg:x="2818" fg:w="66"/><text x="84.9509%" y="671.50">p..</text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (1 samples, 0.03%)</title><rect x="86.6546%" y="645" width="0.0301%" height="15" fill="rgb(245,27,50)" fg:x="2883" fg:w="1"/><text x="86.9046%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__accept (33 samples, 0.99%)</title><rect x="86.7148%" y="661" width="0.9919%" height="15" fill="rgb(251,51,7)" fg:x="2885" fg:w="33"/><text x="86.9648%" y="671.50"></text></g><g><title>ping_node`DYLD-STUB$$fcntl (1 samples, 0.03%)</title><rect x="87.7066%" y="661" width="0.0301%" height="15" fill="rgb(245,217,29)" fg:x="2918" fg:w="1"/><text x="87.9566%" y="671.50"></text></g><g><title>ping_node`mio::sys::unix::tcp::accept (7 samples, 0.21%)</title><rect x="87.7367%" y="661" width="0.2104%" height="15" fill="rgb(221,176,29)" fg:x="2919" fg:w="7"/><text x="87.9867%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (6 samples, 0.18%)</title><rect x="87.7668%" y="645" width="0.1803%" height="15" fill="rgb(212,180,24)" fg:x="2920" fg:w="6"/><text x="88.0168%" y="655.50"></text></g><g><title>ping_node`mio::net::tcp::listener::TcpListener::accept (43 samples, 1.29%)</title><rect x="86.6847%" y="677" width="1.2925%" height="15" fill="rgb(254,24,2)" fg:x="2884" fg:w="43"/><text x="86.9347%" y="687.50"></text></g><g><title>ping_node`std::sys::pal::unix::os::errno (1 samples, 0.03%)</title><rect x="87.9471%" y="661" width="0.0301%" height="15" fill="rgb(230,100,2)" fg:x="2926" fg:w="1"/><text x="88.1971%" y="671.50"></text></g><g><title>ping_node`mio::sys::unix::tcp::accept (1 samples, 0.03%)</title><rect x="87.9772%" y="677" width="0.0301%" height="15" fill="rgb(219,142,25)" fg:x="2927" fg:w="1"/><text x="88.2272%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`kevent (12 samples, 0.36%)</title><rect x="88.0373%" y="629" width="0.3607%" height="15" fill="rgb(240,73,43)" fg:x="2929" fg:w="12"/><text x="88.2873%" y="639.50"></text></g><g><title>ping_node`__rdl_alloc (4 samples, 0.12%)</title><rect x="88.3980%" y="629" width="0.1202%" height="15" fill="rgb(214,114,15)" fg:x="2941" fg:w="4"/><text x="88.6480%" y="639.50"></text></g><g><title>ping_node`__rust_alloc (1 samples, 0.03%)</title><rect x="88.5182%" y="629" width="0.0301%" height="15" fill="rgb(207,130,4)" fg:x="2945" fg:w="1"/><text x="88.7682%" y="639.50"></text></g><g><title>ping_node`std::thread::yield_now (1 samples, 0.03%)</title><rect x="88.5482%" y="629" width="0.0301%" height="15" fill="rgb(221,25,40)" fg:x="2946" fg:w="1"/><text x="88.7982%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (1 samples, 0.03%)</title><rect x="88.5783%" y="613" width="0.0301%" height="15" fill="rgb(241,184,7)" fg:x="2947" fg:w="1"/><text x="88.8283%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="88.6084%" y="549" width="0.0301%" height="15" fill="rgb(235,159,4)" fg:x="2948" fg:w="1"/><text x="88.8584%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="88.6084%" y="533" width="0.0301%" height="15" fill="rgb(214,87,48)" fg:x="2948" fg:w="1"/><text x="88.8584%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (17 samples, 0.51%)</title><rect x="88.6084%" y="581" width="0.5110%" height="15" fill="rgb(246,198,24)" fg:x="2948" fg:w="17"/><text x="88.8584%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (17 samples, 0.51%)</title><rect x="88.6084%" y="565" width="0.5110%" height="15" fill="rgb(209,66,40)" fg:x="2948" fg:w="17"/><text x="88.8584%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.48%)</title><rect x="88.6384%" y="549" width="0.4809%" height="15" fill="rgb(233,147,39)" fg:x="2949" fg:w="16"/><text x="88.8884%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.45%)</title><rect x="88.6685%" y="533" width="0.4509%" height="15" fill="rgb(231,145,52)" fg:x="2950" fg:w="15"/><text x="88.9185%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.06%)</title><rect x="89.0592%" y="517" width="0.0601%" height="15" fill="rgb(206,20,26)" fg:x="2963" fg:w="2"/><text x="89.3092%" y="527.50"></text></g><g><title>ping_node`tokio::net::tcp::stream::TcpStream::new (38 samples, 1.14%)</title><rect x="88.0072%" y="677" width="1.1422%" height="15" fill="rgb(238,220,4)" fg:x="2928" fg:w="38"/><text x="88.2572%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::new_with_interest_and_handle (38 samples, 1.14%)</title><rect x="88.0072%" y="661" width="1.1422%" height="15" fill="rgb(252,195,42)" fg:x="2928" fg:w="38"/><text x="88.2572%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Handle::add_source (38 samples, 1.14%)</title><rect x="88.0072%" y="645" width="1.1422%" height="15" fill="rgb(209,10,6)" fg:x="2928" fg:w="38"/><text x="88.2572%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::allocate (19 samples, 0.57%)</title><rect x="88.5783%" y="629" width="0.5711%" height="15" fill="rgb(229,3,52)" fg:x="2947" fg:w="19"/><text x="88.8283%" y="639.50"></text></g><g><title>ping_node`__rdl_alloc (18 samples, 0.54%)</title><rect x="88.6084%" y="613" width="0.5410%" height="15" fill="rgb(253,49,37)" fg:x="2948" fg:w="18"/><text x="88.8584%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (18 samples, 0.54%)</title><rect x="88.6084%" y="597" width="0.5410%" height="15" fill="rgb(240,103,49)" fg:x="2948" fg:w="18"/><text x="88.8584%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_memalign (1 samples, 0.03%)</title><rect x="89.1193%" y="581" width="0.0301%" height="15" fill="rgb(250,182,30)" fg:x="2965" fg:w="1"/><text x="89.3693%" y="591.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::readiness::_{{closure}} (5 samples, 0.15%)</title><rect x="89.1494%" y="677" width="0.1503%" height="15" fill="rgb(248,8,30)" fg:x="2966" fg:w="5"/><text x="89.3994%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::task::waker::clone_waker (2 samples, 0.06%)</title><rect x="89.2396%" y="661" width="0.0601%" height="15" fill="rgb(237,120,30)" fg:x="2969" fg:w="2"/><text x="89.4896%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::task::raw::schedule (1 samples, 0.03%)</title><rect x="89.2997%" y="677" width="0.0301%" height="15" fill="rgb(221,146,34)" fg:x="2971" fg:w="1"/><text x="89.5497%" y="687.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (2 samples, 0.06%)</title><rect x="89.3297%" y="677" width="0.0601%" height="15" fill="rgb(242,55,13)" fg:x="2972" fg:w="2"/><text x="89.5797%" y="687.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (2 samples, 0.06%)</title><rect x="89.3297%" y="661" width="0.0601%" height="15" fill="rgb(242,112,31)" fg:x="2972" fg:w="2"/><text x="89.5797%" y="671.50"></text></g><g><title>ping_node`tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (1 samples, 0.03%)</title><rect x="89.3898%" y="677" width="0.0301%" height="15" fill="rgb(249,192,27)" fg:x="2974" fg:w="1"/><text x="89.6398%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (169 samples, 5.08%)</title><rect x="84.4905%" y="693" width="5.0797%" height="15" fill="rgb(208,204,44)" fg:x="2811" fg:w="169"/><text x="84.7405%" y="703.50">ping_n..</text></g><g><title>ping_node`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (5 samples, 0.15%)</title><rect x="89.4199%" y="677" width="0.1503%" height="15" fill="rgb(208,93,54)" fg:x="2975" fg:w="5"/><text x="89.6699%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="89.5702%" y="693" width="0.0301%" height="15" fill="rgb(242,1,31)" fg:x="2980" fg:w="1"/><text x="89.8202%" y="703.50"></text></g><g><title>ping_node`&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="89.6002%" y="693" width="0.0301%" height="15" fill="rgb(241,83,25)" fg:x="2981" fg:w="1"/><text x="89.8502%" y="703.50"></text></g><g><title>ping_node`mio::net::tcp::listener::TcpListener::accept (1 samples, 0.03%)</title><rect x="89.6303%" y="693" width="0.0301%" height="15" fill="rgb(205,169,50)" fg:x="2982" fg:w="1"/><text x="89.8803%" y="703.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_tcp_listener_with_retry::_{{closure}} (176 samples, 5.29%)</title><rect x="84.4004%" y="709" width="5.2901%" height="15" fill="rgb(239,186,37)" fg:x="2808" fg:w="176"/><text x="84.6504%" y="719.50">ping_n..</text></g><g><title>ping_node`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.03%)</title><rect x="89.6604%" y="693" width="0.0301%" height="15" fill="rgb(205,221,10)" fg:x="2983" fg:w="1"/><text x="89.9104%" y="703.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="89.6904%" y="693" width="0.0301%" height="15" fill="rgb(218,196,15)" fg:x="2984" fg:w="1"/><text x="89.9404%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.15%)</title><rect x="89.7205%" y="693" width="0.1503%" height="15" fill="rgb(218,196,35)" fg:x="2985" fg:w="5"/><text x="89.9705%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.18%)</title><rect x="89.8708%" y="693" width="0.1803%" height="15" fill="rgb(233,63,24)" fg:x="2990" fg:w="6"/><text x="90.1208%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__error (1 samples, 0.03%)</title><rect x="90.0511%" y="677" width="0.0301%" height="15" fill="rgb(225,8,4)" fg:x="2996" fg:w="1"/><text x="90.3011%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (30 samples, 0.90%)</title><rect x="90.0812%" y="677" width="0.9017%" height="15" fill="rgb(234,105,35)" fg:x="2997" fg:w="30"/><text x="90.3312%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (2 samples, 0.06%)</title><rect x="90.9829%" y="677" width="0.0601%" height="15" fill="rgb(236,21,32)" fg:x="3027" fg:w="2"/><text x="91.2329%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="91.0430%" y="597" width="0.0601%" height="15" fill="rgb(228,109,6)" fg:x="3029" fg:w="2"/><text x="91.2930%" y="607.50"></text></g><g><title>ping_node`core::fmt::write (2 samples, 0.06%)</title><rect x="91.0430%" y="581" width="0.0601%" height="15" fill="rgb(229,215,31)" fg:x="3029" fg:w="2"/><text x="91.2930%" y="591.50"></text></g><g><title>ping_node`anstyle::style::Style::fmt_to (2 samples, 0.06%)</title><rect x="91.0430%" y="565" width="0.0601%" height="15" fill="rgb(221,52,54)" fg:x="3029" fg:w="2"/><text x="91.2930%" y="575.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="91.0730%" y="549" width="0.0301%" height="15" fill="rgb(252,129,43)" fg:x="3030" fg:w="1"/><text x="91.3230%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="91.0730%" y="533" width="0.0301%" height="15" fill="rgb(248,183,27)" fg:x="3030" fg:w="1"/><text x="91.3230%" y="543.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::humantime::Timestamp as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="91.1031%" y="597" width="0.0601%" height="15" fill="rgb(250,0,22)" fg:x="3031" fg:w="2"/><text x="91.3531%" y="607.50"></text></g><g><title>ping_node`&lt;humantime::date::Rfc3339Timestamp as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="91.1031%" y="581" width="0.0601%" height="15" fill="rgb(213,166,10)" fg:x="3031" fg:w="2"/><text x="91.3531%" y="591.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="91.1632%" y="533" width="0.0301%" height="15" fill="rgb(207,163,36)" fg:x="3033" fg:w="1"/><text x="91.4132%" y="543.50"></text></g><g><title>ping_node`&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="91.1632%" y="581" width="0.0601%" height="15" fill="rgb(208,122,22)" fg:x="3033" fg:w="2"/><text x="91.4132%" y="591.50"></text></g><g><title>ping_node`core::fmt::write (2 samples, 0.06%)</title><rect x="91.1632%" y="565" width="0.0601%" height="15" fill="rgb(207,104,49)" fg:x="3033" fg:w="2"/><text x="91.4132%" y="575.50"></text></g><g><title>ping_node`&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="91.1632%" y="549" width="0.0601%" height="15" fill="rgb(248,211,50)" fg:x="3033" fg:w="2"/><text x="91.4132%" y="559.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="91.1933%" y="533" width="0.0301%" height="15" fill="rgb(217,13,45)" fg:x="3034" fg:w="1"/><text x="91.4433%" y="543.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="91.1933%" y="517" width="0.0301%" height="15" fill="rgb(211,216,49)" fg:x="3034" fg:w="1"/><text x="91.4433%" y="527.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="91.1933%" y="501" width="0.0301%" height="15" fill="rgb(221,58,53)" fg:x="3034" fg:w="1"/><text x="91.4433%" y="511.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::DefaultFormat::write_args::IndentWrapper as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="91.1933%" y="485" width="0.0301%" height="15" fill="rgb(220,112,41)" fg:x="3034" fg:w="1"/><text x="91.4433%" y="495.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="91.2233%" y="581" width="0.0601%" height="15" fill="rgb(236,38,28)" fg:x="3035" fg:w="2"/><text x="91.4733%" y="591.50"></text></g><g><title>ping_node`core::fmt::Formatter::pad (2 samples, 0.06%)</title><rect x="91.2233%" y="565" width="0.0601%" height="15" fill="rgb(227,195,22)" fg:x="3035" fg:w="2"/><text x="91.4733%" y="575.50"></text></g><g><title>ping_node`core::fmt::Write::write_char (1 samples, 0.03%)</title><rect x="91.2534%" y="549" width="0.0301%" height="15" fill="rgb(214,55,33)" fg:x="3036" fg:w="1"/><text x="91.5034%" y="559.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="91.2834%" y="581" width="0.0301%" height="15" fill="rgb(248,80,13)" fg:x="3037" fg:w="1"/><text x="91.5334%" y="591.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="91.2834%" y="565" width="0.0301%" height="15" fill="rgb(238,52,6)" fg:x="3037" fg:w="1"/><text x="91.5334%" y="575.50"></text></g><g><title>ping_node`core::fmt::write (10 samples, 0.30%)</title><rect x="91.0430%" y="613" width="0.3006%" height="15" fill="rgb(224,198,47)" fg:x="3029" fg:w="10"/><text x="91.2930%" y="623.50"></text></g><g><title>ping_node`core::fmt::write (6 samples, 0.18%)</title><rect x="91.1632%" y="597" width="0.1803%" height="15" fill="rgb(233,171,20)" fg:x="3033" fg:w="6"/><text x="91.4132%" y="607.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="91.3135%" y="581" width="0.0301%" height="15" fill="rgb(241,30,25)" fg:x="3038" fg:w="1"/><text x="91.5635%" y="591.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (11 samples, 0.33%)</title><rect x="91.0430%" y="629" width="0.3306%" height="15" fill="rgb(207,171,38)" fg:x="3029" fg:w="11"/><text x="91.2930%" y="639.50"></text></g><g><title>ping_node`env_logger::fmt::DefaultFormat::write_header_value (1 samples, 0.03%)</title><rect x="91.3436%" y="613" width="0.0301%" height="15" fill="rgb(234,70,1)" fg:x="3039" fg:w="1"/><text x="91.5936%" y="623.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="91.3436%" y="597" width="0.0301%" height="15" fill="rgb(232,178,18)" fg:x="3039" fg:w="1"/><text x="91.5936%" y="607.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="91.3436%" y="581" width="0.0301%" height="15" fill="rgb(241,78,40)" fg:x="3039" fg:w="1"/><text x="91.5936%" y="591.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (7 samples, 0.21%)</title><rect x="91.3736%" y="613" width="0.2104%" height="15" fill="rgb(222,35,25)" fg:x="3040" fg:w="7"/><text x="91.6236%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.21%)</title><rect x="91.3736%" y="597" width="0.2104%" height="15" fill="rgb(207,92,16)" fg:x="3040" fg:w="7"/><text x="91.6236%" y="607.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (6 samples, 0.18%)</title><rect x="91.5840%" y="613" width="0.1803%" height="15" fill="rgb(216,59,51)" fg:x="3047" fg:w="6"/><text x="91.8340%" y="623.50"></text></g><g><title>libsystem_c.dylib`isatty (6 samples, 0.18%)</title><rect x="91.5840%" y="597" width="0.1803%" height="15" fill="rgb(213,80,28)" fg:x="3047" fg:w="6"/><text x="91.8340%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (5 samples, 0.15%)</title><rect x="91.6141%" y="581" width="0.1503%" height="15" fill="rgb(220,93,7)" fg:x="3048" fg:w="5"/><text x="91.8641%" y="591.50"></text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (14 samples, 0.42%)</title><rect x="91.3736%" y="629" width="0.4208%" height="15" fill="rgb(225,24,44)" fg:x="3040" fg:w="14"/><text x="91.6236%" y="639.50"></text></g><g><title>ping_node`std::io::stdio::Stderr::lock (1 samples, 0.03%)</title><rect x="91.7644%" y="613" width="0.0301%" height="15" fill="rgb(243,74,40)" fg:x="3053" fg:w="1"/><text x="92.0144%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="91.7644%" y="597" width="0.0301%" height="15" fill="rgb(228,39,7)" fg:x="3053" fg:w="1"/><text x="92.0144%" y="607.50"></text></g><g><title>ping_node`log::__private_api::log_impl (26 samples, 0.78%)</title><rect x="91.0430%" y="677" width="0.7815%" height="15" fill="rgb(227,79,8)" fg:x="3029" fg:w="26"/><text x="91.2930%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (26 samples, 0.78%)</title><rect x="91.0430%" y="661" width="0.7815%" height="15" fill="rgb(236,58,11)" fg:x="3029" fg:w="26"/><text x="91.2930%" y="671.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (26 samples, 0.78%)</title><rect x="91.0430%" y="645" width="0.7815%" height="15" fill="rgb(249,63,35)" fg:x="3029" fg:w="26"/><text x="91.2930%" y="655.50"></text></g><g><title>ping_node`std::io::stdio::Stderr::lock (1 samples, 0.03%)</title><rect x="91.7944%" y="629" width="0.0301%" height="15" fill="rgb(252,114,16)" fg:x="3054" fg:w="1"/><text x="92.0444%" y="639.50"></text></g><g><title>ping_node`std::sys::pal::unix::net::Socket::recv_from_with_flags (4 samples, 0.12%)</title><rect x="91.8245%" y="677" width="0.1202%" height="15" fill="rgb(254,151,24)" fg:x="3055" fg:w="4"/><text x="92.0745%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (2 samples, 0.06%)</title><rect x="91.8846%" y="661" width="0.0601%" height="15" fill="rgb(253,54,39)" fg:x="3057" fg:w="2"/><text x="92.1346%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (2 samples, 0.06%)</title><rect x="91.8846%" y="645" width="0.0601%" height="15" fill="rgb(243,25,45)" fg:x="3057" fg:w="2"/><text x="92.1346%" y="655.50"></text></g><g><title>ping_node`&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (2 samples, 0.06%)</title><rect x="91.9447%" y="661" width="0.0601%" height="15" fill="rgb(234,134,9)" fg:x="3059" fg:w="2"/><text x="92.1947%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::readiness::_{{closure}} (3 samples, 0.09%)</title><rect x="91.9447%" y="677" width="0.0902%" height="15" fill="rgb(227,166,31)" fg:x="3059" fg:w="3"/><text x="92.1947%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="92.0048%" y="661" width="0.0301%" height="15" fill="rgb(245,143,41)" fg:x="3061" fg:w="1"/><text x="92.2548%" y="671.50"></text></g><g><title>ping_node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (70 samples, 2.10%)</title><rect x="90.0511%" y="693" width="2.1040%" height="15" fill="rgb(238,181,32)" fg:x="2996" fg:w="70"/><text x="90.3011%" y="703.50">p..</text></g><g><title>ping_node`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (4 samples, 0.12%)</title><rect x="92.0349%" y="677" width="0.1202%" height="15" fill="rgb(224,113,18)" fg:x="3062" fg:w="4"/><text x="92.2849%" y="687.50"></text></g><g><title>ping_node`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="92.1551%" y="693" width="0.0301%" height="15" fill="rgb(240,229,28)" fg:x="3066" fg:w="1"/><text x="92.4051%" y="703.50"></text></g><g><title>ping_node`mio::net::udp::UdpSocket::recv_from (1 samples, 0.03%)</title><rect x="92.1852%" y="693" width="0.0301%" height="15" fill="rgb(250,185,3)" fg:x="3067" fg:w="1"/><text x="92.4352%" y="703.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::spawn_udp_listener_with_retry::_{{closure}} (85 samples, 2.55%)</title><rect x="89.6904%" y="709" width="2.5549%" height="15" fill="rgb(212,59,25)" fg:x="2984" fg:w="85"/><text x="89.9404%" y="719.50">pi..</text></g><g><title>ping_node`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.03%)</title><rect x="92.2152%" y="693" width="0.0301%" height="15" fill="rgb(221,87,20)" fg:x="3068" fg:w="1"/><text x="92.4652%" y="703.50"></text></g><g><title>ping_node`gossipod::event_manager::EventManager::intercept_event::_{{closure}} (1 samples, 0.03%)</title><rect x="92.2453%" y="709" width="0.0301%" height="15" fill="rgb(213,74,28)" fg:x="3069" fg:w="1"/><text x="92.4953%" y="719.50"></text></g><g><title>ping_node`DYLD-STUB$$free (2 samples, 0.06%)</title><rect x="92.3354%" y="693" width="0.0601%" height="15" fill="rgb(224,132,34)" fg:x="3072" fg:w="2"/><text x="92.5854%" y="703.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;gossipod::event_manager::EventManager::intercept_event::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="92.3956%" y="693" width="0.0301%" height="15" fill="rgb(222,101,24)" fg:x="3074" fg:w="1"/><text x="92.6456%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.12%)</title><rect x="92.4857%" y="645" width="0.1202%" height="15" fill="rgb(254,142,4)" fg:x="3077" fg:w="4"/><text x="92.7357%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.12%)</title><rect x="92.4857%" y="629" width="0.1202%" height="15" fill="rgb(230,229,49)" fg:x="3077" fg:w="4"/><text x="92.7357%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.12%)</title><rect x="92.4857%" y="613" width="0.1202%" height="15" fill="rgb(238,70,47)" fg:x="3077" fg:w="4"/><text x="92.7357%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.03%)</title><rect x="92.5759%" y="597" width="0.0301%" height="15" fill="rgb(231,160,17)" fg:x="3080" fg:w="1"/><text x="92.8259%" y="607.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::from_bytes (1 samples, 0.03%)</title><rect x="92.6060%" y="629" width="0.0301%" height="15" fill="rgb(218,68,53)" fg:x="3081" fg:w="1"/><text x="92.8560%" y="639.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::from_bytes::_::_&lt;impl serde::de::Deserialize for gossipod::node::NodeMetadata::from_bytes::Wrapper&lt;T&gt;&gt;::deserialize (1 samples, 0.03%)</title><rect x="92.6360%" y="629" width="0.0301%" height="15" fill="rgb(236,111,10)" fg:x="3082" fg:w="1"/><text x="92.8860%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="92.6661%" y="597" width="0.0301%" height="15" fill="rgb(224,34,41)" fg:x="3083" fg:w="1"/><text x="92.9161%" y="607.50"></text></g><g><title>ping_node`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.12%)</title><rect x="92.6060%" y="645" width="0.1202%" height="15" fill="rgb(241,118,19)" fg:x="3081" fg:w="4"/><text x="92.8560%" y="655.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::from_bytes (2 samples, 0.06%)</title><rect x="92.6661%" y="629" width="0.0601%" height="15" fill="rgb(238,129,25)" fg:x="3083" fg:w="2"/><text x="92.9161%" y="639.50"></text></g><g><title>ping_node`gossipod::node::NodeMetadata::from_bytes::_::_&lt;impl serde::de::Deserialize for gossipod::node::NodeMetadata::from_bytes::Wrapper&lt;T&gt;&gt;::deserialize (2 samples, 0.06%)</title><rect x="92.6661%" y="613" width="0.0601%" height="15" fill="rgb(238,22,31)" fg:x="3083" fg:w="2"/><text x="92.9161%" y="623.50"></text></g><g><title>ping_node`serde::de::SeqAccess::next_element (1 samples, 0.03%)</title><rect x="92.6961%" y="597" width="0.0301%" height="15" fill="rgb(222,174,48)" fg:x="3084" fg:w="1"/><text x="92.9461%" y="607.50"></text></g><g><title>ping_node`core::iter::adapters::try_process (10 samples, 0.30%)</title><rect x="92.4557%" y="677" width="0.3006%" height="15" fill="rgb(206,152,40)" fg:x="3076" fg:w="10"/><text x="92.7057%" y="687.50"></text></g><g><title>ping_node`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.30%)</title><rect x="92.4557%" y="661" width="0.3006%" height="15" fill="rgb(218,99,54)" fg:x="3076" fg:w="10"/><text x="92.7057%" y="671.50"></text></g><g><title>ping_node`DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="92.7262%" y="645" width="0.0301%" height="15" fill="rgb(220,174,26)" fg:x="3085" fg:w="1"/><text x="92.9762%" y="655.50"></text></g><g><title>ping_node`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (1 samples, 0.03%)</title><rect x="92.7562%" y="661" width="0.0301%" height="15" fill="rgb(245,116,9)" fg:x="3086" fg:w="1"/><text x="93.0062%" y="671.50"></text></g><g><title>ping_node`gossipod::members::Membership&lt;M&gt;::merge (7 samples, 0.21%)</title><rect x="92.7562%" y="677" width="0.2104%" height="15" fill="rgb(209,72,35)" fg:x="3086" fg:w="7"/><text x="93.0062%" y="687.50"></text></g><g><title>ping_node`gossipod::node::Node&lt;M&gt;::merge (6 samples, 0.18%)</title><rect x="92.7863%" y="661" width="0.1803%" height="15" fill="rgb(226,126,21)" fg:x="3087" fg:w="6"/><text x="93.0363%" y="671.50"></text></g><g><title>ping_node`&lt;gossipod::node::DefaultMetadata as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="92.9366%" y="645" width="0.0301%" height="15" fill="rgb(227,192,1)" fg:x="3092" fg:w="1"/><text x="93.1866%" y="655.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="92.9666%" y="613" width="0.0301%" height="15" fill="rgb(237,180,29)" fg:x="3093" fg:w="1"/><text x="93.2166%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="93.0268%" y="565" width="0.0301%" height="15" fill="rgb(230,197,35)" fg:x="3095" fg:w="1"/><text x="93.2768%" y="575.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::humantime::Timestamp as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="93.0268%" y="597" width="0.0601%" height="15" fill="rgb(246,193,31)" fg:x="3095" fg:w="2"/><text x="93.2768%" y="607.50"></text></g><g><title>ping_node`&lt;humantime::date::Rfc3339Timestamp as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="93.0268%" y="581" width="0.0601%" height="15" fill="rgb(241,36,4)" fg:x="3095" fg:w="2"/><text x="93.2768%" y="591.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="93.0568%" y="565" width="0.0301%" height="15" fill="rgb(241,130,17)" fg:x="3096" fg:w="1"/><text x="93.3068%" y="575.50"></text></g><g><title>ping_node`env_logger::fmt::Builder::build::_{{closure}} (5 samples, 0.15%)</title><rect x="92.9666%" y="629" width="0.1503%" height="15" fill="rgb(206,137,32)" fg:x="3093" fg:w="5"/><text x="93.2166%" y="639.50"></text></g><g><title>ping_node`core::fmt::write (4 samples, 0.12%)</title><rect x="92.9967%" y="613" width="0.1202%" height="15" fill="rgb(237,228,51)" fg:x="3094" fg:w="4"/><text x="93.2467%" y="623.50"></text></g><g><title>ping_node`core::fmt::write (1 samples, 0.03%)</title><rect x="93.0869%" y="597" width="0.0301%" height="15" fill="rgb(243,6,42)" fg:x="3097" fg:w="1"/><text x="93.3369%" y="607.50"></text></g><g><title>ping_node`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="93.0869%" y="581" width="0.0301%" height="15" fill="rgb(251,74,28)" fg:x="3097" fg:w="1"/><text x="93.3369%" y="591.50"></text></g><g><title>ping_node`std::io::Write::write_all (1 samples, 0.03%)</title><rect x="93.0869%" y="565" width="0.0301%" height="15" fill="rgb(218,20,49)" fg:x="3097" fg:w="1"/><text x="93.3369%" y="575.50"></text></g><g><title>ping_node`&lt;env_logger::fmt::DefaultFormat::write_args::IndentWrapper as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="93.0869%" y="549" width="0.0301%" height="15" fill="rgb(238,28,14)" fg:x="3097" fg:w="1"/><text x="93.3369%" y="559.50"></text></g><g><title>ping_node`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (7 samples, 0.21%)</title><rect x="93.1169%" y="613" width="0.2104%" height="15" fill="rgb(229,40,46)" fg:x="3098" fg:w="7"/><text x="93.3669%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.21%)</title><rect x="93.1169%" y="597" width="0.2104%" height="15" fill="rgb(244,195,20)" fg:x="3098" fg:w="7"/><text x="93.3669%" y="607.50"></text></g><g><title>ping_node`anstream::auto::AutoStream&lt;S&gt;::new (4 samples, 0.12%)</title><rect x="93.3273%" y="613" width="0.1202%" height="15" fill="rgb(253,56,35)" fg:x="3105" fg:w="4"/><text x="93.5773%" y="623.50"></text></g><g><title>libsystem_c.dylib`isatty (4 samples, 0.12%)</title><rect x="93.3273%" y="597" width="0.1202%" height="15" fill="rgb(210,149,44)" fg:x="3105" fg:w="4"/><text x="93.5773%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (4 samples, 0.12%)</title><rect x="93.3273%" y="581" width="0.1202%" height="15" fill="rgb(240,135,12)" fg:x="3105" fg:w="4"/><text x="93.5773%" y="591.50"></text></g><g><title>ping_node`gossipod::Gossipod&lt;M&gt;::handle_piggybacked_updates::_{{closure}} (35 samples, 1.05%)</title><rect x="92.4256%" y="693" width="1.0520%" height="15" fill="rgb(251,24,50)" fg:x="3075" fg:w="35"/><text x="92.6756%" y="703.50"></text></g><g><title>ping_node`log::__private_api::log_impl (17 samples, 0.51%)</title><rect x="92.9666%" y="677" width="0.5110%" height="15" fill="rgb(243,200,47)" fg:x="3093" fg:w="17"/><text x="93.2166%" y="687.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log (17 samples, 0.51%)</title><rect x="92.9666%" y="661" width="0.5110%" height="15" fill="rgb(224,166,26)" fg:x="3093" fg:w="17"/><text x="93.2166%" y="671.50"></text></g><g><title>ping_node`&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (17 samples, 0.51%)</title><rect x="92.9666%" y="645" width="0.5110%" height="15" fill="rgb(233,0,47)" fg:x="3093" fg:w="17"/><text x="93.2166%" y="655.50"></text></g><g><title>ping_node`env_logger::fmt::writer::buffer::BufferWriter::print (12 samples, 0.36%)</title><rect x="93.1169%" y="629" width="0.3607%" height="15" fill="rgb(253,80,5)" fg:x="3098" fg:w="12"/><text x="93.3669%" y="639.50"></text></g><g><title>ping_node`std::io::stdio::Stderr::lock (1 samples, 0.03%)</title><rect x="93.4476%" y="613" width="0.0301%" height="15" fill="rgb(214,133,25)" fg:x="3109" fg:w="1"/><text x="93.6976%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="93.4476%" y="597" width="0.0301%" height="15" fill="rgb(209,27,14)" fg:x="3109" fg:w="1"/><text x="93.6976%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="93.5077%" y="645" width="0.0301%" height="15" fill="rgb(219,102,51)" fg:x="3111" fg:w="1"/><text x="93.7577%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::task::waker::wake_by_val (2 samples, 0.06%)</title><rect x="93.5077%" y="677" width="0.0601%" height="15" fill="rgb(237,18,16)" fg:x="3111" fg:w="2"/><text x="93.7577%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.06%)</title><rect x="93.5077%" y="661" width="0.0601%" height="15" fill="rgb(241,85,17)" fg:x="3111" fg:w="2"/><text x="93.7577%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (1 samples, 0.03%)</title><rect x="93.5377%" y="645" width="0.0301%" height="15" fill="rgb(236,90,42)" fg:x="3112" fg:w="1"/><text x="93.7877%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="93.5377%" y="629" width="0.0301%" height="15" fill="rgb(249,57,21)" fg:x="3112" fg:w="1"/><text x="93.7877%" y="639.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.03%)</title><rect x="93.5377%" y="613" width="0.0301%" height="15" fill="rgb(243,12,36)" fg:x="3112" fg:w="1"/><text x="93.7877%" y="623.50"></text></g><g><title>ping_node`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1 samples, 0.03%)</title><rect x="93.5678%" y="677" width="0.0301%" height="15" fill="rgb(253,128,47)" fg:x="3113" fg:w="1"/><text x="93.8178%" y="687.50"></text></g><g><title>ping_node`gossipod::event_manager::EventManager::intercept_event::_{{closure}} (5 samples, 0.15%)</title><rect x="93.4776%" y="693" width="0.1503%" height="15" fill="rgb(207,33,20)" fg:x="3110" fg:w="5"/><text x="93.7276%" y="703.50"></text></g><g><title>ping_node`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.03%)</title><rect x="93.5978%" y="677" width="0.0301%" height="15" fill="rgb(233,215,35)" fg:x="3114" fg:w="1"/><text x="93.8478%" y="687.50"></text></g><g><title>ping_node`gossipod::members::Membership&lt;M&gt;::merge (1 samples, 0.03%)</title><rect x="93.6279%" y="693" width="0.0301%" height="15" fill="rgb(249,188,52)" fg:x="3115" fg:w="1"/><text x="93.8779%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="93.6580%" y="677" width="0.0301%" height="15" fill="rgb(225,12,32)" fg:x="3116" fg:w="1"/><text x="93.9080%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.42%)</title><rect x="93.7481%" y="661" width="0.4208%" height="15" fill="rgb(247,98,14)" fg:x="3119" fg:w="14"/><text x="93.9981%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.15%)</title><rect x="94.1689%" y="645" width="0.1503%" height="15" fill="rgb(247,219,48)" fg:x="3133" fg:w="5"/><text x="94.4189%" y="655.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::decode_socket_addr (6 samples, 0.18%)</title><rect x="94.1689%" y="661" width="0.1803%" height="15" fill="rgb(253,60,48)" fg:x="3133" fg:w="6"/><text x="94.4189%" y="671.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.03%)</title><rect x="94.3192%" y="645" width="0.0301%" height="15" fill="rgb(245,15,52)" fg:x="3138" fg:w="1"/><text x="94.5692%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.30%)</title><rect x="94.3493%" y="629" width="0.3006%" height="15" fill="rgb(220,133,28)" fg:x="3139" fg:w="10"/><text x="94.5993%" y="639.50"></text></g><g><title>ping_node`gossipod::message::Message::from_vec (37 samples, 1.11%)</title><rect x="93.6580%" y="693" width="1.1121%" height="15" fill="rgb(217,180,4)" fg:x="3116" fg:w="37"/><text x="93.9080%" y="703.50"></text></g><g><title>ping_node`&lt;gossipod::codec::MessageCodec as tokio_util::codec::decoder::Decoder&gt;::decode (36 samples, 1.08%)</title><rect x="93.6880%" y="677" width="1.0821%" height="15" fill="rgb(251,24,1)" fg:x="3117" fg:w="36"/><text x="93.9380%" y="687.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::decode_vec (14 samples, 0.42%)</title><rect x="94.3493%" y="661" width="0.4208%" height="15" fill="rgb(212,185,49)" fg:x="3139" fg:w="14"/><text x="94.5993%" y="671.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::decode_remote_node (14 samples, 0.42%)</title><rect x="94.3493%" y="645" width="0.4208%" height="15" fill="rgb(215,175,22)" fg:x="3139" fg:w="14"/><text x="94.5993%" y="655.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::decode_string (4 samples, 0.12%)</title><rect x="94.6498%" y="629" width="0.1202%" height="15" fill="rgb(250,205,14)" fg:x="3149" fg:w="4"/><text x="94.8998%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.12%)</title><rect x="94.6498%" y="613" width="0.1202%" height="15" fill="rgb(225,211,22)" fg:x="3149" fg:w="4"/><text x="94.8998%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="94.7701%" y="677" width="0.0301%" height="15" fill="rgb(251,179,42)" fg:x="3153" fg:w="1"/><text x="95.0201%" y="687.50"></text></g><g><title>ping_node`parking_lot::condvar::Condvar::notify_one_slow (11 samples, 0.33%)</title><rect x="94.8001%" y="629" width="0.3306%" height="15" fill="rgb(208,216,51)" fg:x="3154" fg:w="11"/><text x="95.0501%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.12%)</title><rect x="95.0105%" y="613" width="0.1202%" height="15" fill="rgb(235,36,11)" fg:x="3161" fg:w="4"/><text x="95.2605%" y="623.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (14 samples, 0.42%)</title><rect x="94.8001%" y="677" width="0.4208%" height="15" fill="rgb(213,189,28)" fg:x="3154" fg:w="14"/><text x="95.0501%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::context::with_scheduler (14 samples, 0.42%)</title><rect x="94.8001%" y="661" width="0.4208%" height="15" fill="rgb(227,203,42)" fg:x="3154" fg:w="14"/><text x="95.0501%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (14 samples, 0.42%)</title><rect x="94.8001%" y="645" width="0.4208%" height="15" fill="rgb(244,72,36)" fg:x="3154" fg:w="14"/><text x="95.0501%" y="655.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (3 samples, 0.09%)</title><rect x="95.1307%" y="629" width="0.0902%" height="15" fill="rgb(213,53,17)" fg:x="3165" fg:w="3"/><text x="95.3807%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_memalign (1 samples, 0.03%)</title><rect x="95.2209%" y="613" width="0.0301%" height="15" fill="rgb(207,167,3)" fg:x="3168" fg:w="1"/><text x="95.4709%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.03%)</title><rect x="95.2209%" y="597" width="0.0301%" height="15" fill="rgb(216,98,30)" fg:x="3168" fg:w="1"/><text x="95.4709%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.03%)</title><rect x="95.2209%" y="581" width="0.0301%" height="15" fill="rgb(236,123,15)" fg:x="3168" fg:w="1"/><text x="95.4709%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="95.2209%" y="565" width="0.0301%" height="15" fill="rgb(248,81,50)" fg:x="3168" fg:w="1"/><text x="95.4709%" y="575.50"></text></g><g><title>ping_node`gossipod::listener::EventListener&lt;M&gt;::handle_socket::_{{closure}}::_{{closure}} (104 samples, 3.13%)</title><rect x="92.2753%" y="709" width="3.1259%" height="15" fill="rgb(214,120,4)" fg:x="3070" fg:w="104"/><text x="92.5253%" y="719.50">pin..</text></g><g><title>ping_node`tokio::task::spawn::spawn (21 samples, 0.63%)</title><rect x="94.7701%" y="693" width="0.6312%" height="15" fill="rgb(208,179,34)" fg:x="3153" fg:w="21"/><text x="95.0201%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (6 samples, 0.18%)</title><rect x="95.2209%" y="677" width="0.1803%" height="15" fill="rgb(227,140,7)" fg:x="3168" fg:w="6"/><text x="95.4709%" y="687.50"></text></g><g><title>ping_node`__rdl_alloc (6 samples, 0.18%)</title><rect x="95.2209%" y="661" width="0.1803%" height="15" fill="rgb(214,22,6)" fg:x="3168" fg:w="6"/><text x="95.4709%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (6 samples, 0.18%)</title><rect x="95.2209%" y="645" width="0.1803%" height="15" fill="rgb(207,137,27)" fg:x="3168" fg:w="6"/><text x="95.4709%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (6 samples, 0.18%)</title><rect x="95.2209%" y="629" width="0.1803%" height="15" fill="rgb(210,8,46)" fg:x="3168" fg:w="6"/><text x="95.4709%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (5 samples, 0.15%)</title><rect x="95.2510%" y="613" width="0.1503%" height="15" fill="rgb(240,16,54)" fg:x="3169" fg:w="5"/><text x="95.5010%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.15%)</title><rect x="95.2510%" y="597" width="0.1503%" height="15" fill="rgb(211,209,29)" fg:x="3169" fg:w="5"/><text x="95.5010%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.15%)</title><rect x="95.2510%" y="581" width="0.1503%" height="15" fill="rgb(226,228,24)" fg:x="3169" fg:w="5"/><text x="95.5010%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.03%)</title><rect x="95.3712%" y="565" width="0.0301%" height="15" fill="rgb(222,84,9)" fg:x="3173" fg:w="1"/><text x="95.6212%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.18%)</title><rect x="95.5816%" y="693" width="0.1803%" height="15" fill="rgb(234,203,30)" fg:x="3180" fg:w="6"/><text x="95.8316%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (4 samples, 0.12%)</title><rect x="96.0325%" y="645" width="0.1202%" height="15" fill="rgb(238,109,14)" fg:x="3195" fg:w="4"/><text x="96.2825%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (15 samples, 0.45%)</title><rect x="95.7920%" y="677" width="0.4509%" height="15" fill="rgb(233,206,34)" fg:x="3187" fg:w="15"/><text x="96.0420%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (15 samples, 0.45%)</title><rect x="95.7920%" y="661" width="0.4509%" height="15" fill="rgb(220,167,47)" fg:x="3187" fg:w="15"/><text x="96.0420%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.09%)</title><rect x="96.1527%" y="645" width="0.0902%" height="15" fill="rgb(238,105,10)" fg:x="3199" fg:w="3"/><text x="96.4027%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.51%)</title><rect x="95.7619%" y="693" width="0.5110%" height="15" fill="rgb(213,227,17)" fg:x="3186" fg:w="17"/><text x="96.0119%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="96.2429%" y="677" width="0.0301%" height="15" fill="rgb(217,132,38)" fg:x="3202" fg:w="1"/><text x="96.4929%" y="687.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (1 samples, 0.03%)</title><rect x="96.2729%" y="693" width="0.0301%" height="15" fill="rgb(242,146,4)" fg:x="3203" fg:w="1"/><text x="96.5229%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.39%)</title><rect x="96.3330%" y="677" width="0.3907%" height="15" fill="rgb(212,61,9)" fg:x="3205" fg:w="13"/><text x="96.5830%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="96.7238%" y="677" width="0.0301%" height="15" fill="rgb(247,126,22)" fg:x="3218" fg:w="1"/><text x="96.9738%" y="687.50"></text></g><g><title>ping_node`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.7538%" y="677" width="0.0301%" height="15" fill="rgb(220,196,2)" fg:x="3219" fg:w="1"/><text x="97.0038%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="96.7538%" y="661" width="0.0301%" height="15" fill="rgb(208,46,4)" fg:x="3219" fg:w="1"/><text x="97.0038%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.15%)</title><rect x="96.8440%" y="661" width="0.1503%" height="15" fill="rgb(252,104,46)" fg:x="3222" fg:w="5"/><text x="97.0940%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="96.9943%" y="661" width="0.0301%" height="15" fill="rgb(237,152,48)" fg:x="3227" fg:w="1"/><text x="97.2443%" y="671.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.03%)</title><rect x="97.0243%" y="661" width="0.0301%" height="15" fill="rgb(221,59,37)" fg:x="3228" fg:w="1"/><text x="97.2743%" y="671.50"></text></g><g><title>ping_node`&lt;gossipod::codec::MessageCodec as tokio_util::codec::decoder::Decoder&gt;::decode (10 samples, 0.30%)</title><rect x="96.7839%" y="677" width="0.3006%" height="15" fill="rgb(209,202,51)" fg:x="3220" fg:w="10"/><text x="97.0339%" y="687.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::decode_socket_addr (1 samples, 0.03%)</title><rect x="97.0544%" y="661" width="0.0301%" height="15" fill="rgb(228,81,30)" fg:x="3229" fg:w="1"/><text x="97.3044%" y="671.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::split_to (1 samples, 0.03%)</title><rect x="97.0544%" y="645" width="0.0301%" height="15" fill="rgb(227,42,39)" fg:x="3229" fg:w="1"/><text x="97.3044%" y="655.50"></text></g><g><title>ping_node`bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.03%)</title><rect x="97.0544%" y="629" width="0.0301%" height="15" fill="rgb(221,26,2)" fg:x="3229" fg:w="1"/><text x="97.3044%" y="639.50"></text></g><g><title>ping_node`gossipod::message::Message::from_vec (27 samples, 0.81%)</title><rect x="96.3030%" y="693" width="0.8115%" height="15" fill="rgb(254,61,31)" fg:x="3204" fg:w="27"/><text x="96.5530%" y="703.50"></text></g><g><title>ping_node`gossipod::codec::MessageCodec::decode_bytes (1 samples, 0.03%)</title><rect x="97.0845%" y="677" width="0.0301%" height="15" fill="rgb(222,173,38)" fg:x="3230" fg:w="1"/><text x="97.3345%" y="687.50"></text></g><g><title>ping_node`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (17 samples, 0.51%)</title><rect x="97.1145%" y="677" width="0.5110%" height="15" fill="rgb(218,50,12)" fg:x="3231" fg:w="17"/><text x="97.3645%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (17 samples, 0.51%)</title><rect x="97.1145%" y="661" width="0.5110%" height="15" fill="rgb(223,88,40)" fg:x="3231" fg:w="17"/><text x="97.3645%" y="671.50"></text></g><g><title>ping_node`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (18 samples, 0.54%)</title><rect x="97.1145%" y="693" width="0.5410%" height="15" fill="rgb(237,54,19)" fg:x="3231" fg:w="18"/><text x="97.3645%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.03%)</title><rect x="97.6255%" y="677" width="0.0301%" height="15" fill="rgb(251,129,25)" fg:x="3248" fg:w="1"/><text x="97.8755%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`kevent (6 samples, 0.18%)</title><rect x="97.6555%" y="677" width="0.1803%" height="15" fill="rgb(238,97,19)" fg:x="3249" fg:w="6"/><text x="97.9055%" y="687.50"></text></g><g><title>ping_node`tokio::runtime::io::driver::Handle::deregister_source (7 samples, 0.21%)</title><rect x="97.6555%" y="693" width="0.2104%" height="15" fill="rgb(240,169,18)" fg:x="3249" fg:w="7"/><text x="97.9055%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::io::registration_set::RegistrationSet::deregister (1 samples, 0.03%)</title><rect x="97.8359%" y="677" width="0.0301%" height="15" fill="rgb(230,187,49)" fg:x="3255" fg:w="1"/><text x="98.0859%" y="687.50"></text></g><g><title>ping_node`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="97.8359%" y="661" width="0.0301%" height="15" fill="rgb(209,44,26)" fg:x="3255" fg:w="1"/><text x="98.0859%" y="671.50"></text></g><g><title>ping_node`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="97.8359%" y="645" width="0.0301%" height="15" fill="rgb(244,0,6)" fg:x="3255" fg:w="1"/><text x="98.0859%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.03%)</title><rect x="97.8659%" y="661" width="0.0301%" height="15" fill="rgb(248,18,21)" fg:x="3256" fg:w="1"/><text x="98.1159%" y="671.50"></text></g><g><title>ping_node`tokio::runtime::park::wake (13 samples, 0.39%)</title><rect x="97.8659%" y="677" width="0.3907%" height="15" fill="rgb(245,180,19)" fg:x="3256" fg:w="13"/><text x="98.1159%" y="687.50"></text></g><g><title>ping_node`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.36%)</title><rect x="97.8960%" y="661" width="0.3607%" height="15" fill="rgb(252,118,36)" fg:x="3257" fg:w="12"/><text x="98.1460%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (12 samples, 0.36%)</title><rect x="97.8960%" y="645" width="0.3607%" height="15" fill="rgb(210,224,19)" fg:x="3257" fg:w="12"/><text x="98.1460%" y="655.50"></text></g><g><title>ping_node`gossipod::listener::EventListener&lt;M&gt;::handle_stream::_{{closure}}::_{{closure}} (96 samples, 2.89%)</title><rect x="95.4013%" y="709" width="2.8855%" height="15" fill="rgb(218,30,24)" fg:x="3174" fg:w="96"/><text x="95.6513%" y="719.50">pi..</text></g><g><title>ping_node`tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (14 samples, 0.42%)</title><rect x="97.8659%" y="693" width="0.4208%" height="15" fill="rgb(219,75,50)" fg:x="3256" fg:w="14"/><text x="98.1159%" y="703.50"></text></g><g><title>ping_node`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.03%)</title><rect x="98.2567%" y="677" width="0.0301%" height="15" fill="rgb(234,72,50)" fg:x="3269" fg:w="1"/><text x="98.5067%" y="687.50"></text></g><g><title>ping_node`gossipod::message::Message::from_vec (5 samples, 0.15%)</title><rect x="98.2867%" y="709" width="0.1503%" height="15" fill="rgb(219,100,48)" fg:x="3270" fg:w="5"/><text x="98.5367%" y="719.50"></text></g><g><title>ping_node`ping_node::SwimNode::start::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="98.4370%" y="709" width="0.0301%" height="15" fill="rgb(253,5,41)" fg:x="3275" fg:w="1"/><text x="98.6870%" y="719.50"></text></g><g><title>ping_node`gossipod::ip_addr::IpAddress::find_system_ip (1 samples, 0.03%)</title><rect x="98.4370%" y="693" width="0.0301%" height="15" fill="rgb(247,181,11)" fg:x="3275" fg:w="1"/><text x="98.6870%" y="703.50"></text></g><g><title>ping_node`if_addrs::get_if_addrs (1 samples, 0.03%)</title><rect x="98.4370%" y="677" width="0.0301%" height="15" fill="rgb(222,223,25)" fg:x="3275" fg:w="1"/><text x="98.6870%" y="687.50"></text></g><g><title>libsystem_info.dylib`if_nametoindex (1 samples, 0.03%)</title><rect x="98.4370%" y="661" width="0.0301%" height="15" fill="rgb(214,198,28)" fg:x="3275" fg:w="1"/><text x="98.6870%" y="671.50"></text></g><g><title>libsystem_info.dylib`getifaddrs (1 samples, 0.03%)</title><rect x="98.4370%" y="645" width="0.0301%" height="15" fill="rgb(230,46,43)" fg:x="3275" fg:w="1"/><text x="98.6870%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.03%)</title><rect x="98.4370%" y="629" width="0.0301%" height="15" fill="rgb(233,65,53)" fg:x="3275" fg:w="1"/><text x="98.6870%" y="639.50"></text></g><g><title>ping_node`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="98.4671%" y="709" width="0.0301%" height="15" fill="rgb(221,121,27)" fg:x="3276" fg:w="1"/><text x="98.7171%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.03%)</title><rect x="98.4971%" y="709" width="0.0301%" height="15" fill="rgb(247,70,47)" fg:x="3277" fg:w="1"/><text x="98.7471%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (919 samples, 27.62%)</title><rect x="70.9348%" y="725" width="27.6225%" height="15" fill="rgb(228,85,35)" fg:x="2360" fg:w="919"/><text x="71.1848%" y="735.50">ping_node`tokio::runtime::task::core::Core&lt;T..</text></g><g><title>ping_node`tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (1 samples, 0.03%)</title><rect x="98.5272%" y="709" width="0.0301%" height="15" fill="rgb(209,50,18)" fg:x="3278" fg:w="1"/><text x="98.7772%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.03%)</title><rect x="98.5573%" y="725" width="0.0301%" height="15" fill="rgb(250,19,35)" fg:x="3279" fg:w="1"/><text x="98.8073%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.06%)</title><rect x="98.5873%" y="709" width="0.0601%" height="15" fill="rgb(253,107,29)" fg:x="3280" fg:w="2"/><text x="98.8373%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.03%)</title><rect x="98.7376%" y="693" width="0.0301%" height="15" fill="rgb(252,179,29)" fg:x="3285" fg:w="1"/><text x="98.9876%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.15%)</title><rect x="98.6474%" y="709" width="0.1503%" height="15" fill="rgb(238,194,6)" fg:x="3282" fg:w="5"/><text x="98.8974%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.03%)</title><rect x="98.7677%" y="693" width="0.0301%" height="15" fill="rgb(238,164,29)" fg:x="3286" fg:w="1"/><text x="99.0177%" y="703.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;gossipod::Gossipod::handle_ping::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="98.7977%" y="709" width="0.0301%" height="15" fill="rgb(224,25,9)" fg:x="3287" fg:w="1"/><text x="99.0477%" y="719.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;gossipod::listener::EventListener&lt;gossipod::node::DefaultMetadata&gt;::handle_stream::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="98.8278%" y="709" width="0.0301%" height="15" fill="rgb(244,153,23)" fg:x="3288" fg:w="1"/><text x="99.0778%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.03%)</title><rect x="98.8578%" y="709" width="0.0301%" height="15" fill="rgb(212,203,14)" fg:x="3289" fg:w="1"/><text x="99.1078%" y="719.50"></text></g><g><title>ping_node`core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;gossipod::listener::EventListener&lt;gossipod::node::DefaultMetadata&gt;::handle_stream::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="98.8578%" y="693" width="0.0301%" height="15" fill="rgb(220,164,20)" fg:x="3289" fg:w="1"/><text x="99.1078%" y="703.50"></text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (12 samples, 0.36%)</title><rect x="98.5873%" y="725" width="0.3607%" height="15" fill="rgb(222,203,48)" fg:x="3280" fg:w="12"/><text x="98.8373%" y="735.50"></text></g><g><title>ping_node`tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (2 samples, 0.06%)</title><rect x="98.8879%" y="709" width="0.0601%" height="15" fill="rgb(215,159,22)" fg:x="3290" fg:w="2"/><text x="99.1379%" y="719.50"></text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (4 samples, 0.12%)</title><rect x="98.9480%" y="725" width="0.1202%" height="15" fill="rgb(216,183,47)" fg:x="3292" fg:w="4"/><text x="99.1980%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.09%)</title><rect x="99.0682%" y="725" width="0.0902%" height="15" fill="rgb(229,195,25)" fg:x="3296" fg:w="3"/><text x="99.3182%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (979 samples, 29.43%)</title><rect x="69.7625%" y="757" width="29.4259%" height="15" fill="rgb(224,132,51)" fg:x="2321" fg:w="979"/><text x="70.0125%" y="767.50">ping_node`tokio::runtime::scheduler::multi_thre..</text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (963 samples, 28.94%)</title><rect x="70.2435%" y="741" width="28.9450%" height="15" fill="rgb(240,63,7)" fg:x="2337" fg:w="963"/><text x="70.4935%" y="751.50">ping_node`tokio::runtime::task::harness::Harnes..</text></g><g><title>ping_node`tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1 samples, 0.03%)</title><rect x="99.1584%" y="725" width="0.0301%" height="15" fill="rgb(249,182,41)" fg:x="3299" fg:w="1"/><text x="99.4084%" y="735.50"></text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.21%)</title><rect x="99.1885%" y="757" width="0.2104%" height="15" fill="rgb(243,47,26)" fg:x="3300" fg:w="7"/><text x="99.4385%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1,749 samples, 52.57%)</title><rect x="46.8590%" y="773" width="52.5699%" height="15" fill="rgb(233,48,2)" fg:x="1559" fg:w="1749"/><text x="47.1090%" y="783.50">ping_node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>ping_node`tokio::runtime::task::raw::poll (1 samples, 0.03%)</title><rect x="99.3989%" y="757" width="0.0301%" height="15" fill="rgb(244,165,34)" fg:x="3307" fg:w="1"/><text x="99.6489%" y="767.50"></text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.03%)</title><rect x="99.4289%" y="773" width="0.0301%" height="15" fill="rgb(207,89,7)" fg:x="3308" fg:w="1"/><text x="99.6789%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (1,804 samples, 54.22%)</title><rect x="45.2660%" y="933" width="54.2230%" height="15" fill="rgb(244,117,36)" fg:x="1506" fg:w="1804"/><text x="45.5160%" y="943.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (1,804 samples, 54.22%)</title><rect x="45.2660%" y="917" width="54.2230%" height="15" fill="rgb(226,144,34)" fg:x="1506" fg:w="1804"/><text x="45.5160%" y="927.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>ping_node`std::sys::pal::unix::thread::Thread::new::thread_start (1,804 samples, 54.22%)</title><rect x="45.2660%" y="901" width="54.2230%" height="15" fill="rgb(213,23,19)" fg:x="1506" fg:w="1804"/><text x="45.5160%" y="911.50">ping_node`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>ping_node`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,803 samples, 54.19%)</title><rect x="45.2961%" y="885" width="54.1930%" height="15" fill="rgb(217,75,12)" fg:x="1507" fg:w="1803"/><text x="45.5461%" y="895.50">ping_node`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>ping_node`std::sys::backtrace::__rust_begin_short_backtrace (1,803 samples, 54.19%)</title><rect x="45.2961%" y="869" width="54.1930%" height="15" fill="rgb(224,159,17)" fg:x="1507" fg:w="1803"/><text x="45.5461%" y="879.50">ping_node`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>ping_node`tokio::runtime::blocking::pool::Inner::run (1,754 samples, 52.72%)</title><rect x="46.7689%" y="853" width="52.7202%" height="15" fill="rgb(217,118,1)" fg:x="1556" fg:w="1754"/><text x="47.0189%" y="863.50">ping_node`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,754 samples, 52.72%)</title><rect x="46.7689%" y="837" width="52.7202%" height="15" fill="rgb(232,180,48)" fg:x="1556" fg:w="1754"/><text x="47.0189%" y="847.50">ping_node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>ping_node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,754 samples, 52.72%)</title><rect x="46.7689%" y="821" width="52.7202%" height="15" fill="rgb(230,27,33)" fg:x="1556" fg:w="1754"/><text x="47.0189%" y="831.50">ping_node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::run (1,754 samples, 52.72%)</title><rect x="46.7689%" y="805" width="52.7202%" height="15" fill="rgb(205,31,21)" fg:x="1556" fg:w="1754"/><text x="47.0189%" y="815.50">ping_node`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>ping_node`tokio::runtime::context::runtime::enter_runtime (1,754 samples, 52.72%)</title><rect x="46.7689%" y="789" width="52.7202%" height="15" fill="rgb(253,59,4)" fg:x="1556" fg:w="1754"/><text x="47.0189%" y="799.50">ping_node`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>ping_node`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.03%)</title><rect x="99.4590%" y="773" width="0.0301%" height="15" fill="rgb(224,201,9)" fg:x="3309" fg:w="1"/><text x="99.7090%" y="783.50"></text></g><g><title>all (3,327 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(229,206,30)" fg:x="0" fg:w="3327"/><text x="0.2500%" y="959.50"></text></g><g><title>ping_node`mio::poll::Poll::poll (17 samples, 0.51%)</title><rect x="99.4890%" y="933" width="0.5110%" height="15" fill="rgb(212,67,47)" fg:x="3310" fg:w="17"/><text x="99.7390%" y="943.50"></text></g></svg></svg>